`
--reload language
if(uiTranslationFile) then
	Infinity_DoFile("L_" .. uiTranslationFile)
else
	Infinity_DoFile("L_en_us")
end

iHaveSCS = false --set to 'true' if you do have SCS

characters = {}
statusEffects = { }
currentID = 16974083
currentPanelID = 0
listMetaInfo = {}
combatLog = {}

Infinity_SetHighlightColors(151,112,0,200, 151,112,0,100, 151,112,0,0)

function scsSummonWidget()
	  C:Eval('CreateCreatureObject("dw#diffi",Player1,0,0,0)')
end

function isScaledUI()
		local val = Infinity_GetINIValue('Graphics','Scale UI', 1)
		if (val ~= 0) then
			return 1
		else
			return nil
		end
end

function updateAttrTable()
	if (characters[currentID] ~= nil) then
		attributeItems = {
			{ characters[currentID].attr.str, 9582 },
			{ characters[currentID].attr.dex, 9584 },
			{ characters[currentID].attr.con, 9583 },
			{ characters[currentID].attr.int, 9585 },
			{ characters[currentID].attr.wis, 9586 },
			{ characters[currentID].attr.cha, 9587 }
		}
		statusEffects = { }
		for k, v in pairs(characters[currentID].statusEffects) do
			table.insert(statusEffects, v)
		end
		buildRecordAbilities()
		buildRecordStats()
		buildRecordInfos()
	end
end

--function characterDescString(char)
	--return Infinity_FetchString(char.race) .. "\n" .. Infinity_FetchString(char.alignment) .. "\n" .. Infinity_FetchString(char.gender)
--end

function displaySTR()
	local txt = characters[currentID].attr.str.current

	if (characters[currentID].attr.str.current == 18 and characters[currentID].attr.str.extra ~= 0) then
		txt = txt .. '/' .. string.format('%02d', characters[currentID].attr.str.extra % 100)
	end
	if (characters[currentID].attr.str.current > characters[currentID].attr.str.base or characters[currentID].attr.str.extra > characters[currentID].attr.str.extraBase) then
		txt = '^G' .. txt .. '^-'
	end
	if (characters[currentID].attr.str.current < characters[currentID].attr.str.base or characters[currentID].attr.str.extra < characters[currentID].attr.str.extraBase) then
		txt = '^R' .. txt .. '^-'
	end
	return txt
end

function displayBuff(current, base)
	if(current > base) then
		return '^G' .. current .. '^-'
	elseif (current < base) then
		return '^R' .. current .. '^-'
	end
	return current
end

function displayAttr(index)
	if (index == 1) then
		return displaySTR()
	else
		return displayBuff(attributeItems[index][1].current, attributeItems[index][1].base)
	end
end

function CurrentlyInGame()
	return characterScreen:IsInGame()
end

function buildRecordAbilities()
	recordAbilities = {}

	table.insert(recordAbilities, {1,t("ABILITIES_TITLE")})
	for i=1,6 do
		table.insert(recordAbilities, {2,Infinity_FetchString(attributeItems[i][1].strRef),displayAttr(i)})
	end

end

function buildRecordStats()
	recordStats = {}

	--[[table.insert(recordStats, {1,t("COMBAT_STATS_LABEL")})
	table.insert(recordStats, {2,t("ARMOR_CLASS_LABEL"),characters[currentID].AC.current})
	table.insert(recordStats, {2,t("HIT_POINTS_LABEL"),characters[currentID].HP.current .. ' / ' .. characters[currentID].HP.max})
	table.insert(recordStats, {2,t("THAC0_LABEL"),characters[currentID].THAC0.current})
	if characters[currentID].THAC0.offhand then
		table.insert(recordStats, {2,t("OFF_HAND_THAC0"),characters[currentID].THAC0.offhand})
	else
		table.insert(recordStats, {2,t("OFF_HAND_THAC0"),'-'})
	end
	table.insert(recordStats, {2,t("DAMAGE_LABEL"),characters[currentID].damage.min .. ' - ' .. characters[currentID].damage.max})
	if characters[currentID].damage.minOffhand and characters[currentID].damage.maxOffhand then
		table.insert(recordStats, {2,t("OFF_HAND_DAMAGE"),characters[currentID].damage.minOffhand .. ' - ' .. characters[currentID].damage.maxOffhand})
	else
		table.insert(recordStats, {2,t("OFF_HAND_DAMAGE"),'-'})
	end
	table.insert(recordStats, {2,t("NUM_ATTACKS_LABEL"),characters[currentID].proficiencies.numAttacks.current})]]--

	table.insert(recordStats, {1,t("SAVING_THROWS_LABEL")})
	for s in (characters[currentID].proficiencies.savingThrows.."\n"):gmatch("(.-)\n") do
		local pos = s:find(":", 1)
		table.insert(recordStats, {2,s:sub(1, pos - 1),s:sub(pos + 2)})
	end
end
function empty(t)
	if next(t) == nil then
		return true
	end
	return false
end
function buildRecordInfos()
	recordInfos = {}
	
	if characters[currentID].classlevel.second then
		local strRef = characters[currentID].classlevel.second.active and 19721 or 19722
		table.insert(recordInfos, {1,Infinity_FetchString(strRef)})
		table.insert(recordInfos, {1,""})
	end
	table.insert(recordInfos, {1,characters[currentID].classlevel.first.details})
	if characters[currentID].classlevel.second then
		table.insert(recordInfos, {1,""})
		table.insert(recordInfos, {1,characters[currentID].classlevel.second.details})
	end
	if characters[currentID].classlevel.third then
		table.insert(recordInfos, {1,""})
		table.insert(recordInfos, {1,characters[currentID].classlevel.third.details})
	end
	
	--table.insert(recordInfos, {1,""})
	--table.insert(recordInfos, {4,getPercent(characters[currentID].level.xp, characters[currentID].level.nextLvlXp)})
	
	if not empty(characters[currentID].statusEffects) then
		table.insert(recordInfos, {1,""})
		table.sort (statusEffects, function (k1, k2) 
		return string.lower(Infinity_FetchString(k1.strRef)) < string.lower(Infinity_FetchString(k2.strRef)) end )
		for k, v in pairs(statusEffects) do
			table.insert(recordInfos, {2,v})
		end
	end
	table.insert(recordInfos, {1,""})
	local reputation = Infinity_FetchString(characters[currentID].proficiencies.reputation.strRef) .. ": " ..  characters[currentID].proficiencies.reputation.current
	table.insert(recordInfos, {1,reputation})
	
	table.insert(recordInfos, {1,""})
	table.insert(recordInfos, {3,t("RESISTANCES_LABEL") .. ': '})
	table.insert(recordInfos, {1,characters[currentID].proficiencies.resistances})

	--table.insert(recordInfos, {1,""})
	--table.insert(recordInfos, {3,t("PROFICIENCIES_LABEL")})
	
	--if not empty(characters[currentID].proficiencies.class_skills) then
		table.insert(recordInfos, {1,""})
		table.insert(recordInfos, {3,t("SKILLS_LABEL") .. ': '})
		for k, v in ipairs(characters[currentID].proficiencies.class_skills) do
			local skills = Infinity_FetchString(v.strRef) .. ": " .. v.current
			table.insert(recordInfos, {1,skills})
		end
		local lore = Infinity_FetchString(characters[currentID].proficiencies.lore.strRef) .. ": " ..  characters[currentID].proficiencies.lore.current
		table.insert(recordInfos, {1,lore})
	--end

	table.insert(recordInfos, {1,""})
	table.insert(recordInfos, {3,t("PROFICIENCIES_LABEL") .. ': '})
	table.insert(recordInfos, {1,characters[currentID].proficiencies.weapons.current})
	--table.insert(recordInfos, {1,""})
	if characters[currentID].proficiencies.fightingstyles.current ~= "" then
		--table.insert(recordInfos, {3,t("FIGHTING_STYLES_LABEL") .. ': '})
		table.insert(recordInfos, {1, characters[currentID].proficiencies.fightingstyles.current})
	end
		table.insert(recordInfos, {1,""})
		table.insert(recordInfos, {1,t("NUM_ATTACKS_LABEL") .. ': ' .. "^0xFF050F5F" .. characters[currentID].proficiencies.numAttacks.current})
		table.insert(recordInfos, {1,""})
	
	table.insert(recordInfos, {3,Infinity_FetchString(10315) .. ': '})
	for k, v in ipairs(characters[currentID].proficiencies.ability) do
		table.insert(recordInfos, {1,v.current})
	end
	
	table.insert(recordInfos, {1,""})
	local script = t("CURRENT_SCRIPT_LABEL") .. ": " ..  characters[currentID].proficiencies.currentScript
	table.insert(recordInfos, {1,script})
	table.insert(recordInfos, {1,""})
end

function getPercent(first, second)
	tempNumber = ( first/second ) *100
	return tempNumber
end

function getNextLevelString()
	local nextLevelXp = characters[currentID].level.nextLvlXp - characters[currentID].level.xp
	local str = ""
	if(nextLevelXp > 0) then
		str = t("NEXT_LEVEL_LABEL")
		str = str .. " "
		str = str .. nextLevelXp
		str = str .. " "
		str = str .. t("XP_LABEL")
	else
		str = t("READY_TO_LEVEL_LABEL")
	end
	return str
	
end

function showthac0(id)
	if ( characters[id].THAC0.detailsOffhand ~= nil and characters[id].THAC0.detailsOffhand ~= "" ) then
			return characters[id].THAC0.current .. '\n' .. characters[id].THAC0.offhand
	else
			return characters[id].THAC0.current
	end
end	

function showdamage(id, isDetails)
	if isDetails == false then
		if ( characters[id].damage.maxOffhand ) then
				return characters[id].damage.min .. ' - ' .. characters[id].damage.max .. '\n' .. characters[id].damage.minOffhand .. '-' .. characters[id].damage.maxOffhand
		else
				return characters[id].damage.min .. ' - ' .. characters[id].damage.max
		end
	else
		if ( characters[id].damage.maxOffhand ) then
				return  t('DAMAGE_LABEL') .. '\n' .. characters[id].damage.details.."\n\n"..characters[id].damage.detailsOffhand
		else
				return t('DAMAGE_LABEL') .. '\n' .. characters[id].damage.details
		end
	end	
end
findLanguage()
`
menu
{
	name 'CHARACTER'
	modal lua "not CurrentlyInGame()"
	align center center
	ignoreEsc
	onopen
	"
		if(CurrentlyInGame()) then
			pushSidebars()
		end
		characterViewable = characterScreen:IsCharacterViewable()
		updateAttrTable()
		TT_BuildTitleData('CHARACTER_SHEET_LABEL', 364, true)
		TT_CreateTitleChars('CHARACTER_SHEET_LABEL', 'TT_CHARACTER_SHEET', 40, 'TEMPLATE_titlechar_CHARACTER_SHEET')
	"
	onclose
	"
		popSidebars()
		TT_DestroyTitleChars('CHARACTER_SHEET_LABEL', 'TEMPLATE_titlechar_CHARACTER_SHEET')
	"

	label
	{
		area 0 0 864 710
		mosaic GUIREC2
	}
	template
    {
        label
        {
            enabled "true"
            ignoreEvents
            area 0 0 -1 -1
            bam "TTREALMS"
            sequence lua "TT_TitleData['CHARACTER_SHEET_LABEL'][instanceId].seq"
            align center center
        }
        name "TEMPLATE_titlechar_CHARACTER_SHEET"
    }
	label
    {
        name "TT_CHARACTER_SHEET"
        area 38 40 364 40
		--text "CHARACTER_SHEET_LABEL"
		--text style "title"
    }
	label --shadow
	{
		area 436 25 402 49
		text lua "characters[currentID].name"
		text style "label"
		text point 27
		text color 5
	}
	label
	{
		area 438 27 402 49
		text lua "characters[currentID].name"
		text style "label"
		text point 27
	}
	label --shadow
	{
		area 440 74 394 38
		text lua "characters[currentID].class"
		text style "label"
		text point 18
		text color 5
	}
	label
	{
		area 442 76 394 38
		text lua "characters[currentID].class"
		text style "label"
		text point 18
	}
	label
	{
		area 355 138 161 253
		bitmap lua "characters[currentID].portrait"
	}
	list
	{
		column
		{
			width 100						
			label
			{
				area		0 0 160 30
				enabled		"recordAbilities[rowNumber][1] == 2"
				text		lua "recordAbilities[rowNumber][2]"
				text style 'label'
				text point 18
				text align	right center
				text shadow 1
			}
			label
			{
				area		176 0 40 30
				enabled		"recordAbilities[rowNumber][1] == 2"
				text		lua "recordAbilities[rowNumber][3]"
				text style 'label'
				text point 18
				text align center center
				text shadow 1
			}
		}
		enabled "characterViewable"
		area 96 136 238 188
		rowheight dynamic
		table "recordAbilities"
		hidehighlight
	}
	list
	{
		column
		{
			width 100
			label
			{
				area		0 0 -1 -1
				--respectClipping
				enabled		"recordStats[rowNumber][1] == 1"
				text		lua "recordStats[rowNumber][2]"
				text style  'label'
				text point 18
				--text color 	'H'
				text align	center center
				pad 0 10 0 7
				text shadow 1
			}				
			label
			{
				area		0 0 211 20
				enabled		"recordStats[rowNumber][1] == 2"
				text		lua "recordStats[rowNumber][2]"
				text style 'normal'
				text align	right center
				text shadow 1
			}
			label
			{
				area		220 0 85 20
				enabled		"recordStats[rowNumber][1] == 2"
				text		lua "recordStats[rowNumber][3]"
				text style 'normal'
				text align center center
				pad 0 0 5 0
				text shadow 1
			}
		}
		enabled "characterViewable"
		area 34 328 305 152
		rowheight dynamic
		table "recordStats"
		hidehighlight
		scrollbar 'GUISCRC'
	}
	list
	{
		column
		{
			width 100
			label
				{
					area		0 0 -1 -1
					enabled		"recordInfos[rowNumber][1] == 3"
					text		lua "recordInfos[rowNumber][2]"
					text style 'bold_parchment'
					text point 14
					text color 'L'
					text useFontZoom  1
					text align	left center
				}
			label
			{
				area		0 0 -1 -1
				enabled		"recordInfos[rowNumber][1] == 1"
				text		lua "recordInfos[rowNumber][2]"
				text style 'normal_parchment'
				text align	left center
				text color 'L'
			}
			label
			{
				area		0 2 22 -1
				enabled		"recordInfos[rowNumber][1] == 2"
				bam			lua "recordInfos[rowNumber][2].bam"
				sequence	lua "recordInfos[rowNumber][2].current"
				text align	left center
			}
			label
			{
				area		22 0 -1 -1
				text		lua "Infinity_FetchString(recordInfos[rowNumber][2].strRef)"
				text style  'normal_parchment'
				text align	left center
				text color 'L'
			}
			label
			{
				area		0 0 190 20
				enabled		"recordInfos[rowNumber][1] == 4"
				text style  'label'
				text		lua "getNextLevelString()"
				progressbar lua "getPercent(characters[currentID].level.xp, characters[currentID].level.nextLvlXp)" --progress percentage, number 0-100
				greyscale	0 --display greyscale or not, number 0-1
				progressbar color	62 76 71 255	 --color when percentage != 100
				progressbar full	10 10 10 255	 --color when percentage == 100
			}
		}
		enabled "characterViewable"
		area 560 156 254 318
		rowheight dynamic
		table "recordInfos"
		hidehighlight
		scrollbar 'GUIKNSBR'
	}
	label
	{
		area 355 402 161 30
		text lua "Infinity_FetchString(characters[currentID].race)"
		text style 'label'
		text align center center
		text shadow 1
	}
	label
	{
		area 355 436 161 30
		text lua "Infinity_FetchString(characters[currentID].alignment)"
		text style 'label'
		text align center center
		text shadow 1
	}
	label
	{
		area 355 470 161 30
		text lua "Infinity_FetchString(characters[currentID].gender)"
		text style 'label'
		text align center center
		text shadow 1
	}
	text
	{
		enabled 'false'
		area		250 590 85 29
		text lua	"t('ARMOR_CLASS_LABEL')"
		text style	"label"
		text point 10
		text shadow 1
		align center center
	}
	text
	{
		area		262 608 56 64
		tooltip lua "t('ARMOR_CLASS_LABEL') .. '\n' .. characters[currentID].AC.details"
		text lua	"characters[currentID].AC.current"
		text style	"title"
		text point 27
		align center center
	}
	text
	{
		enabled 'false'
		area		346 590 79 29
		text lua	"t('HIT_POINTS_LABEL')"
		text style	"label"
		text point 10
		text shadow 1
		align center center
	}
	text
	{
		area		355 608 64 64
		tooltip lua "t('HIT_POINTS_LABEL') .. '\n' .. characters[currentID].HP.details"
		text lua	"characters[currentID].HP.current .. '\n' .. characters[currentID].HP.max"
		text style	"title"
		align center center
	}
	text
	{
		enabled 'false'
		area		446 590 73 29
		text lua	"t('THAC0_LABEL')"
		text style	"label"
		text point 10
		text shadow 1
		align center center
	}
	text
	{
		area		452 608 64 64
		tooltip lua ""
		tooltip lua "t('THAC0_LABEL') .. '\n' .. characters[currentID].THAC0.details"
		text lua "showthac0(currentID)"
		text style	"title"
		text point 27
		align center center
	}
	text
	{
		enabled 'false'
		area		540 590 69 29
		text lua	"t('DAMAGE_LABEL')"
		text style	"label"
		text point 10
		text shadow 1
		align center center
	}
	text
	{
		area		551 614 51 55
		tooltip lua "showdamage(currentID, true)"
		--text lua	"characters[currentID].damage.min .. ' - ' .. characters[currentID].damage.max"
		text lua "showdamage(currentID, false)"
		text style	"title"
		text point 20
		align center center
	}
	button
	{
		clickable lua "CurrentlyInGame() and characterScreen:IsLevelUpButtonClickable()"
		area 636 614 188 44
		bam BIGBUTT
		text 'LEVEL_UP_BUTTON'
		text style "button"
		text shadow 1
		pulse lua "CurrentlyInGame() and characterScreen:IsLevelUpButtonClickable()"
		action
		"
			characterScreen:OnLevelUpButtonClick()
		"
	}
	button
	{
		clickable lua "CurrentlyInGame() and characterScreen:IsDualClassButtonClickable()"
		area 34 614 188 44
		bam BIGBUTT
		text 'DUAL_CLASS_BUTTON'
		text style "button"
		text shadow 1
		action
		"
			characterScreen:OnDualClassButtonClick()
		"
	}
	button
	{
		on escape
		enabled "not CurrentlyInGame()"
		area 440 550 364 32
		bam GUIRECC
		ScaleToClip
		sequenceonce lua "Infinity_RandomNumber(0, 3)"
		text 'DONE_BUTTON'
		text style "button"
		text shadow 1
		action
		"
			Infinity_PopMenu()
		"
	}
	button
	{
		clickable lua "characterViewable"
		area 60 511 364 32
		bam GUIRECC
		ScaleToClip
		sequenceonce lua "Infinity_RandomNumber(0, 3)"
		text 'INFORMATION_BUTTON'
		text style "button"
		text shadow 1
		action
		"
			Infinity_PushMenu('CHARACTER_INFORMATION')
		"
	}
	button
	{
		clickable lua "CurrentlyInGame() and characterScreen:IsReformPartyButtonClickable()"
		area 60 550 364 32
		bam GUIRECC
		ScaleToClip
		sequenceonce lua "Infinity_RandomNumber(0, 3)"
		text 'REFORM_PARTY_BUTTON'
		text style "button"
		text shadow 1
		action
		"
			characterScreen:OnReformPartyButtonClick()
		"
	}
	button
	{
		clickable lua "CurrentlyInGame() and characterScreen:IsMultiPlayerModifyable()"
		area 440 511 364 32
		bam GUIRECC
		ScaleToClip
		sequenceonce lua "Infinity_RandomNumber(0, 3)"
		text 'CUSTOMIZE_BUTTON'
		text style "button"
		text shadow 1
		action
		"
				characterScreen:OnCustomizeButtonClick()
		"
	}
	button
	{
		enabled "CurrentlyInGame()"
		clickable lua "CurrentlyInGame() and characterScreen:IsExportButtonClickable()"
		area 440 550 364 32
		bam GUIRECC
		ScaleToClip
		sequenceonce lua "Infinity_RandomNumber(0, 3)"
		text 'EXPORT_BUTTON'
		text style "button"
		text shadow 1
		action
		"
			characterScreen:OnExportButtonClick()
		"
	}
}
menu
{
	name 'CHARACTER_CUSTOMIZE'
	align center center
	modal
	ignoreesc
	onOpen
	"
		currentPanelID = const.CUSTOMIZE_ID
	"
	label 
	{
		area 0 0 380 540
		mosaic	GUICGWDD
	}

	text
	{
		area 28 326 332 122
		text 11327 --Customize help text
		scrollbar 'GUISCRC'
		text style	normal
	}
	label
	{
		area 22 12 336 38
		text	"CUSTOMIZE_TITLE"
		text style 'label'
		text align left center
		text point 22
		text shadow 1
	}
	button
	{
		area 22 62 336 32
		bam GUIRECC
		scaleToClip
		text style "button"
		text shadow 1
		sequenceonce lua "Infinity_RandomNumber(0, 4)"
		text "APPEARANCE_BUTTON"		
		clickable lua
		"
			characterScreen:IsAppearanceButtonClickable();
		"		
		action 
		"
			characterScreen:OnAppearanceButtonClick()
		"
	}
	button
	{
		area 22 112 336 32
		bam GUIRECC
		scaleToClip
		text style "button"
		text shadow 1
		sequenceonce lua "Infinity_RandomNumber(0, 4)"
		text "SOUNDS_BUTTON"		
		clickable lua
		"
			characterScreen:IsAppearanceButtonClickable();
		"	
		action 
		"
			characterScreen:OnSoundsButtonClick()
		"
	}
	button
	{
		area 22 162 336 32
		bam GUIRECC
		scaleToClip
		text style "button"
		text shadow 1
		sequenceonce lua "Infinity_RandomNumber(0, 4)"
		text "COLORS_BUTTON"		
		clickable lua
		"
			characterScreen:IsAppearanceButtonClickable();
		"	
		action 
		"
			characterScreen:OnHairSkinButtonClick()
		"
	}
	button
	{
		area 22 212 336 32
		bam GUIRECC
		scaleToClip
		text style "button"
		text shadow 1
		sequenceonce lua "Infinity_RandomNumber(0, 4)"
		text "SCRIPT_BUTTON"		
		action 
		"
			characterScreen:OnScriptButtonClick()
		"
	}
	button
	{
		area 22 262 336 32
		bam GUIRECC
		scaleToClip
		text style "button"
		text shadow 1
		sequenceonce lua "Infinity_RandomNumber(0, 4)"
		text "BIOGRAPHY_BUTTON"		
		clickable lua
		"
			characterScreen:IsAppearanceButtonClickable();
		"
		action 
		"
			characterScreen:OnCusomizeBiographyButtonClick()
		"
	}
	button
	{
		on escape
		area 28 480 147 29
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text style "button"
		text shadow 1
		text	"CANCEL_BUTTON"
		action 
		"
			characterScreen:OnCancelButtonClick()
			currentPanelID = 0
			Infinity_PopMenu('CHARACTER_CUSTOMIZE')
		"
	}
	button
	{
		on return
		area 205 480 147 29
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text style "button"
		text shadow 1
		text "DONE_BUTTON"		
		action 
		"
			characterScreen:OnDoneButtonClick()
			currentPanelID = 0
			Infinity_PopMenu('CHARACTER_CUSTOMIZE')
		"
	}
}

menu
{
	name 'CHARACTER_INFORMATION'
	align center center
	modal
	ignoreesc
	onOpen
	"
		TT_BuildTitleData(Infinity_FetchString(13707), 305, true)
		TT_CreateTitleChars(Infinity_FetchString(13707), 'TT_CHARACTER_INFORMATION', 33, 'TEMPLATE_titlechar_CHARACTER_INFORMATION')
	"
	onclose	"TT_DestroyTitleChars(Infinity_FetchString(13707), 'TEMPLATE_titlechar_CHARACTER_INFORMATION')"
	label
	{
		area 0 0 864 710
		mosaic GUISTATS
	}
	template
    {
        label
        {
            enabled "true"
            ignoreEvents
            area 0 0 -1 -1
            bam "TTREALMS"
            sequence lua "TT_TitleData[Infinity_FetchString(13707)][instanceId].seq"
            align center center
        }
        name "TEMPLATE_titlechar_CHARACTER_INFORMATION"
    }
	label
    {
        name "TT_CHARACTER_INFORMATION"
		area 44 42 305 33
		--text lua "Infinity_FetchString(13707)"
		--text style "title"
    }
	label --shadow
	{
		area 436 25 402 49
		text lua "characters[currentID].name"
		text style "label"
		text point 27
		text color 5
	}
	label
	{
		area 438 27 402 49
		text lua "characters[currentID].name"
		text style "label"
		text point 27
	}
	label --shadow
	{
		area 440 74 394 38
		text lua "characters[currentID].class"
		text style "label"
		text point 18
		text color 5
	}
	label
	{
		area 442 76 394 38
		text lua "characters[currentID].class"
		text style "label"
		text point 18
	}
	label
	{
		area 36 410 106 30
		text "CHAPTER_LABEL"
		text style 'label'
		text align center center
		text shadow 1
	}
	label
	{
		area 718 410 106 30
		text "GAME_LABEL"
		text style 'label'
		text align center center
		text shadow 1
	}

	label
	{
		area 106 140 418 50
		text lua "Infinity_FetchString(characters[currentID].Stats.bestenemy.strRef)"
		text style 'label'
		text align right center
		text shadow 1
	}
	label
	{
		area 538 140 280 48
		text lua "characters[currentID].Stats.bestenemy.current"
		text style 'normal'
		text align center center
	}
	label
	{
		area 106 203 418 50
		text lua "Infinity_FetchString(characters[currentID].Stats.timespent.strRef)"
		text style 'label'
		text align right center
		text shadow 1
	}
	label
	{
		area 538 203 280 48
		text lua "characters[currentID].Stats.timespent.current"
		text style 'normal'
		text align center center
	}
	label
	{
		area 106 265 418 50
		text lua "Infinity_FetchString(characters[currentID].Stats.favspell.strRef)"
		text style 'label'
		text align right center
		text shadow 1
	}
	label
	{
		area 538 265 280 48
		text lua "characters[currentID].Stats.favspell.current"
		text style 'normal'
		text align center center
	}
	label
	{
		area 106 326 418 50
		text lua "Infinity_FetchString(characters[currentID].Stats.favweapon.strRef)"
		text style 'label'
		text align right center
		text shadow 1
	}
	label
	{
		area 538 326 280 48
		text lua "characters[currentID].Stats.favweapon.current"
		text style 'normal'
		text align center center
	}

	label
	{
		area 50 444 80 24
		text lua "characters[currentID].Stats.partychapxp.current .. '%'"
		text style 'normal'
		text align center center
	}
	label
	{
		area 172 437 518 37
		text lua "Infinity_FetchString(characters[currentID].Stats.partychapxp.strRef)"
		text style 'label'
		text align center center
		text shadow 1
	}
	label
	{
		area 734 444 80 24
		text lua "characters[currentID].Stats.partygamexp.current .. '%'"
		text style 'normal'
		text align center center
	}

	label
	{
		area 50 486 80 24
		text lua "characters[currentID].Stats.partychapkills.current .. '%'"
		text style 'normal'
		text align center center
	}
	label
	{
		area 172 478 518 38
		text lua "Infinity_FetchString(characters[currentID].Stats.partychapkills.strRef)"
		text style 'label'
		text align center center
		text shadow 1
	}
	label
	{
		area 734 486 80 24
		text lua "characters[currentID].Stats.partygamekills.current .. '%'"
		text style 'normal'
		text align center center
	}

	label
	{
		area 50 526 80 24
		text lua "characters[currentID].Stats.chapxpvalue.current"
		text style 'normal'
		text align center center
	}
	label
	{
		area 172 519 518 38
		text lua "Infinity_FetchString(characters[currentID].Stats.chapxpvalue.strRef)"
		text style 'label'
		text align center center
		text shadow 1
	}
	label
	{
		area 734 526 80 24
		text lua "characters[currentID].Stats.gamexpvalue.current"
		text style 'normal'
		text align center center
	}

	label
	{
		area 50 568 80 24
		text lua "characters[currentID].Stats.chapkills.current"
		text style 'normal'
		text align center center
	}
	label
	{
		area 172 561 518 38
		text lua "Infinity_FetchString(characters[currentID].Stats.chapkills.strRef)"
		text style 'label'
		text align center center
		text shadow 1
	}
	label
	{
		area 734 568 80 24
		text lua "characters[currentID].Stats.gamekills.current"
		text style 'normal'
		text align center center
	}

	button
	{
		on escape
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		area		672 646 162 30
		text style "button"
		text shadow 1
		text "DONE_BUTTON"
		action
		"
			Infinity_PopMenu()
		"
	}
	button
	{
		bam GUIINVHC
		ScaleToClip
		sequenceonce lua "Infinity_RandomNumber(0, 1)"
		area		30 638 250 44
		text style "button"
		text shadow 1
		text "BIOGRAPHY_BUTTON"
		action
		"
			Infinity_PushMenu('CHARACTER_BIO')
		"
	}
	button
	{
		bam GUIINVHC
		ScaleToClip
		sequenceonce lua "Infinity_RandomNumber(0, 1)"
		area		294 638 250 44
		text 'KIT_DESC_LABEL'
		text style "button"
		text shadow 1
		action
		"
			Infinity_PushMenu('CHARACTER_KIT')
		"
	}
}
menu
{
	name 'CHARACTER_BIO'
	align center center
	modal
	ignoreesc
	label
	{
		area 0 0 520 568
		mosaic GUICHISE
	}
	label
	{
		area 16 10 454 42
		text "BIOGRAPHY_TITLE"
		text style 'label'
		text align left center
		text point 22
		text shadow 1
	}
	text
	{
		area 26 68 472 370
		text lua "Infinity_FetchString(characters[currentID].biography)"
		scrollbar 'GUISCRC'
		text style "normal"
	}
	button
	{
		on escape
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		area 308 494 162 30
		text style "button"
		text shadow 1
		text "DONE_BUTTON"
		action
		"
			Infinity_PopMenu()
		"
	}
}

menu
{
	name 'CHARACTER_KIT'
	align center center
	modal
	ignoreesc
	label
	{
		area 0 0 520 568
		mosaic GUICHISE
	}
	label
	{
		area 16 10 454 42
		text "KIT_DESC_LABEL"
		text style 'label'
		text align left center
		text point 22
		text shadow 1
	}
	text
	{
		area 26 68 472 370
		text lua "characters[currentID].kitDesc"
		scrollbar 'GUISCRC'
		text style "normal"
	}
	button
	{
		on escape
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		area 308 494 162 30
		text style "button"
		text shadow 1
		text "DONE_BUTTON"
		action
		"
			Infinity_PopMenu()
		"
	}
}
`
recBioEdit = ""
recBioEditBackup = ""
`
menu
{
	name 'CHARACTER_BIOGRAPHY'
	align center center
	ignoreesc
	onOpen
	"
		recBioEditBackup = recBioEdit
		currentPanelID = 23
		Infinity_FocusTextEdit('recBioEditArea')
		TT_BuildTitleData('BIOGRAPHY_TITLE', 372, true)
		TT_CreateTitleChars('BIOGRAPHY_TITLE', 'TT_CHARACTER_BIOGRAPHY', 42, 'TEMPLATE_titlechar_CHARACTER_BIOGRAPHY')
	"
	onclose	"TT_DestroyTitleChars('BIOGRAPHY_TITLE', 'TEMPLATE_titlechar_CHARACTER_BIOGRAPHY')"
	label
	{
		area 0 0 864 710
		mosaic GUIBIO
	}
	template
    {
        label
        {
            enabled "true"
            ignoreEvents
            area 0 0 -1 -1
            bam "TTREALMS"
            sequence lua "TT_TitleData['BIOGRAPHY_TITLE'][instanceId].seq"
            align center center
        }
        name "TEMPLATE_titlechar_CHARACTER_BIOGRAPHY"
    }
	label
    {
        name "TT_CHARACTER_BIOGRAPHY"
		area 246 32 372 42
		--text "BIOGRAPHY_TITLE"
		--text style "title"
    }
	label
	{
		area		222 170 20 20
		pulse lua "recBioEdit == ''"
	}
	edit
	{
		name		"recBioEditArea"
		area		222 170 514 390
		var			recBioEdit
		scrollbar  'GUISCRCW'
		text style	"normal_parchment"
	}
	button
	{
		area 440 564 242 32
		text style "label"
		text	"CLEAR_BUTTON"
		text color 5
		action 
		"
			recBioEdit = ''
		"
	}
	button
	{
		area 222 564 218 32
		text style "label"
		text "REVERT_BUTTON"		
		text color 5
		action 
		"
			recBioEdit = recBioEditBackup
		"
	}
	button
	{
		on escape
		area 222 660 162 30
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text style "button"
		text shadow 1
		text	"CANCEL_BUTTON"
		action 
		"
			characterScreen:OnCancelButtonClick()
			Infinity_PopMenu()
			currentPanelID = 17
		"
	}
	button
	{
		on return
		area 485 660 162 30
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text style "button"
		text shadow 1
		text "DONE_BUTTON"		
		action 
		"
			characterScreen:OnDoneButtonClick()
			Infinity_PopMenu()
			currentPanelID = 17
		"
	}
}


`
scriptList_idx = 0
showingSmartOptions = false
function formatScriptName(text)
	local i =  string.find(text, ":", #text)
	if(i) then 
		text = string.sub(text,1, i - 1)
	end
	if(#text > 35) then
		text = string.sub(text,1, 35)
		text = text .. "..."
	end
	return text
end

scriptOptions = 
{
	{'SCRIPT_ATTACK_ENEMIES_LABEL',			'SCRIPT_ATTACK_ENEMIES_DESCRIPTION',		 1, 0, 0},
	{'SCRIPT_USE_MELEE_WEAPONS_LABEL',		'SCRIPT_USE_MELEE_WEAPONS_DESCRIPTION',		 2, 0, 0},
	{'SCRIPT_USE_RANGED_WEAPONS_LABEL',		'SCRIPT_USE_RANGED_WEAPONS_DESCRIPTION',	 3, 0, 0},
	{'SCRIPT_USE_ITEMS_LABEL',				'SCRIPT_USE_ITEMS_DESCRIPTION',				 4, 0, 0},
	{'SCRIPT_USE_SPECIAL_ABILITIES_LABEL',	'SCRIPT_USE_SPECIAL_ABILITIES_DESCRIPTION',	 5, 0, 0},
	{'SCRIPT_USE_OFFENSIVE_SPELLS_LABEL',	'SCRIPT_USE_OFFENSIVE_SPELLS_DESCRIPTION',	 6, 0, 0},
	{'SCRIPT_USE_DEFENSIVE_SPELLS_LABEL',	'SCRIPT_USE_DEFENSIVE_SPELLS_DESCRIPTION',	 7, 0, 0},
	{'SCRIPT_FIND_TRAPS_LABEL',				'SCRIPT_FIND_TRAPS_DESCRIPTION',			 8, 0, 0},
	{'SCRIPT_HIDE_IN_SHADOWS_LABEL',		'SCRIPT_HIDE_IN_SHADOWS_DESCRIPTION',		 9, 0, 0},
	{'SCRIPT_SING_BATTLESONG_LABEL',		'SCRIPT_SING_BATTLESONG_DESCRIPTION',		10, 0, 0},
	{'SCRIPT_TURN_UNDEAD_LABEL',			'SCRIPT_TURN_UNDEAD_DESCRIPTION',			11, 0, 0}
}

function handleScriptOptionChange(option)
	local wasOn = scriptOptions[option][4] == 2

	if option == 2 then --Melee
		if wasOn == true then
			scriptOptions[option][4] = 0
			scriptOptions[option][5] = false
		else
			scriptOptions[option][4] = 2
			scriptOptions[option][5] = true
			scriptOptions[option+1][4] = 0
			scriptOptions[option+1][5] = false
		end
	elseif option == 3 then --Ranged
		if wasOn == true then
			scriptOptions[option][4] = 0
			scriptOptions[option][5] = false
		else
			scriptOptions[option][4] = 2
			scriptOptions[option][5] = true
			scriptOptions[option-1][4] = 0
			scriptOptions[option-1][5] = false
		end
	elseif option == 8 then --Find Traps
		if wasOn == true then
			scriptOptions[option][4] = 0
			scriptOptions[option][5] = false
		else
			scriptOptions[option][4] = 2
			scriptOptions[option][5] = true
			scriptOptions[option+1][4] = 0
			scriptOptions[option+1][5] = false
			scriptOptions[option+2][4] = 0
			scriptOptions[option+2][5] = false
			scriptOptions[option+3][4] = 0
			scriptOptions[option+3][5] = false
		end
	elseif option == 9 then --Hide
		if wasOn == true then
			scriptOptions[option][4] = 0
			scriptOptions[option][5] = false
		else
			scriptOptions[option][4] = 2
			scriptOptions[option][5] = true
			scriptOptions[option-1][4] = 0
			scriptOptions[option-1][5] = false
			scriptOptions[option+1][4] = 0
			scriptOptions[option+1][5] = false
			scriptOptions[option+2][4] = 0
			scriptOptions[option+2][5] = false
		end
	elseif option == 10 then --Sing
		if wasOn == true then
			scriptOptions[option][4] = 0
			scriptOptions[option][5] = false
		else
			scriptOptions[option][4] = 2
			scriptOptions[option][5] = true
			scriptOptions[option-2][4] = 0
			scriptOptions[option-2][5] = false
			scriptOptions[option-1][4] = 0
			scriptOptions[option-1][5] = false
			scriptOptions[option+1][4] = 0
			scriptOptions[option+1][5] = false
		end
	elseif option == 11 then --Turn
		if wasOn == true then
			scriptOptions[option][4] = 0
			scriptOptions[option][5] = false
		else
			scriptOptions[option][4] = 2
			scriptOptions[option][5] = true
			scriptOptions[option-3][4] = 0
			scriptOptions[option-3][5] = false
			scriptOptions[option-2][4] = 0
			scriptOptions[option-2][5] = false
			scriptOptions[option-1][4] = 0
			scriptOptions[option-1][5] = false
		end
	else
		scriptOptions[option][4] = toggleFrame(scriptOptions[option][4])
		if scriptOptions[option][4] == 0 then
			scriptOptions[option][5] = false
		else
			scriptOptions[option][5] = true
		end
	end
end
`
menu
{
	name 'CHARACTER_SCRIPT'
	align center center
	ignoreesc
	onOpen 
	"
		doneEnabled = characterScreen:IsDoneButtonClickable(currentID)
		currentPanelID = const.SCRIPT_ID

		showingSmartOptions = (scriptList_idx == 2)
		scriptDescription = t(scriptOptions[scriptList_idx][2])

		for index, var in pairs(scriptOptions) do
			var[5] = characterScreen:GetTempSmartScriptLocal(var[3])
			if var[5] == false then
				var[4] = 0
			else
				var[4] = 2
			end
		end
	"
	label
	{
		area 0 0 717 700 
		mosaic GUIPOP55
	}
	label
	{
		area		20 16 624 48
		text		"SCRIPTS_TITLE"
		text style 'label'
		text align left center
		text point 25
		text shadow 1
	}
	text
	{
		area 32 410 320 174
		text lua "scriptDescription"
		scrollbar 'GUISCRC'
		text style	normal
		pad 5 5 5 5
		text shadow 1
		enabled "showingSmartOptions == true"
	}

	text
	{
		area 388 92 308 502
		text lua "scriptDescription"
		scrollbar 'GUISCRC'
		text style	normal
		text shadow 1
		enabled "showingSmartOptions == false"
	}

	list
	{
		column 
		{ 
			width 100
			label
			{
				area 0 0 -1 -1
				enabled "scriptList[rowNumber] ~= ''"
				text lua "formatScriptName(scriptList[rowNumber])"
				text style	"normal"
				text shadow 1
				pad 8 0 0 0
			}
			label
			{
				area 0 0 -1 -1
				enabled "rowNumber == mouseoverRow"
				text lua "formatScriptName(scriptList[rowNumber])"
				text style	"normal"
				text shadow 1
				text color 255 150 0 255
				pad 8 0 0 0
			}
			label
			{
				area 0 0 -1 -1
				enabled "scriptList[rowNumber] ~= '' and scriptList_idx == rowNumber "
				text lua "formatScriptName(scriptList[rowNumber])"
				text style	"normal"
				text shadow 1
				text color S
				pad 8 0 0 0
			}
			label
			{
				area -10 -10 10000 10000
				enabled "scriptList[rowNumber] == ''"
				rectangle	1
			}
		}
		area 26 88 326 310
		rowheight	18
		table		"scriptList"
		var			"scriptList_idx"
		hideHighlight
		scrollbar	'GUISTSCR'
		action
		"
			showingSmartOptions = (scriptList_idx == 2)
			if scriptList[scriptList_idx] ~= '' then
				Infinity_OnScriptItemSelect(scriptList_idx - 1)
				doneEnabled = characterScreen:IsDoneButtonClickable(currentID)
			else
				scriptList_idx = 0
				scriptDescription = ''
				doneEnabled = false
			end
		"
		actionEnter	""
		actionExit	"mouseoverRow = 0"
	}

	list
	{
		
		column 
		{ 
			width 80
			label
			{
				area 10 0 -1 -1
				text lua "t( scriptOptions[rowNumber][1])"
				text style	"normal"
				text shadow 1
				text align right center
			}
			label
			{
				enabled "selScriptOpt == rowNumber"
				area 10 0 -1 -1
				text lua "t( scriptOptions[rowNumber][1])"
				text style	"normal"
				text shadow 1
				text color S
				text align right center
			}
		}
		column 
		{ 
			width 20
			label
			{
				area		10 6 28 28
				bam			ROUNDBUT
				scaleToClip
				frame		lua "ticksStarting ~= 0 and rowSelected == rowNumber and cellNumber == 2 and 1 or scriptOptions[rowNumber][4]"
			}
		}

		area 382 92 302 502
		
		rowheight	40
		table		"scriptOptions"
		var			selScriptOpt
		hideHighlight
		scrollbar	'GUISCRC'
		enabled 	"showingSmartOptions == true"

		action		
		"
			scriptDescription = t(scriptOptions[selScriptOpt][2])
			selectedSL = 0
			selFeedOpt = 0

			if(cellNumber == 2) then
				Infinity_PlaySound('GAM_09')
				handleScriptOptionChange(selScriptOpt)
			end
			ticksPassed = 0
			ticksStarting = 0
		"
		actionUpdate 
		"	
			ticksStarting = ticksStarting + 1
			if ticksStarting > 10 then
				ticksPassed = ticksPassed + 1
				if ticksPassed > 3 then
					ticksPassed = 0
				end
			end
			rowSelected = nil
		"
	}
	
	button
	{
		on escape
		area		150 638 162 30
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text style "button"
		text shadow 1
		text	"CANCEL_BUTTON"
		action 
		"
			characterScreen:OnCancelButtonClick()
			Infinity_PopMenu()
			currentPanelID = 17
		"
	}
	button
	{
		clickable lua "doneEnabled"
		area		444 638 162 30
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text style "button"
		text shadow 1
		text "DONE_BUTTON"		
		action 
		"
			if showingSmartOptions == true then
				for index, var in pairs(scriptOptions) do
					characterScreen:SetTempSmartScriptLocal(var[3], var[5])
				end
			end

			characterScreen:OnDoneButtonClick()
			Infinity_PopMenu()
			currentPanelID = 17
			
		"
	}
}
`
list_GUIREC_13_0_idx = 0
characterExportCharacterEdit = ""
`
menu
{
	name 'CHARACTER_EXPORT'
	align center center
	modal
	ignoreEsc
	onOpen
	"
		currentPanelID = const.EXPORT_ID;
		Infinity_FocusTextEdit('characterExportCharacterEditArea');
	"
	label
	{
		area 0 0 380 693
		mosaic 'GUIPOP46'
	}
	label
	{
		area 14 6 336 38
		text "EXPORT_TITLE"
		text style 'label'
		text align left center
		text point 22
		text shadow 1
	}
	list
	{
		column 
		{ 
			width 100
			label
			{
				area 0 0 -1 -1
				text lua "list_GUIREC_13_0[rowNumber]"
				text style "list"
				text shadow 1
				pad 8 0 0 0
			}
			label
			{
				enabled "rowNumber == mouseoverRow"
				area 0 0 -1 -1
				text lua "list_GUIREC_13_0[rowNumber]"
				text style "list"
				text shadow 1
				text color 255 150 0 255
				pad 8 0 0 0
			}
			label
			{
				enabled "list_GUIREC_13_0_idx == rowNumber"
				area 0 0 -1 -1
				text lua "list_GUIREC_13_0[rowNumber]"
				text style "list"
				text shadow 1
				text color S
				pad 8 0 0 0
			}
		}
		area 14 52 332 304
		rowheight	18
		table		"list_GUIREC_13_0"
		var			"list_GUIREC_13_0_idx"
		scrollbar	'GUISCRC'
		hidehighlight
		action
		"
			Infinity_OnCharacterItemSelect(list_GUIREC_13_0_idx - 1)
		"
		actionEnter	""
		actionExit	"mouseoverRow = 0"
	}
	label
	{
		area		14 428 352 28
		text		"EXPORT_FILENAME_LABEL"
		text style	"label"
		text color 	3
	}
	label
	{
		enabled "string.len(characterExportCharacterEdit)<1"
		area		20 399 346 29
		pulse 1
	}
	edit
	{
		name		"characterExportCharacterEditArea"
		area		20 399 346 29
		var			characterExportCharacterEdit
		text style	"edit"
		maxlines	1
		action
		"
			if(characterExportCharacterEdit:len() > 7 and key_pressed ~= 8) then				
				return 0
			else
				Infinity_UpdateCharacterRecordExportPanel()
				return 1
			end
		"

	}
	text
	{
		area 26 480 332 122
		text 10962
		text style	normal
		scrollbar 'GUISCRC'
	}
	button
	{
		on escape
		area 28 633 147 29
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text style "button"
		text shadow 1
		text	"CANCEL_BUTTON"
		action 
		"
			characterScreen:OnCancelButtonClick()
			Infinity_PopMenu('CHARACTER_EXPORT')
			currentPanelID = 0
		"
	}
	button
	{
		clickable	lua "characterScreen:IsDoneButtonClickable(currentID)"
		on return
		area 205 633 147 29
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text style "button"
		text shadow 1
		text "DONE_BUTTON"		
		action 
		"
			characterScreen:OnDoneButtonClick()
		"
	}
}
`
list_GUIREC_20_5_idx = 0
doneEnabled = 0

function compareCustomSound(s1, s2)
	-- DEFAULT, then normal alphabetically, then AoN alphabetically (result must be strictly less than)
	if (s1.sound == "DEFAULT") then
		return s2.sound ~= "DEFAULT";
	elseif (string.sub(s1.sound, 1, 4) == "BDTP") then
		if (string.sub(s2.sound, 1, 4) ~= "BDTP") then
			return false;
		end
	elseif (string.sub(s2.sound, 1, 4) == "BDTP") then
		return true;
	end
	return s1.sound < s2.sound;
end

function prepareSounds(soundTable)
	-- preserve original indices to return as selection
	local i;
	for i = 1, #soundTable, 1 do
		local s = soundTable[i];
		if (type(s) == "string") then
			soundTable[i] = {
				index = i,
				sound = s
			}
		end
	end
	
	table.sort(soundTable, compareCustomSound)
end

function getSoundStringRef(rowNumber, tab)
	if ( filenames_stringrefs[tab[rowNumber].sound] ~= nil ) then
		return Infinity_FetchString(filenames_stringrefs[tab[rowNumber].sound][1])
	else
		return tab[rowNumber].sound
	end
end
`
menu
{
	name 'CHARACTER_SOUND'
	align center center
	ignoreesc
	onOpen 
	"
		currentPanelID = const.SOUND_ID
		Infinity_OnSoundItemSelect(0)
		doneEnabled = characterScreen:IsDoneButtonClickable(currentID)
		prepareSounds(list_GUIREC_20_5)
	"
	label
	{
		area 0 0 380 693
		mosaic 'GUICGSND'
	}
	label
	{
		area 14 6 336 38
		text "SOUND_TITLE"
		text style 'label'
		text align left center
		text point 22
		text shadow 1
	}
	list
	{
		column 
		{ 
			width 100
			label
			{
				area 0 0 -1 -1
				text lua "getSoundStringRef(rowNumber, list_GUIREC_20_5)"
				text style	"normal"
				text shadow 1
			}
			label
			{
				enabled "rowNumber == mouseoverRow"
				area 0 0 -1 -1
				text lua "getSoundStringRef(rowNumber, list_GUIREC_20_5)"
				text style	"normal"					
				text shadow 1
				text color 255 150 0 255
			}
			label
			{
				enabled "list_GUIREC_20_5_idx == rowNumber"
				area 0 0 -1 -1
				text lua "getSoundStringRef(rowNumber, list_GUIREC_20_5)"
				text style	"normal"					
				text shadow 1
				text color S
			}
		}
		area 20 50 342 332
		rowheight	18
		table		"list_GUIREC_20_5"
		var			"list_GUIREC_20_5_idx"
		scrollbar	'GUISCRC'
		hidehighlight
		action
		"
			Infinity_OnSoundItemSelect(list_GUIREC_20_5[list_GUIREC_20_5_idx].index - 1)
			doneEnabled = characterScreen:IsDoneButtonClickable(currentID)
		"
		actionDbl "characterScreen:OnPlayButtonClick()"
		actionEnter	""
		actionExit	"mouseoverRow = 0"
	}
	text
	{
		area 26 480 332 122
		text 11315
		scrollbar 'GUISCRC'
		text style	normal
	}
	button
	{
		clickable lua "list_GUIREC_20_5_idx"
		area 39 411 300 30
		bam GUIRECC
		ScaleToClip
		text style "button"
		text shadow 1
		text	"PLAY_SOUND_BUTTON"
		action 
		"	
			characterScreen:OnPlayButtonClick();			
		"
	}
	button
	{
		on escape
		area 28 633 147 29
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text style "button"
		text shadow 1
		text	"CANCEL_BUTTON"
		action 
		"
			characterScreen:OnCancelButtonClick()
			Infinity_PopMenu()
			currentPanelID = 17
		"
	}
	button
	{
		clickable lua "doneEnabled"
		on return
		area 205 633 147 29
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text style "button"
		text shadow 1
		text "DONE_BUTTON"		
		action 
		"
			characterScreen:OnDoneButtonClick()
			Infinity_PopMenu()
			currentPanelID = 17
		"
	}
}
`
function toggleFrame(curFrame)
	if curFrame == 0 then 
		return 2
	else 
		return 0
	end 
end
function getSelected(cur, my)
	if cur == my then 
		return 1
	else 
		return 0
	end 
end
function removeStoryModeOption()
	for index = 1, #toggleTitles-1, 1 do
		toggleTitles[index] = toggleTitles[index+1]
	end
	toggleTitles[#toggleTitles] = nil
end
function addStoryModeOption()
	for index = #toggleTitles, 1, -1 do
		toggleTitles[index+1] = toggleTitles[index]
	end
	toggleTitles[1] = {'DIFFICULTY_LABEL_STORYMODE',	'DIFFICULTY_DESCRIPTION_STORYMODE',	65, 0, 0}
end

function removeOptionFromList(list, option)
	local startingPoint = 1
	local found = false
	for index = 1, #list-1, 1 do
		if list[index][3] == option then
			startingPoint = index
			found = true
			break
		end
	end
	if found == true then
		for index = startingPoint, #list-1, 1 do
			list[index] = list[index+1]
		end
		list[#list] = nil
	end
end

toggleTitles = {
{"DIFFICULTY_LABEL_STORYMODE_MIXED",	"DIFFICULTY_DESCRIPTION_STORYMODE",	65, 0, 0},
{"ENABLE_CLOUD_LABEL",					"ENABLE_CLOUD_DESCRIPTION", 		60, 0, 0},
{"WORLDMAP_HIGHLIGHT_LABEL",			"WORLDMAP_HIGHLIGHT_DESCRIPTION", 	66, 0, 0},
{"MP_CHAT_LABEL",						"MP_CHAT_DESCRIPTION",				67, 0, 0},
{"GORE_LABEL",							"GORE_DESCRIPTION", 				19, 0, 0},
{"WEATHER_LABEL",						"WEATHER_DESCRIPTION", 				47, 0, 0},
{"GROUP_INFRA_LABEL",					"GROUP_INFRA_DESCRIPTION", 			42, 0, 0},
{"HEAL_ON_REST_LABEL",					"HEAL_ON_REST_DESCRIPTION", 		50, 0, 0},
{"MAX_HP_ON_LEVEL_LABEL",				"MAX_HP_ON_LEVEL_DESCRIPTION", 		55, 0, 0},
{"NO_DAMAGE_INCREASE_LABEL",			"NO_DAMAGE_INCREASE_DESCRIPTION", 	64, 0, 0},
{"AUTO_USE_MAGIC_AMMO_LABEL",			"AUTO_USE_MAGIC_AMMO_DESCRIPTION", 	68, 0, 0},
}

selectedOpt = 0
helpString = 0

ttDelaySLDR = 0
keyboardSLDR = 0
mouseSLDR = 0
difficultySLDR = 0

panelID = 8

function getDifficulty(d)
	local text = ""
	if ( d ==0 ) then
		text = t("DIFFICULTY_LABEL_EASY")
	elseif (d == 1) then
		text = t("DIFFICULTY_LABEL_NORMAL")
	elseif (d == 2) then
		text = t("DIFFICULTY_LABEL_CORERULES")
	elseif (d == 3) then
		text = t("DIFFICULTY_LABEL_HARD")
	elseif (d == 4) then
		text = t("DIFFICULTY_LABEL_INSANE")
	elseif (d == 5) then
		text = string.upper(t("MULTIPLAYER_DIFFICULTY_LABEL")).." "..t("DIFFICULTY_LABEL_LEGACYOFBHAAL")
	end
	return text
end
`

menu
{
	name	'OPTIONS_GAMEPLAY'
	align center center
	modal
	onOpen
	"
		panelID = 8
		helpString = 'GAMEPLAY_DESCRIPTION'
		selectedOpt = 0
		selectedSL = 0

		if Infinity_GetOption(59, 8) ~= 0 and toggleTitles[1][3] == 65 then
			removeStoryModeOption()
		elseif Infinity_GetOption(59, 8) == 0 and toggleTitles[1][3] ~= 65 then
			addStoryModeOption()
		end

		ttDelaySLDR = Infinity_GetOption(1, panelID)
		keyboardSLDR = Infinity_GetOption(3, panelID)
		mouseSLDR = Infinity_GetOption(2, panelID)
		difficultySLDR = Infinity_GetOption(12, panelID)
		
		for index, var in pairs(toggleTitles) do
			var[5] = Infinity_GetOption(var[3], panelID)
			if var[5] == 0 then
				var[4] = 0
			else
				var[4] = 2
 			end
		end
 
		if Infinity_CanCloudSave() == false and (toggleTitles[1][3] == 60 or toggleTitles[2][3] == 60) then
			removeOptionFromList(toggleTitles,60)
		end
	"

	button
	{
+		area	0 0 875 700
		mosaic	GUITUTB
		action
		"
			helpString = 'GAMEPLAY_DESCRIPTION'
			selectedOpt = 0
			selectedSL = 0
		"
	}
	label
	{
		area		54 16 798 48
		text		"GAMEPLAY_TITLE"
		text style 'label'
		text align left center
		text point 25
		text shadow 1
	}
	list
	{
		
		column 
		{ 
			width 85
			label
			{
				area 10 0 -1 -1
				text lua "t( toggleTitles[rowNumber][1])"
				text style "normal"
				text font "STONESML"
				text shadow 1				
				text align left center
			}
			label
			{
				enabled "rowNumber == selectedOpt"
				area 10 0 -1 -1
				text lua "t( toggleTitles[rowNumber][1])"
				text style "normal"
				text font "STONESML"
				text shadow 1
				text color S				
				text align left center
			}
		}
		column 
		{ 
			width 15
			label
			{
				area		5 4 24 24
				bam			ROUNDBUT
				scaleToClip
				frame		lua "ticksStarting ~= 0 and rowSelected == rowNumber and cellNumber == 2 and 1 or toggleTitles[rowNumber][4]"
			}
		}

		area 449 88 403 342
		rowheight	36
		table		"toggleTitles"
		var		selectedOpt
		scrollbar	'GUISTSCR'
		hidehighlight
		action		
		"
			panelID = 8
			selectedSL = 0
			helpString = toggleTitles[selectedOpt][2]

			if(cellNumber == 2) then
				Infinity_PlaySound('GAM_09')

				toggleTitles[selectedOpt][4] = toggleFrame(toggleTitles[selectedOpt][4])

				if toggleTitles[selectedOpt][4] == 0 then
					toggleTitles[selectedOpt][5] = 0
				else 
					toggleTitles[selectedOpt][5] = 1
				end
			end
			if selectedOpt == 1 and toggleTitles[1][5] == 1 then
				groundItemsButtonToggle = 1
				highlightButtonToggle = 1
			end
			ticksPassed = 0
			ticksStarting = 0
		"
		actionUpdate 
		"	
			ticksStarting = ticksStarting + 1
			if ticksStarting > 10 then
				ticksPassed = ticksPassed + 1
				if ticksPassed > 3 then
					ticksPassed = 0
				end
			end
			rowSelected = nil
		"
	}	
	text
	{
		area		466 444 366 126
		text		lua "t(helpString)"
		text style	normal
		scrollbar	'GUISCRC'
	}

	text
	{
		area		24 108 173 36
		text		"TOOLTIP_DELAY_LABEL"
		text style	"label"
		text align	right center
		text upper
		text shadow 1				
		action 
		"
			helpString = 'TOOLTIP_DELAY_DESCRIPTION' 
			selectedOpt = 0
			selectedSL = 1
		" 
	}
	slider
	{
		area 208 108 200 40
		position "ttDelaySLDR"
		bam	 'SLDRSTAR'
		sliderBackground 'SLDRBACK'
		scaleToClip
		sequence 0
		frame	 1
		settings	40
		pad 5 0 4 0
		action 
		"
			helpString = 'TOOLTIP_DELAY_DESCRIPTION' 
			selectedOpt = 0
			selectedSL = 1
		" 
	}

	text
	{
		area		24 171 173 36	
		text		"KEYBOARD_SCRLSPEED_LABEL"
		text style	"label"
		text align	right center
		text upper
		text shadow 1				
		enabled "not e:IsTouchUI()"
		action 
		"
			helpString = 'KEYBOARD_SCRLSPEED_DESCRIPTION' 
			selectedOpt = 0
			selectedSL = 2
		" 
	}
	slider
	{
		area 208 168 200 40
		position "keyboardSLDR"
		bam	 'SLDRSTAR'
		sliderBackground 'SLDRBACK'
		scaleToClip
		sequence 0
		frame	 1
		settings	40
		pad 5 0 4 0
		enabled "not e:IsTouchUI()"
		action 
		"
			helpString = 'KEYBOARD_SCRLSPEED_DESCRIPTION' 
			selectedOpt = 0
			selectedSL = 2
		" 
	}

	text
	{
		area		24 232 173 36	
		text		"MOUSE_SCRLSPEED_LABEL"
		text style	"label"
		text align	right center
		text upper
		text shadow 1
		enabled "not e:IsTouchUI()"
		action 
		"
			helpString = 'MOUSE_SCRLSPEED_DESCRIPTION' 
			selectedOpt = 0
			selectedSL = 3
		" 
	}
	slider
	{
		area 208 228 200 40
		position "mouseSLDR"
		bam	 'SLDRSTAR'
		sliderBackground 'SLDRBACK'
		scaleToClip
		sequence 0
		frame	 1
		settings	40
		pad 5 0 4 0
		enabled "not e:IsTouchUI()"
		action 
		"
			helpString = 'MOUSE_SCRLSPEED_DESCRIPTION' 
			selectedOpt = 0
			selectedSL = 3
		" 
	}
	label
	{
		area 338 318 60 60
		bam "GUIDIFFS"
		frame lua "difficultySLDR+1"
		align center center
		enabled "not (Infinity_GetOption(59, 8) ~= 0) and not (Infinity_GetOption(59, 8) == 0 and toggleTitles[1][4] ~= 0)"
	}
	text
	{
		area		24 332 103 36
		text	lua	"t('DIFFICULTY_LABEL') .. ':'"
		text style	"label"
		text align	right center
		text upper		
		text shadow 1
		action 
		"
			helpString = 'DIFFICULTY_DESCRIPTION' 
			selectedOpt = 0
			selectedSL = 4
		" 
	}
	slider
	{
		area 128 329 200 39
		position "difficultySLDR"
		bam	 'SLDRSTAR'
		sliderBackground 'SLDRBACK'
		scaleToClip
		sequence 0
		frame	 1
		settings	5
		pad 5 0 4 0
		enabled "Infinity_GetOption(59, 8) == 0 and toggleTitles[1][4] == 0"
		action 
		"
			helpString = 'DIFFICULTY_DESCRIPTION' 
			selectedOpt = 0
			selectedSL = 4
		" 
	}
	label
	{
		area 128 332 200 36
		text lua "t('DIFFICULTY_LABEL_LEGACYOFBHAAL')"
		text style "label"		
		text shadow 1
		text align center center
		enabled "Infinity_GetOption(59, 8) ~= 0"
	}
	label
	{
		area 338 318 60 60
		bam "GUIDIFFS"
		frame 6
		align center center
		enabled "Infinity_GetOption(59, 8) ~= 0"
	}
	label
	{
		area 128 332 200 36
		text lua "t('DIFFICULTY_LABEL_STORYMODE')"
		text style "label"	
		text shadow 1
		text align center center
		enabled "Infinity_GetOption(59, 8) == 0 and toggleTitles[1][4] ~= 0"
	}
	label
	{
		area 338 318 60 60
		bam "GUIDIFFS"
		frame 0
		align center center
		enabled "Infinity_GetOption(59, 8) == 0 and toggleTitles[1][4] ~= 0"
	}
	label
	{
		area		128 368 200 35	
		text		lua "getDifficulty(difficultySLDR)"
		text style	"label"
		text shadow 1
		text align	center center
		enabled "Infinity_GetOption(59, 8) == 0 and toggleTitles[1][4] == 0"
	}
	
	button
	{
		bam GUIRECC
		ScaleToClip		
		sequenceonce lua "Infinity_RandomNumber(0, 3)"
		area		40 470 364 32
		text		"ASSIGN_KEYS_BUTTON"
		text style	"button"
		text shadow 1
		enabled "not e:IsTouchUI()"
		action
		"
			Infinity_PushMenu( 'OPTIONS_KEYBINDINGS' );
			selectedOpt = 0
		"
	}
	button
	{
		area		40 512 364 32
		bam GUIRECC
		ScaleToClip		
		sequenceonce lua "Infinity_RandomNumber(0, 3)"
		text 		"FEEDBACK_BUTTON"
		text style	"button"
		text shadow 1
		action
		"

			Infinity_PushMenu( 'OPTIONS_FEEDBACK' );
			selectedOpt = 0
		"
	}
	button
	{
		area		40 554 364 32
		bam GUIRECC
		ScaleToClip		
		sequenceonce lua "Infinity_RandomNumber(0, 3)"
		text 		"AUTO_PAUSE_BUTTON"
		text style	"button"
		text shadow 1
		action
		"
			selectedOpt = 0
			Infinity_PushMenu( 'OPTIONS_AUTOPAUSE' );
		"
	}
	button
	{
		on escape
		area		208 638 162 30
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text 		"CANCEL_BUTTON"
		text style	"button"
		text shadow 1
		action
		"			
			Infinity_PopMenu()
		"
	}
	button
	{
		area		494 638 162 30
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text 		"DONE_BUTTON" -- Done
		text style	"button"
		text shadow 1
		action
		"
			panelID = 8
			Infinity_ChangeOption( 1, ttDelaySLDR, panelID)
			Infinity_ChangeOption( 3, keyboardSLDR, panelID )
			Infinity_ChangeOption( 2, mouseSLDR, panelID )
			Infinity_ChangeOption( 12, difficultySLDR + 1, panelID) -- cannot set story mode through slider

			selectedOpt = 0
			selectedSL = 0

			for index, var in pairs(toggleTitles) do
				
				Infinity_ChangeOption( var[3], var[5], panelID)
						
			end

			panelID = 8
			Infinity_PopMenu()
		"
	}
	button
        {
		enabled         scsInGameVar
         bam GUIRECC
		ScaleToClip		
		sequenceonce lua "Infinity_RandomNumber(0, 3)"
		area		40 423 364 32
		text		"SCS_DIFFICULTY_BUTTON"
		text style	"button"
		text shadow 1
		action
		"
			scsSummonWidget()
			Infinity_PopMenu()
           e:SelectEngine(worldScreen)
		"
	}
}

`
autoPauseToggles = { 
{'WEAPON_UNUSABLE_LABEL',18036, 5 , 0, 0},
{'END_OF_ROUND_LABEL',10640, 25, 0, 0},
{'ENEMY_SIGHTED_LABEL',23514, 26, 0, 0},
{'SPELL_CAST_LABEL',24432, 31, 0, 0},
{'TRAP_FOUND_LABEL',24433, 34, 0, 0}
}

characterPauseToggles = { 
{'CENTER_MEMBER_LABEL',24434, 37, 0, 0},
{'CHARACTER_HIT_LABEL',18032, 1 , 0, 0},
{'CHARACTER_INJURED_LABEL',18033, 2 , 0, 0},
{'CHARACTER_DEATH_LABEL',18034, 3 , 0, 0},
{'CHARACTER_ATTACKED_LABEL',18035, 4 , 0, 0},
{'CHARACTER_TARGET_DESTROYED',18037, 13, 0, 0},
}

selOptAP = 0

`

menu
{
	name	'OPTIONS_AUTOPAUSE'
	modal
	align center center
	onOpen
	"
		panelID = 10
		selOptAP = 0
		autopauseString = 18044
		
		for index, var in pairs(autoPauseToggles) do
			var[5] = Infinity_GetOption(var[3], panelID)
			if var[5] == 0 then
				var[4] = 0
			else
				var[4] = 2
			end
		end
		
		for index, var in pairs(characterPauseToggles) do
			var[5] = Infinity_GetOption(var[3], panelID)
			if var[5] == 0 then
				var[4] = 0
			else
				var[4] = 2
			end
		end
	"

	button
	{
		area 0 0 599 650
		mosaic	GOPPAUB
		action
		"
			autopauseString = 18044
			selOptAP = 0
		"
	}
	label
	{
		area		44 28 540 42
		text		"AUTO_PAUSE_TITLE"
		text style 'label'
		text align left center
		text point 25
		text shadow 1
	}
	list
	{
		
		column 
		{ 
			width 75 
			label
			{
				area 10 0 -1 -1
				text lua "t( autoPauseToggles[rowNumber][1])"
				text style "normal"
				text font "STONESML"
				text shadow 1
				text align right center
			}
			label
			{
				enabled "rowNumber == selOptAP"
				area 10 0 -1 -1
				text lua "t( autoPauseToggles[rowNumber][1])"
				text style "normal"
				text font "STONESML"
				text shadow 1
				text color S
				text align right center
			}
		}
		column 
		{ 
			width 25 
			label
			{
				area		20 6 28 28
				bam			ROUNDBUT
				scaleToClip
				frame		lua "ticksStartingTwo ~= 0 and rowSelected == rowNumber and cellNumber == 2 and 1 or autoPauseToggles[rowNumber][4]"
			}
		}

		area 312 108 238 302
		
		rowheight	40
		table		"autoPauseToggles"
		var		selOptAP
		scrollbar	'GUISCRC'
		hideHighlight
		action		
		"
			selOptAPC = 0
			autopauseString = autoPauseToggles[selOptAP][2]

			if(cellNumber == 2) then
				Infinity_PlaySound('GAM_09')

				autoPauseToggles[selOptAP][4] = toggleFrame(autoPauseToggles[selOptAP][4])

				if autoPauseToggles[selOptAP][4] == 0 then
					autoPauseToggles[selOptAP][5] = 0
				else 
					autoPauseToggles[selOptAP][5] = 1
				end
			end
			ticksPassed = 0
			ticksStartingTwo = 0
		"
		actionUpdate 
		"	
			ticksStartingTwo = ticksStartingTwo + 1
			if ticksStartingTwo > 10 then
				ticksPassed = ticksPassed + 1
				if ticksPassed > 3 then
					ticksPassed = 0
				end
			end
			rowSelected = nil
		"
	}
	list
	{
	
		column 
		{ 
			width 75 
			label
			{
				area 10 0 -1 -1
				text lua "t( characterPauseToggles[rowNumber][1])"
				text style "normal"
				text font "STONESML"
				text shadow 1
				text align right center
			}
			label
			{
				enabled "rowNumber == selOptAPC"
				area 10 0 -1 -1
				text lua "t( characterPauseToggles[rowNumber][1])"
				text style "normal"
				text font "STONESML"
				text shadow 1
				text color S
				text align right center
			}
		}
		column 
		{ 
			width 25 
			label
			{
				area		20 6 28 28
				bam			ROUNDBUT
				scaleToClip
				frame		lua "ticksStarting ~= 0 and rowSelected == rowNumber and cellNumber == 2 and 1 or characterPauseToggles[rowNumber][4]"
			}
		}

		area 54 108 250 302
		
		rowheight	40
		table		"characterPauseToggles"
		var		selOptAPC
		scrollbar	'GUISCRC'
		hideHighlight
		action		
		"
			selOptAP = 0
			autopauseString = characterPauseToggles[selOptAPC][2]

			if(cellNumber == 2) then
				Infinity_PlaySound('GAM_09')

				characterPauseToggles[selOptAPC][4] = toggleFrame(characterPauseToggles[selOptAPC][4])

				if characterPauseToggles[selOptAPC][4] == 0 then
					characterPauseToggles[selOptAPC][5] = 0
				else 
					characterPauseToggles[selOptAPC][5] = 1
				end

				--Infinity_ChangeOption(characterPauseToggles[selOptAPC][3], characterPauseToggles[selOptAPC][5], panelID )
			end
			ticksPassed = 0
			ticksStarting = 0
		"
		actionUpdate 
		"	
			ticksStarting = ticksStarting + 1
			if ticksStarting > 10 then
				ticksPassed = ticksPassed + 1
				if ticksPassed > 3 then
					ticksPassed = 0
				end
			end
			rowSelected = nil
		"
	}
	
	text
	{
		area		64 434 464 114
		text		lua "Infinity_FetchString(autopauseString)"
		text style	normal
		scrollbar	'GUISCRC'
	}


	button
	{
		on escape
		area		70 588 162 30
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text 		"CANCEL_BUTTON"
		text style	"button"
		text shadow 1
		action
		"
			panelID = 8
			helpString = 'GAMEPLAY_DESCRIPTION'
			Infinity_PopMenu()
		"
	}
	button
	{
		area		356 588 162 30
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text 		"DONE_BUTTON" --Done
		text style	"button"
		text shadow 1
		action
		"
			panelID = 10

			for index, var in pairs(autoPauseToggles) do
				Infinity_ChangeOption( var[3], var[5], panelID)
			end
			for index, var in pairs(characterPauseToggles) do
				Infinity_ChangeOption( var[3], var[5], panelID)
			end

			panelID = 8
			Infinity_PopMenu()
		"
	}	
}

`
graphicsToggles = {
{'FULL_SCREEN_LABEL',18000, 9 , 0, 0, 0},
{'HARDWARE_CURSOR_LABEL',32205, 13, 0, 0, 0},
{'SCALE_UI_LABEL',32206, 14, 0, 0, 0},
{'ZOOM_LOCK_LABEL',66654, 36, 0, 0, 0},
{'SPRITE_OUTLINE_LABEL',65909, 15, 0, 0, 0},
{'GREYSCALE_ON_PAUSE_LABEL',32709, 66, 0, 0, 0},
{'HIGHLIGHT_SPRITE_LABEL',32710, 67, 0, 0, 0},
{'DITHER_ALWAYS_LABEL',18021, 52, 0, 0, 0},
{'SHOW_HP_LABEL',66657, 53, 0, 0, 0},
{'SHOW_HEALTHBAR_LABEL',69567, 65, 0, 0, 0},
{'SHOW_BLACK_SPACE_LABEL','SHOW_BLACK_SPACE_DESCRIPTION', 69, 0, 0, 0},
{'NEAREST_NEIGHBOUR_LABEL','NEAREST_NEIGHBOUR_DESCRIPTION', 70, 0, 0, 0},
{'AREA_MAP_ZOOM_TRANSITION_LABEL','AREA_MAP_ZOOM_TRANSITION_DESCRIPTION', 71, 0, 0, 0}
}

addedDirectx = false
function appendDirectXOption()
	if addedDirectx == false then
		dxOption = {'DIRECTX_LABEL', 32725, 68, 0, 0, 0}
		table.insert(graphicsToggles, dxOption)
		addedDirectx = true
	end
end

selectedGraphicOpt = 0

fontSizeSLDR = 0
fontSizeCancel = 0
function formatGraphicsInfoString()
	return options['Graphics']['version'] .. "\nrunning on " .. options['Graphics']['renderer'] .. "\ndriver provided by " .. options['Graphics']['vendor']
end
`

menu
{
	name	'OPTIONS_GRAPHICS'
	modal
	align center center
	onOpen
	"
		if e:HasDirectX() then
			appendDirectXOption()
		end
		panelID = 6
		helpString = 18042
		selectedGraphicOpt = 0
		selectedSL = 0
		fontSizeSLDR = Infinity_GetOption(22, panelID)
		fontSizeCancel = Infinity_GetOption(22, panelID)
		
		for index, var in pairs(graphicsToggles) do
			var[5] = Infinity_GetOption(var[3], panelID)
			var[6] = 0
			if var[5] == 0 then
				var[4] = 0
			else
				var[4] = 2
			end
		end

		if e:IsTouchUI() then
			removeOptionFromList(graphicsToggles, 9)
			removeOptionFromList(graphicsToggles, 13)
		end
	"


	button
	{
		area	0 0 875 700
		mosaic	GUITUTB
		action
		"
			helpString = 18042
			selectedSL = 0
		"
	}

	label
	{
		area		54 16 798 48
		text		"GRAPHICS_TITLE"
		text style 'label'
		text align left center
		text point 25
		text shadow 1
	}

	label
	{
		area		460 164 376 264
		text		lua "formatGraphicsInfoString()"
		text style	normal
		text shadow 1
		text align	center center
	}
	
	text
	{
		area		200 76 204 50
		text		"DISPLAY_OPTIONS_LABEL"
		text style	"button"
		text shadow 1
		text align 	right center
		text point 20
		--text highlight lua "getSelected(selectedSL, 1)"
		action
		"
			selectedGraphicOpt = 0
			selectedSL = 1
		"
	}

	list
	{
		
		column 
		{ 
			width 90
			label
			{
				area 0 0 -1 -1
				text lua "t( graphicsToggles[rowNumber][1])"
				text style "normal"
				text font "STONESML"
				text shadow 1				
				pad 0 0 10 0
				text align right center
			}
			label
			{
				enabled "rowNumber == selectedGraphicOpt"
				area 0 0 -1 -1
				text lua "t( graphicsToggles[rowNumber][1])"
				text style "normal"
				text font "STONESML"
				text shadow 1
				text color S
				pad 0 0 10 0
				text align right center
			}
		}
		column 
		{ 
			width 10 
			label
			{
				area		5 6 24 24
				bam			ROUNDBUT
				scaleToClip
				frame		lua "ticksStarting ~= 0 and rowSelected == rowNumber and cellNumber == 2 and 1 or graphicsToggles[rowNumber][4]"
			}
		}

		area 108 126 310 470		
		rowheight	33
		table		"graphicsToggles"
		var		selectedGraphicOpt
		scrollbar	'GUISTSCR'
		hidehighlight

		action		
		"
			panelID = 6
			helpString = graphicsToggles[selectedGraphicOpt][2]
			selectedSL = 0
			if(cellNumber == 2) then
				Infinity_PlaySound('GAM_09')
				graphicsToggles[selectedGraphicOpt][4] = toggleFrame(graphicsToggles[selectedGraphicOpt][4])

				if graphicsToggles[selectedGraphicOpt][4] == 0 then
					graphicsToggles[selectedGraphicOpt][5] = 0
				else 
					graphicsToggles[selectedGraphicOpt][5] = 1
				end
				graphicsToggles[selectedGraphicOpt][6] = 1
				--Infinity_ChangeOption(graphicsToggles[selectedGraphicOpt][3], graphicsToggles[selectedGraphicOpt][5], panelID )
			end
			ticksPassed = 0
			ticksStarting = 0
		"
		actionUpdate 
		"	
			ticksStarting = ticksStarting + 1
			if ticksStarting > 10 then
				ticksPassed = ticksPassed + 1
				if ticksPassed > 3 then
					ticksPassed = 0
				end
			end
			rowSelected = nil
		"
	}

	text
	{
		area		468 444 368 126
		text		lua "getStringFromAmbiguousSource(helpString)"
		text style	normal
		text shadow 1
		scrollbar	'GUISCRC'
	}

	text
	{
		area		464 118 140 36
		text		"FONT_SIZE_LABEL"
		text style	"label"
		text align	right center
		text upper
		text useFontZoom 1
		text shadow 1
		text highlight lua "getSelected(selectedSL, 2)"
		action 
		"
			helpString = 17204 
			selectedGraphicOpt = 0
			selectedSL = 2
		" 
	}

	slider
	{
		area 610 118 200 36
		position "fontSizeSLDR"
		bam	 'SLDRSTAR'
		sliderBackground 'SLDRBACK'
		scaleToClip
		sequence 0
		frame	 1
		settings	7
		pad 15 0 10 0
		action
		"
			Infinity_ChangeOption( 22, fontSizeSLDR, 6)
			helpString = 17204 
			selectedGraphicOpt = 0
			selectedSL = 1
		"
	}

	
	button
	{
		on escape
		area		208 638 162 30
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text 		"CANCEL_BUTTON"
		text style	"button"
		text shadow 1
		action
		"
			panelID = 6
			Infinity_ChangeOption( 22, fontSizeCancel, panelID)

			selectedSL = 0
			Infinity_PopMenu()
		"
	}
	button
	{
		area		494 638 162 30
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text 		"DONE_BUTTON" --Done
		text style	"button"
		text shadow 1
		action
		"
			panelID = 6
			Infinity_ChangeOption( 22, fontSizeSLDR, panelID)

			for index, var in pairs(graphicsToggles) do
				
				if ( var[6] == 1 ) then
					Infinity_ChangeOption( var[3], var[5], panelID)
				end				
			end

			selectedSL = 0
			Infinity_PopMenu()
		"
	}
}


`
soundsToggles = {
{'CHARACTER_SUBTITLES_LABEL',18015, 5, 0, 0},
{'BATTLE_CRIES_LABEL',18013, 6, 0, 0},
{'MOVEMENT_SOUNDS_LABEL',18014, 7, 0, 0}
}
selectedsoundOpt = 0
command = {
{'ALWAYS_LABEL',0, 8, 0, 0},
{'SELDOM_LABEL',0, 9, 0, 0},
{'NEVER_LABEL',0, 10, 0, 0}
}
commandSel = 0
selectOpt = {
{'ALWAYS_LABEL',0, 58, 0, 0},
{'SELDOM_LABEL',0, 59, 0, 0},
{'NEVER_LABEL',0, 60, 0, 0}
}
selectSel = 0
ambientSLDR = 0
sfxSLDR = 0
voiceSLDR = 0
musicSLDR = 0
movieSLDR = 0

`

menu
{
	name	'OPTIONS_SOUND'
	align center center
	modal
	onOpen
	"
		panelID = 7
		helpString = 18042
		selectedsoundOpt = 0
		selectedSL = 0

		ambientSLDR = Infinity_GetOption(1, panelID)
		sfxSLDR = Infinity_GetOption(2, panelID)
		voiceSLDR = Infinity_GetOption(3, panelID)
		musicSLDR = Infinity_GetOption(4, panelID)
		movieSLDR = Infinity_GetOption(22, panelID)

		for index, var in pairs(command) do
				var[5] = Infinity_GetOption(var[3], panelID)
				if var[5] == 0 then
					var[4] = 0
				else
					var[4] = 2
					commandSel = index
				end
			end
		for index, var in pairs(selectOpt) do
			var[5] = Infinity_GetOption(var[3], panelID)
			if var[5] == 0 then
				var[4] = 0
			else
				var[4] = 2
				selectSel = index
			end
		end
		for index, var in pairs(soundsToggles) do
			var[5] = Infinity_GetOption(var[3], panelID)
			if var[5] == 0 then
				var[4] = 0
			else
				var[4] = 2
				selectSel = index
			end
		end
		ticksStarting = 0
		ticksStartingTwo = 0
		ticksStartingThree = 0
	"
	
	button
	{
		area	0 0 875 700
		mosaic	GUITUTB
		action
		"
			helpString = 18042
		"
	}
	label
	{
		area		54 16 798 48
		text		"SOUND_TITLE"
		text style 'label'
		text align left center
		text point 25
		text shadow 1
	}
	text
	{
		area		24 402 394 44
		text		"CHARACTER_SOUNDS_LABEL"
		text style	"button"
		text shadow 1
		text align 	right center
	}
	list
	{
		
		column 
		{ 
			width 85
			label
			{
				area 0 0 -1 -1
				text lua "t( soundsToggles[rowNumber][1])"
				text style "normal"				
				text font "STONESML"
				text align right center
				text shadow 1
			}
			label
			{
				enabled "rowNumber == selectedsoundOpt"
				area 0 0 -1 -1
				text lua "t( soundsToggles[rowNumber][1])"
				text style "normal"
				text font "STONESML"
				text color S
				text align right center
				text shadow 1
			}
		}
		column 
		{ 
			width 15 
			label
			{
				area		20 6 28 28
				bam			ROUNDBUT
				scaleToClip
				frame		lua "ticksStarting ~= 0 and rowSelected == rowNumber and cellNumber == 2 and 1 or soundsToggles[rowNumber][4]"
			}
		}

		area 23 446 395 150
		rowheight	40
		table		"soundsToggles"
		var		selectedsoundOpt
		scrollbar	'GUISTSCR'
		hidehighlight
		action		
		"
			panelID = 7
			helpString = soundsToggles[selectedsoundOpt][2]
			selectedSL = 0
			if(cellNumber == 2) then
				Infinity_PlaySound('GAM_09')
				soundsToggles[selectedsoundOpt][4] = toggleFrame(soundsToggles[selectedsoundOpt][4])

				if soundsToggles[selectedsoundOpt][4] == 0 then
					soundsToggles[selectedsoundOpt][5] = 0
				else 
					soundsToggles[selectedsoundOpt][5] = 1
				end
				
			end
			ticksPassed = 0
			ticksStarting = 0
		"
		actionUpdate 
		"	
			ticksStarting = ticksStarting + 1
			if ticksStarting > 10 then
				ticksPassed = ticksPassed + 1
				if ticksPassed > 3 then
					ticksPassed = 0
				end
			end
			rowSelected = nil
		"
	}
	
	text
	{
		area		448 82 344 44
		text		"COMMAND_SOUNDS_BUTTON"
		text style	"button"
		text shadow 1
		text align 	right center
		action 
		"
			helpString = 18016 
			selectedsoundOpt = 0
			selectedSL = 1
		"
	}

	
	list
	{
		
		column 
		{ 
			width 85 
			label
			{
				area 10 0 -1 -1
				text lua "t( command[rowNumber][1])"
				text style	"normal"
				text shadow 1
				text align right center
			}
		}
		column 
		{ 
			width 15
			label
			{
				area		20 8 32 32
				bam			ROUNDBUT
				sequence 1
				scaleToClip
				frame		lua "ticksStartingTwo ~= 0 and rowSelected == rowNumber and 1 or command[rowNumber][4]"
			}
		}

		area 448 126 360 128
		
		rowheight	40
		table		"command"
		var		commandSel
		scrollbar	'GUISTSCR'
		hidehighlight

		action		
		"
			panelID = 7
			helpString = 18016 
			selectedSL = 1
			selectedsoundOpt = 0
			opt = commandSel
			command[1][4] = 0
			command[2][4] = 0
			command[3][4] = 0
			
			Infinity_PlaySound('GAM_09')
			command[opt][4] = 2
			ticksPassed = 0
			ticksStartingTwo = 0
		"
		actionUpdate 
		"	
			ticksStartingTwo = ticksStartingTwo + 1
			if ticksStartingTwo > 10 then
				ticksPassed = ticksPassed + 1
				if ticksPassed > 3 then
					ticksPassed = 0
				end
			end
			rowSelected = nil
		"
	}

	text
	{
		area		448 254 344 40
		text		"SELECTION_BUTTON"
		text style	"button"
		text shadow 1
		text align 	right center
		action 
		"
			helpString = 11352 
			selectedsoundOpt = 0
			selectedSL = 2
		"
	}

	list
	{
		
		column 
		{ 
			width 85
			label
			{
				area 10 0 -1 -1
				text lua "t( selectOpt[rowNumber][1])"
				text style	"normal"
				text align right center
				text shadow 1
			}
		}
		column 
		{ 
			width 15
			label
			{
				area		20 8 32 32
				bam			ROUNDBUT
				sequence 1
				scaleToClip
				frame		lua "ticksStartingThree ~= 0 and rowSelected == rowNumber and 1 or selectOpt[rowNumber][4]"
			}
		}

		area 448 294 360 142
		
		rowheight	46
		table		"selectOpt"
		var		selectSel
		scrollbar	'GUISTSCR'
		hidehighlight
		action		
		"
			panelID = 7
			helpString = 11352 
			selectedSL = 2
			opt = selectSel
			selectOpt[1][4] = 0
			selectOpt[2][4] = 0
			selectOpt[3][4] = 0
			selectedsoundOpt = 0
			
			Infinity_PlaySound('GAM_09')
			selectOpt[opt][4] = 2
			ticksPassed = 0
			ticksStartingThree = 0
		"
		actionUpdate 
		"	
			ticksStartingThree = ticksStartingThree + 1
			if ticksStartingThree > 10 then
				ticksPassed = ticksPassed + 1
				if ticksPassed > 3 then
					ticksPassed = 0
				end
			end
			rowSelected = nil
		"
	}
	
	text
	{
		area		466 446 366 124
		text		lua "Infinity_FetchString(helpString)"
		text style	normal
		text shadow 1
		scrollbar	'GUISCRC'
	}
	
	text
	{
		area		24 82 394 44
		text		"VOLUME_CONTROLS_LABEL"
		text style	"button"
		text shadow 1
		text align 	right center
	}

	text
	{
		area		35 126 173 40
		text		"AMBIENT_VOLUME_LABEL"
		text style	"label"
		text align	right center
		text upper
		text shadow 1
		action 
		"
			helpString = 18008 
			selectedsoundOpt = 0
			selectedSL = 4
		"
	}
	slider
	{
		area 218 126 200 40
		position "ambientSLDR"
		sliderBackground 'SLDRBACK'
		scaleToClip
		bam	 'SLDRSTAR'
		sequence 0
		frame	 1
		settings	40
		pad 5 0 4 0
		action 
		"
			helpString = 18008 
			selectedsoundOpt = 0
			selectedSL = 4
		"
	}

	text
	{
		area		35 176 173 40	
		text		"SFX_VOLUME_LABEL"
		text style	"label"
		text align	right center
		text upper
		text shadow 1
		action 
		"
			helpString = 18009 
			selectedsoundOpt = 0
			selectedSL = 5
		"
		
	}
	slider
	{
		area 218 176 200 40
		sliderBackground 'SLDRBACK'
		scaleToClip
		position "sfxSLDR"
		bam	 'SLDRSTAR'
		sequence 0
		frame	 1
		settings	40
		pad 5 0 4 0
		action 
		"
			helpString = 18009 
			selectedsoundOpt = 0
			selectedSL = 5
		"
	}

	text
	{
		area		35 226 173 40	
		text		"VOICE_VOLUME_LABEL"
		text style	"label"
		text align	right center
		text upper
		text shadow 1
		action 
		"
			helpString = 18010 
			selectedsoundOpt = 0
			selectedSL = 6
		"
	}
	slider
	{
		area 218 226 200 40
		position "voiceSLDR"
		bam	 'SLDRSTAR'
		sliderBackground 'SLDRBACK'
		scaleToClip
		sequence 0
		frame	 1
		settings	40
		pad 5 0 4 0
		action 
		"
			helpString = 18010 
			selectedsoundOpt = 0
			selectedSL = 6
		"
	}

	text
	{
		area		35 276 173 40	
		text		"MUSIC_VOLUME_LABEL"
		text style	"label"
		text align	right center
		text upper
		text shadow 1
		action 
		"
			helpString = 18011 
			selectedsoundOpt = 0
			selectedSL = 7
		"
		
	}
	slider
	{
		area 218 276 200 40
		position "musicSLDR"
		bam	 'SLDRSTAR'
		sliderBackground 'SLDRBACK'
		scaleToClip
		sequence 0
		frame	 1
		settings	40
		pad 5 0 4 0
		action 
		"
			helpString = 18011 
			selectedsoundOpt = 0
			selectedSL = 7
		"
	}

	text
	{
		area		35 326 173 40	
		text		"MOVIE_VOLUME_LABEL"
		text style	"label"
		text align	right center
		text upper
		text shadow 1
		action 
		"
			helpString = 18012
			selectedsoundOpt = 0
			selectedSL = 8
		"
	}
	slider
	{
		area 218 326 200 40
		position "movieSLDR"
		bam	 'SLDRSTAR'
		sliderBackground 'SLDRBACK'
		scaleToClip
		sequence 0
		frame	 1
		settings	40
		pad 5 0 4 0
		action 
		"
			helpString = 18012
			selectedsoundOpt = 0
			selectedSL = 8
		"
	}

	button
	{
		on escape
		area		208 638 162 30
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text 		"CANCEL_BUTTON"
		text style	"button"
		text shadow 1
		action
		"
			selectedSL = 0
			panelID = 8
			Infinity_PopMenu()
		"
	}
	button
	{
		area		494 638 162 30
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text 		"DONE_BUTTON"
		text style	"button"
		text shadow 1
		action
		"
			panelID = 7
			
			for index, var in pairs(command) do
				Infinity_Log('Com var[4] #' .. index .. ': ' .. var[4])
				if var[4] == 2 then
					Infinity_ChangeOption( var[3], 1, panelID)
				end
			end
			for index, var in pairs(selectOpt) do
				Infinity_Log('Sel var[4] #' .. index .. ': ' .. var[4])
				if var[4] == 2 then
					Infinity_ChangeOption( var[3], 1, panelID)	
				end	
			end
			Infinity_ChangeOption( 1, ambientSLDR, panelID)
			Infinity_ChangeOption( 2, sfxSLDR, panelID )
			Infinity_ChangeOption( 3, voiceSLDR, panelID )
			Infinity_ChangeOption( 4, musicSLDR, panelID)
			Infinity_ChangeOption( 22, movieSLDR, panelID)

			selectedOpt = 0
			selectedSL = 0

			for index, var in pairs(soundsToggles) do				
				Infinity_ChangeOption( var[3], var[5], panelID)						
			end

			panelID = 8
			Infinity_PopMenu()
		"
	}
}


`

feedbackToggles = {
{'COLORED_MARKERS_LABEL',			'COLORED_MARKERS_HELP', 			 38, 0, 0},
{'CLASSIC_MARKERS_LABEL',			'CLASSIC_MARKERS_HELP', 			 45, 0, 0},
{'ENABLE_CONFIRMATION_LABEL',		'ENABLE_CONFIRMATION_HELP', 		 41, 0, 0},
{'DISABLE_COSMETIC_ATTACKS_LABEL',	'DISABLE_COSMETIC_ATTACKS_HELP', 	 43, 0, 0},
{'JOURNAL_POPUPS_LABEL',			'JOURNAL_POPUPS_HELP', 				 44, 0, 0},
{'EQUIPMENT_COMPARISON_LABEL',      'EQUIPMENT_COMPARISON_DESCRIPTION',  46, 0, 0}
}

messagesToggles = { 
{'TO_HIT_ROLLS_LABEL',		'TO_HIT_ROLLS_HELP', 	10, 0, 0},
{'ACTIONS_LABEL', 			'ACTIONS_HELP', 		12, 0, 0},
{'STATE_CHANGES_LABEL',		'STATE_CHANGES_HELP', 	13, 0, 0},
{'COMBAT_INFO_LABEL',		'COMBAT_INFO_HELP', 	11, 0, 0},
{'SELECTION_TEXT_LABEL',	'SELECTION_TEXT_HELP',	14, 0, 0},
{'MISC_LABEL',				'MISC_HELP', 			15, 0, 0}
}

selFeedOpt = 0
selMessageOpt = 0
helpString = 0

markerFeedSLDR = 0
locatorFeedSLDR = 0

function getFrequency(d,includeHighter)
	strref = ""
	if ( d ==0 ) then
		strref = "MINIMUM"
	elseif (d == 1) then
		strref = "LOW"
	elseif (d == 2) then
		strref = "MEDIUM"
	elseif (d == 3) then
		strref = "HIGH"
	elseif (d == 4 and includeHighter == true) then
		strref = "HIGHER"
	elseif (d == 4 and includeHighter == false) then
		strref = "MAXIMUM"
	elseif (d == 5) then
		strref = "MAXIMUM"
	end
	return t(strref)
end

`

menu
{
	name	'OPTIONS_FEEDBACK'
	align center center
	modal
	onOpen
	"
		panelID = 9

		helpString = 'FEEDBACK_HELP'
		selFeedOpt = 0
		selMessageOpt = 0
		selectedSL = 0

		markerFeedSLDR = Infinity_GetOption(8, panelID)
		locatorFeedSLDR = Infinity_GetOption(9, panelID)
		
		for index, var in pairs(feedbackToggles) do
				var[5] = Infinity_GetOption(var[3], panelID)
				if var[5] == 0 then
					var[4] = 0
				else
					var[4] = 2
				end
			end

		for index, var in pairs(messagesToggles) do
			var[5] = Infinity_GetOption(var[3], panelID)
			if var[5] == 0 then
				var[4] = 0
			else
				var[4] = 2
			end
		end

	"

	button
	{
		area	0 0 875 700
		mosaic	GUITUTB
		action
		"
			helpString = 'FEEDBACK_HELP'
			selFeedOpt = 0
			selMessageOpt = 0
			selectedSL = 0
		"
	}
	label
	{
		area		54 16 798 48
		text		"FEEDBACK_TITLE"
		text style 'label'
		text align left center
		text point 25
		text shadow 1
	}
	label
	{
		area		65 276 331 42
		text		"VISUAL_FEEDBACK_LABEL"
		text style	"button"
		text shadow 1
		text align 	right center
	}

	list
	{
		
		column 
		{ 
			width 85
			label
			{
				area 0 0 -1 -1
				text lua "t( feedbackToggles[rowNumber][1])"
				text style "normal"
				text font "STONESML"
				text shadow 1
				text align right center
			}
			label
			{
				enabled "rowNumber == selFeedOpt"
				area 0 0 -1 -1
				text lua "t( feedbackToggles[rowNumber][1])"
				text style "normal"
				text font "STONESML"
				text shadow 1
				text color S
				text align right center
			}
		}
		column 
		{ 
			width 15 
			label
			{
				area		20 6 28 28
				bam			ROUNDBUT
				scaleToClip
				frame		lua "ticksStarting ~= 0 and rowSelected == rowNumber and cellNumber == 2 and 1 or feedbackToggles[rowNumber][4]"
			}
		}

		area 32 322 386 274
		hidehighlight
		rowheight	40
		table		"feedbackToggles"
		var		selFeedOpt
		scrollbar	'GUISTSCR'

		action		
		"
			selectedSL = 0
			selMessageOpt = 0
			helpString = feedbackToggles[selFeedOpt][2]

			if(cellNumber == 2) then
				Infinity_PlaySound('GAM_09')
				feedbackToggles[selFeedOpt][4] = toggleFrame(feedbackToggles[selFeedOpt][4])

				if feedbackToggles[selFeedOpt][4] == 0 then
					feedbackToggles[selFeedOpt][5] = 0
				else 
					feedbackToggles[selFeedOpt][5] = 1
				end
			end
			ticksPassed = 0
			ticksStarting = 0
		"
		actionUpdate 
		"	
			ticksStarting = ticksStarting + 1
			if ticksStarting > 10 then
				ticksPassed = ticksPassed + 1
				if ticksPassed > 3 then
					ticksPassed = 0
				end
			end
			rowSelected = nil
		"
	}

	label
	{
		area		450 86 368 44
		text		"FEEDBACK_MESSAGES_LABEL"
		text style	"button"
		text shadow 1
		text align 	right center
	}

	list
	{
		
		column 
		{ 
			width 85
			label
			{
				area 10 0 -1 -1
				text lua "t( messagesToggles[rowNumber][1])"
				text style	"normal"
				text font "STONESML"
				text shadow 1
				text align right center
			}
			label
			{
				enabled "rowNumber == selMessageOpt"
				area 10 0 -1 -1
				text lua "t( messagesToggles[rowNumber][1])"
				text style	"normal"
				text font "STONESML"
				text shadow 1
				text align right center
				text color S
			}
		}
		column 
		{ 
			width 15
			label
			{
				area		20 4 32 32
				bam			ROUNDBUT
				sequence 1
				scaleToClip
				frame		lua "ticksStartingTwo ~= 0 and rowSelected == rowNumber and cellNumber == 2 and 1 or messagesToggles[rowNumber][4]"
			}
		}

		area 450 130 368 298
		hidehighlight
		rowheight	40
		table		"messagesToggles"
		var		selMessageOpt
		scrollbar	'GUISTSCR'

		action		
		"

			helpString = messagesToggles[selMessageOpt][2]
			selectedSL = 0
			selFeedOpt = 0

			if(cellNumber == 2) then
				Infinity_PlaySound('GAM_09')
				messagesToggles[selMessageOpt][4] = toggleFrame(messagesToggles[selMessageOpt][4])

				if messagesToggles[selMessageOpt][4] == 0 then
					messagesToggles[selMessageOpt][5] = 0
				else 
					messagesToggles[selMessageOpt][5] = 1
				end
			end
			ticksPassed = 0
			ticksStartingTwo = 0
		"
		actionUpdate 
		"	
			ticksStartingTwo = ticksStartingTwo + 1
			if ticksStartingTwo > 10 then
				ticksPassed = ticksPassed + 1
				if ticksPassed > 3 then
					ticksPassed = 0
				end
			end
			rowSelected = nil
		"
	}
	text
	{
		area		466 446 366 126
		text		lua "t(helpString)"
		text style	normal
		scrollbar	'GUISCRC'
	}

	text 
	{
		area		26 102 178 40
		text		"MARKER_FEEDBACK_LABEL"
		text style "label"
		text align	right center
		text upper
		text shadow 1
		action 
		"
			helpString = 'MARKER_FEEDBACK_HELP' 
			selFeedOpt = 0
			selMessageOpt = 0
			selectedSL = 1
		"
		
	}
	slider
	{
		area		214 102 200 40
		position "markerFeedSLDR"
		bam	 'SLDRSTAR'
		sliderBackground 'SLDRBACK'
		scaleToClip
		sequence 0
		frame	 1
		settings	6
		pad 5 0 5 0
		action 
		"
			helpString = 'MARKER_FEEDBACK_HELP' 
			selFeedOpt = 0
			selMessageOpt = 0
			selectedSL = 1
		"
	}
	label
	{
		area		214 142 200 36
		text		lua "getFrequency(markerFeedSLDR,true)"
		text style	"label"
		text align	center center
	}

	text
	{
		area		26 184 178 40	
		text		"LOCATOR_FEEDBACK_LABEL"
		text style "label"
		text align	right center
		text upper
		text shadow 1
		action 
		"
			helpString = 'LOCATOR_FEEDBACK_HELP'
			selFeedOpt = 0
			selMessageOpt = 0
			selectedSL = 2
		"
	}
	slider
	{
		area 214 184 200 40
		position "locatorFeedSLDR"
		bam	 'SLDRSTAR'
		sliderBackground 'SLDRBACK'
		scaleToClip
		sequence 0
		frame	 1
		settings	5
		pad 5 0 5 0
		action 
		"
			helpString = 'LOCATOR_FEEDBACK_HELP'
			selFeedOpt = 0
			selMessageOpt = 0
			selectedSL = 2
		"
	}
	label
	{
		area		214 224 200 36
		text		lua "getFrequency(locatorFeedSLDR,false)"
		text style	"label"	
		text shadow 1
		text align	center center
	}
	button
	{
		on escape
		area		208 638 162 30
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text 		"CANCEL_BUTTON"
		text style	"button"
		text shadow 1
		action
		"
			helpString = 'GAMEPLAY_DESCRIPTION'
			selectedSL = 0
			panelID = 8
			Infinity_PopMenu()
		"
	}
	button
	{
		area		494 638 162 30
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text 		"DONE_BUTTON" --Done
		text style	"button"
		text shadow 1
		action
		"
			helpString = 'GAMEPLAY_DESCRIPTION'
			panelID = 9
			Infinity_ChangeOption( 8, markerFeedSLDR, panelID)
			Infinity_ChangeOption( 9, locatorFeedSLDR, panelID )

			selectedOpt = 0
			selectedSL = 0

			for index, var in pairs(messagesToggles) do
				
				Infinity_ChangeOption( var[3], var[5], panelID)
						
			end

			for index, var in pairs(feedbackToggles) do
				
				Infinity_ChangeOption( var[3], var[5], panelID)
						
			end
			Infinity_PopMenu()
		"
	}
}

`
function getGooglePlaySignInText()
	if(Infinity_GooglePlaySignedIn() == 1) then
		return t("SIGN_OUT_BUTTON")
	else
		return t("SIGN_IN_BUTTON")
	end
end

keyCategory = 1
key = 0

function displayHelp()
	if not (key == 0) then
		return 24680
	end
	return 0
end

function formatKeyCode(number)
	local ret = ""

	if number < 127 and number > 32 then
		return string.format('%c', keybindings[keyCategory][rowNumber][6])
	end
	ret = t("SDL_" .. string.format('%d', keybindings[keyCategory][rowNumber][6]))
 
	return ret
end

function getHotkeyName(category,number)
	local ret = ""
	if category < 5 then
		ret = t(keybindings[category][number][4])
		if ret == keybindings[category][number][4] then
			ret = Infinity_FetchString(keybindings[category][number][4])
		end
	else
		ret = Infinity_FetchString(keybindings[category][number][4])
	end
	return ret
end

function getKeybindFrame()
	if ticksStarting == 0 and rowSelected == rowNumber then
			return 2
		elseif ticksStarting ~= 0 and rowSelected == rowNumber then return 1
		else return 0 
	end
	end
`
menu
{
	name	'OPTIONS_KEYBINDINGS'
	modal
	align center center
	onopen "cellNumber = nil; ticksPassed = 0; ticksStarting = 0"
	
	button -- Background
	{
		area 0 0 783 700
		mosaic GUICHISD 
	}
	
	label -- Title
	{
		area		44 28 540 42
		text  "ASSIGN_KEYS_TITLE" 
		text style 'label'
		text align left center
		text point 25
		text shadow 1
	}
	
	label -- Instruction
	{
		area 32 540 720 28
		text  "ASSIGN_KEYS_SUBTITLE" 
		text style	"label"
		text shadow 1
	}
	label -- Contextual instruction
	{
		area 42 568 702 34
		text lua "Infinity_FetchString(displayHelp())"
		text style	"normal"
		text shadow 1
		text align center center
	}

	list -- Key categories
	{
		column 
		{ 
			width 100 
			button
			{
				area 0 0 328 35
				bam GUIRECC
				ScaleToClip
				sequenceonce lua "rowNumber % 4"
				frame lua "getKeybindFrame()"
			}
			button
			{
				enabled "ticksStarting == 0 or rowSelected ~= rowNumber"
				area 0 0 328 35
				text lua "t(keycategories[rowNumber][2])"
				text style	"button"		
				text shadow 1
				text align	center center 
			}
			button
			{
				enabled "ticksStarting ~= 0 and rowSelected == rowNumber"
				area 2 2 328 35
				text lua "t(keycategories[rowNumber][2])"
				text style	"button"		
				text shadow 1
				text align	center center 
			}
		}
		area 42 86 328 434
		
		rowheight	50
		table		"keycategories"
		var			keyCategory
		hidehighlight
		action
		"
			Infinity_StopKeybind()
			key = 0
			cellNumber = nil
			rowNumber = nil
			ticksPassed = 0
			ticksStarting = 0
			"
		actionUpdate 
		"	
			ticksStarting = ticksStarting + 1
			if ticksStarting > 10 then
				ticksPassed = ticksPassed + 1
				if ticksPassed > 3 then
					ticksPassed = 0
				end
			end
		"
	}

	
	list -- Key bindings
	{
		column 
		{ 
			width 75 
			label
			{
				area 0 0 -1 -1
				text lua "getHotkeyName(keyCategory,rowNumber)"
				text style	"normal"
				text shadow 1
				align left center
			}
			label
			{
				enabled "rowNumber == mouseoverRow"
				area 0 0 -1 -1
				text lua "getHotkeyName(keyCategory,rowNumber)"
				text style	"normal"
				text shadow 1
				text color 255 150 0 255
				align left center
			}
			label
			{
				enabled "rowNumber == key"
				area 0 0 -1 -1
				text lua "getHotkeyName(keyCategory,rowNumber)"
				text style	"normal"
				text shadow 1
				text color S
				align left center
			}
		}
		column 
		{ 
			width 25
			label
			{
				area 0 0 -1 -1
				text lua "formatKeyCode(keybindings[keyCategory][rowNumber][6])"
				text style	"normal"
				text font "STONESML"
				text upper				
				text shadow 1
				text align center center
			}
		}
		
		area 398 86 342 434
		rowheight	24
		table		"keybindings[keyCategory]"
		var			key
		scrollbar	'GUISTSCR'
		hidehighlight
		action
		"
		if(key > 0) then
			Infinity_StartKeybind(key);
			keybindings[keyCategory][key][6] = 0
		end
		"
		actionEnter	""
		actionExit	"mouseoverRow = 0"
	}
	
	button
	{
		area		434 638 162 30		
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text		"DONE_BUTTON"
		text style	"button"
		text shadow 1
		action
		"
			Infinity_StopKeybind()
			key = 0
			Infinity_PopMenu();
		"	
	}
	button
	{
		area		36 632 198 36
		bam GUIINVHC
		ScaleToClip
		sequenceonce lua "Infinity_RandomNumber(0, 1)"
		text		"REVERT_BUTTON"
		text style	"button"
		text shadow 1
		action "popup2Button(engine_mode == 0 and 27882 or 63745, 'REVERT_BUTTON', function() revertKeymap(); Infinity_PopMenu('OPTIONS_KEYBINDINGS') end)"
	}
}
`
function generateMegaCredits()
	megacredits = ''
	for k,v in pairs(credits) do
		megacredits = megacredits .. Infinity_FetchString(v)..'\n'
	end
end
`
menu
{
	name 'SODCREDIT'
	align center center
	onOpen
	"
		generateMegaCredits()
		chapterScreen:OnReplayButtonClick()
		TT_BuildTitleData('EXPANSION_LABEL', 656, true)
		TT_CreateTitleChars('EXPANSION_LABEL', 'TT_EXPANSION', 45, 'TEMPLATE_titlechar_EXPANSION')
	"
	onclose	"TT_DestroyTitleChars('EXPANSION_LABEL', 'TEMPLATE_titlechar_EXPANSION')"
	label
	{
		area 0 0 1024 768
		mosaic "NPCCHAP"
	}
	--text
	--{
		--area 182 52 660 50
		--text style "title"
		--text "MAIN_GAME_LABEL"
		--enabled "not e:IsTouchUI()"
	--}
	template
    {
        label
        {
            enabled "true"
            ignoreEvents
            area 0 0 -1 -1
            bam "TTREALMS"
            sequence lua "TT_TitleData['EXPANSION_LABEL'][instanceId].seq"
            align center center
        }
        name "TEMPLATE_titlechar_EXPANSION"
    }
	label
    {
        name "TT_EXPANSION"
		area 186 55 656 45
		--text "EXPANSION_LABEL"
		--text style "title"
    }
	label
	{
		area 79 241 249 390
		mosaic "credi_02"
	}
	text
	{
		name "text_CHAPTERSCROLL_item"
		area 418 216 574 430
		text lua "megacredits"
		text style normal
		text align center top
		scrollbar 'GUISCRC'
		scrollbar func 'UpdateChapterScroll'
		scrollbar hide lua 'text_CHAPTERSCROLL_auto == 1'
		action
		"
			text_CHAPTERSCROLL_auto = 0
		"
	}
	button
	{
		area 810 703 152 30
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text "DONE_BUTTON"
		text style "button"
		text shadow 1
		on escape
		clickable lua "chapterScreen:IsDoneButtonClickable()"
		action
		"
			megacredits = ''
			Infinity_PopMenu()
		"
	}
	button
	{
		area 618 703 152 30
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text "REPLAY_BUTTON"
		text style "button"
		text shadow 1
		clickable lua "chapterScreen:IsReplayButtonClickable()"
		action
		"
			chapterScreen:OnReplayButtonClick()
		"
	}
}

menu
{
	name	'CREDITS'
	align center center
	onOpen
	"
		generateMegaCredits()
	TT_BuildTitleData('CREDITS_TITLE', 356, true)
	TT_CreateTitleChars('CREDITS_TITLE', 'TT_CREDITS', 40, 'TEMPLATE_titlechar_CREDITS')
	"
	onclose	"TT_DestroyTitleChars('CREDITS_TITLE', 'TEMPLATE_titlechar_CREDITS')"
	label
	{
		area 0 0 1024 768
		mosaic GUISMBN
	}
	template
    {
        label
        {
            enabled "true"
            ignoreEvents
            area 0 0 -1 -1
            bam "TTREALMS"
            sequence lua "TT_TitleData['CREDITS_TITLE'][instanceId].seq"
            align center center
        }
        name "TEMPLATE_titlechar_CREDITS"
    }
	label
    {
        name "TT_CREDITS"
		area 38 38 356 40
		--text "CREDITS_TITLE"
		--text style "title"
    }
	text
	{
		area 30 122 982 550
		text lua "megacredits"
		scrollbar	'GUISTSCR'
		scrollbar func "resetScrollbar"
		text style "normal"
		text shadow 1
		text align center top
	}
	
	button
	{
		area		426 706 162 30
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text  "DONE_BUTTON"
		text style "button"
		text shadow 1
		action
		"
			Infinity_PopMenu();
		"	
	}
}

`
language = 0
showsubtitles = 0
displayLanguages = {}
function languageDetails()
	if displayLanguages[language] ~= nil then
		return Infinity_FetchString(displayLanguages[language][2]) .. '\n'  .. Infinity_FetchString(displayLanguages[language][3])
	else
		return ""
	end
end
function findCurrentLanguage()
	local lang = Infinity_GetINIString('Language', 'Text', '')
	for k,v in pairs(displayLanguages) do
		if v[1] == lang then
			language = k
  		end
	end
end
`
menu
{
	name	'OPTIONS_LANGUAGE'
	modal
	align center center
	onOpen
	"
		if e:IsTouchUI() then
			displayLanguages = tabletLanguages
		else
			displayLanguages = languages
		end
		showsubtitles = Infinity_GetINIValue('Program Options', 'Display Subtitles', 1)
		findCurrentLanguage()
	"
	
	 button
	 {
		 area	0 0 875 700
		 mosaic		GUITUTB
	 }
	label
	{
		area		54 16 798 48
		text		"LANGUAGE_TITLE"
		text style 'label'
		text align left center
		text point 25
		text shadow 1
	}
	list
	{
		column { 
			width 100
			label
			{
				area 0 0 -1 -1
				text lua "displayLanguages[rowNumber][4]"
				text style	"label"
				text shadow 1
				text align center center 
			}
			label
			{
					enabled "rowNumber == mouseoverRow"
				area 0 0 -1 -1
				text lua "displayLanguages[rowNumber][4]"
				text style	"label"
				text shadow 1
				text color 255 150 0 255
				text align center center 
			}
			label
			{
				enabled "rowNumber == language"
				area 0 0 -1 -1
				text lua "displayLanguages[rowNumber][4]"
				text style	"label"
				text shadow 1
				text color S
				text align center center 
			}
		}
	
		area		34 86 380 388
		rowheight	24
		table		"displayLanguages"
		var			language
		scrollbar	'GUISTSCR'
		hidehighlight		
		actionEnter	""
		actionExit	"mouseoverRow = 0"
	}
	text
	{
		area		448 86 408 346
		text lua	"languageDetails()"
		text style	normal
		text shadow 1
		text align	center top
		scrollbar	'GUISTSCR'
	}
	
	label
	{
		area		70 490 188 36
		text	"SHOW_SUBTITLES_LABEL"
		text style	"label"
		text shadow 1
		text align	right center
		text upper
	}
	label
	{
		area		34 538 380 44
		text lua 	"Infinity_FetchString(32129)"
		text style	"normal"
		text shadow 1
		text align	center center
		text upper
	}
	label
	{
		area		467 442 363 128
		text lua 	"Infinity_FetchString(71374)"
		text style	"normal"
		text shadow 1
		text align	center center
		text color 	'$'
	}
	
	button
	{
		area		278 494 28 28
		bam			ROUNDBUT
		scaleToClip
		toggle		showsubtitles
	}
	
	button
	{
		on escape
		area		208 638 162 30
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text	"CANCEL_BUTTON"
		text style	"button"
		text shadow 1
		action
		"
			-- cancel
			for index, var in pairs(displayLanguages) do
				Infinity_Log(var[3])
			end
			Infinity_PopMenu();
		"
	}
	
	button
	{
		area		494 638 162 30
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text 		"DONE_BUTTON"
		text style	"button"
		text shadow 1
		action
		"
			-- done
			Infinity_SetLanguage(displayLanguages[language][1],showsubtitles)
			Infinity_PopMenu()
		"
	}
	
}
`
function restoreOverlayFromQuit()
	--restore the old overlay if applicable
	if(oldOverlayMenuName) then
		Infinity_SetOverlay(oldOverlayMenuName)
	else
		Infinity_SetOverlay(nil)
	end
end
`
menu
{
	name 'QuitMenu'
	modal
	align center center
	label -- Background
	{
		area 0 0 380 278
		mosaic GUIERR2B 
	}
	label --Title
	{
		area 20 20 340 80
		text  20186
		text style	"normal"
		text shadow 1
		text align center center
	}
	button
	{
		area		108 136 162 32
		bam			GUIWPKPC
		ScaleToClip
		sequence	1
		text  "QUIT_GAME_BUTTON"
		text style	"button"
		text shadow 1
		on 			return
		action
		"
			restoreOverlayFromQuit()
			Infinity_ShutdownGame()
		"	
	}
	button
	{
		area		108 212 162 32
		bam			GUIWPKPC
		ScaleToClip
		sequence	1
		text  "CANCEL_BUTTON"
		text style	"button"
		text shadow 1
		on 			escape
		action
		"
			restoreOverlayFromQuit()
			Infinity_PopMenu('QuitMenu')
		"	
	}
}

`
selectedSlot = nil
itemRequestAmt = 0

function showItemAmountRequester(slotName)
	local slot = characters[id].equipment[slotName]
	if(slot.item.count == nil) then
		Infinity_Log("Nil count in requester!")
		return
	end
	if(slot.item.count > 1) then
		selectedSlot = slotName
		popupRequester(slot.item.count, inventorySplitStack, false, slot.item.icon)
	end
end
function inventorySplitStack(cnt)
	Infinity_SplitItemStack(characters[id].equipment[selectedSlot].id, cnt,'slot_inv_' .. characters[id].equipment[selectedSlot].id)
end

function GetAbilityIdentifyString()
	if(characters[id].equipment[selectedSlot].item.identified == 0) then
		return t("IDENTIFY_BUTTON")
	end
	
	if(characters[id].equipment[selectedSlot].abilityMode == 1) then
		return t("ABILITIES_BUTTON")
	end
	
	return ""
end

requester = {}
requester.requesterMax = 0
requester.requesterFunc = nil
requester.selling = false
itemRequestAmt = 0
requestAmt = 1
requester.icon = ""
`
menu
{
	name 'POPUP_REQUESTER'
	align center center
	modal
	onOpen
	"
		if requester.selling == false then
			itemRequestAmt = 1
			requestAmt = 1
		elseif requester.selling < 10 then
			itemRequestAmt = 1
			requestAmt = 1
		else
			itemRequestAmt = requester.requesterMax
			requestAmt = requester.requestMax
		end
		ticksStarting = 0
	"
	
	label
	{
		area 0 0 436 212
		mosaic GUIINVRB
	}
	label
	{
		area	227 14 190 32
		text	"CHOOSE_AMT_LABEL"
		text align center center
		text style "label"
		text shadow 1
	}
	edit
	{
		area		289 56 50 25
		var			itemRequestAmt
		text style	"edit"
		align center center
		maxlines	1
		fill            112 111 111 64
		action
		"
			-- only permit numbers as letters.
			-- character limit of 4
			if((tonumber(letter_pressed) ~= nil and #tostring(itemRequestAmt) < 4) or not letter_pressed) then
				return 1
			else
				return 0
			end
		"
	}
	label
	{
		area 30 30 52 52
		icon lua "requester.icon"
		ScaleToClip
	}
	button
	{
		on escape
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		area		236 145 162 30
		text  "CANCEL_BUTTON"
		text style	"button"
		text shadow 1
		action
		"
			Infinity_PopMenu()
		"
	}	
	button
	{
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		area		29 145 162 30
		-- the edit only permits to enter numbers or nothing at all, so this should be enough
		clickable	lua "itemRequestAmt ~= '' and itemRequestAmt ~= 0"
		text  "DONE_BUTTON"
		text style	"button"
		text shadow 1
		on E
		action
		"
			local cnt = tonumber(itemRequestAmt)
			Infinity_PopMenu('POPUP_REQUESTER')
			if cnt and cnt > 0 then
				requester.requesterFunc(math.min(cnt, requester.requesterMax))
			end
			requestAmt = 0
			itemRequestAmt = 1
		"
	}
	label
	{
		on return
		action
		"
			local cnt = tonumber(itemRequestAmt)
			Infinity_PopMenu('POPUP_REQUESTER')
			if cnt and cnt > 0 then
				requester.requesterFunc(math.min(cnt, requester.requesterMax))
			end
			requestAmt = 0
			itemRequestAmt = 1
		"
	}
	label
	{
		enabled "requester.requesterMax > 3"
		area 78 92 270 35
		mosaic GUISCAL
	}
	slider
	{
		enabled "requester.requesterMax > 3"
		area 78 102 270 25
		position "requestAmt"
		bam "SLIDER"
		sequence 0
		frame	 1
		settings 	11
		pad 6 0 6 0
		action
		"
			selectedOpt = 0
			selectedSL = 0
			itemRequestAmt = math.floor(requestAmt * requester.requesterMax / 10)
		"
	}
	button
	{
		bam GUIOSW
		area 349 52 30 30
		sequence 0
		ScaleToClip
		action
		"
			local amt = tonumber(itemRequestAmt)
			if(amt < requester.requesterMax) then
				itemRequestAmt = amt + 1
			end
			requestAmt =math.floor(itemRequestAmt / requester.requesterMax * 10) 
		"
		actionHold
		"
			local amt = tonumber(itemRequestAmt)
			if(amt < requester.requesterMax) then
				itemRequestAmt = amt + 1
			end
			requestAmt =math.floor(itemRequestAmt / requester.requesterMax * 10) 
		"
	}
	button
	{
		bam GUIOSW
		area 379 52 30 30
		sequence 1
		ScaleToClip
		action
		"
			local amt = tonumber(itemRequestAmt)
			if(amt > 1) then
				itemRequestAmt = amt - 1
			end
			requestAmt =math.floor(itemRequestAmt / requester.requesterMax * 10) 
		"
		actionHold
		"
			local amt = tonumber(itemRequestAmt)
			if(amt > 1) then
				itemRequestAmt = amt - 1
			end
			requestAmt =math.floor(itemRequestAmt / requester.requesterMax * 10) 
		"
	}
}
`
selectedAbility = -1
function initAbilities()
	--initialize selected ability
	local i = 1
	while ( i < 4 ) do
		local ability = characters[id].equipment[selectedSlot].abilities[i]
		if(ability ~= nil) then
			if(ability.selected == 1) then
				selectedAbility = i
				return
			end
		end
		i = i + 1
	end
end
`
menu
{
	name 'ITEM_ABILITIES'
	align center center
	onOpen "initAbilities()"
	
	label
	{
		area	0 0 450 568
		mosaic	GUIINVAB
	}
	label
	{
		area 28 14 394 42
		text "ITEM_ABILITIES_TITLE"
		text style 'label'
		text align left center
		text point 22
		text shadow 1
	}
	button
	{
		area 118 71 304 52
		enabled "characters[id].equipment[selectedSlot].abilities[1] ~= nil"
		text lua "characters[id].equipment[selectedSlot].abilities[1].text"
		text style	"label"
		text shadow 1
		action "selectedAbility = 1"
		text align left center
	}
	button
	{
		area 41 71 52 52
		bam "STONSLOT"
		sequenceonce lua "Infinity_RandomNumber(0, 3)"
		frame lua "selectedAbility == 1 and 2 or 0"
		enabled "characters[id].equipment[selectedSlot].abilities[1] ~= nil"
		icon lua "characters[id].equipment[selectedSlot].abilities[1].icon"
		action "selectedAbility = 1"
	}
	button
	{
		area 118 154 304 52
		enabled "characters[id].equipment[selectedSlot].abilities[2] ~= nil"
		text lua "characters[id].equipment[selectedSlot].abilities[2].text"
		text style	"label"
		text shadow 1
		action "selectedAbility = 2"
		text align left center
	}
	button
	{
		area 41 154 52 52
		bam "STONSLOT"
		sequenceonce lua "Infinity_RandomNumber(0, 3)"
		frame lua "selectedAbility == 2 and 2 or 0"
		enabled "characters[id].equipment[selectedSlot].abilities[2] ~= nil"
		icon lua "characters[id].equipment[selectedSlot].abilities[2].icon"
		action "selectedAbility = 2"
	}
	button
	{
		area 118 238 310 52
		enabled "characters[id].equipment[selectedSlot].abilities[3] ~= nil"
		text lua "characters[id].equipment[selectedSlot].abilities[3].text"
		text style	"label"
		text shadow 1
		action "selectedAbility = 3"
		text align left center
	}
	button
	{
		area 41 238 52 52
		bam "STONSLOT"
		sequenceonce lua "Infinity_RandomNumber(0, 3)"
		frame lua "selectedAbility == 3 and 2 or 0"
		enabled "characters[id].equipment[selectedSlot].abilities[3] ~= nil"
		icon lua "characters[id].equipment[selectedSlot].abilities[3].icon"
		action "selectedAbility = 3"
	}
	
	label
	{
		area 22 336 406 136
		text 11322
		text style 'normal'
		scrollbar 'GUISCRC'
	}
	
	button
	{
		area 262 504 156 30
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text "DONE_BUTTON"
		text style "button"
		text shadow 1
		action
		"
			local itemNum = characters[id].equipment[selectedSlot].abilities[selectedAbility].itemNum
			Infinity_SelectItemAbility(selectedAbility - 1, itemNum, characters[id].equipment[selectedSlot].id)
			Infinity_PopMenu()
		"
	}
	
	button
	{
		on escape
		area 70 504 156 30
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text "CANCEL_BUTTON"
		text style "button"
		text shadow 1
		action
		"
			Infinity_PopMenu()
		"
	}

}
`
TEXT_popup_info = 0
`
menu
{
	name 'POPUP_INFO'
	align center center
	modal
	label
	{
		area 0 0 380 212
		mosaic GUIERR1B
	}
	label
	{
		area 20 20 340 80
		text lua "getStringFromAmbiguousSource(TEXT_popup_info)"
		text style	"normal"
		text align center center
	}
	button
	{
		on escape
		area		108 136 162 32
		bam			GUIWPKPC
		ScaleToClip
		sequence	1
		text "DONE_BUTTON"
		text style	"button"
		text shadow 1
		action 
		"
			Infinity_PopMenu()
		"
	}
}
menu
{
	name 'POPUP_TWOBUTTON'
	align center center
	modal
	label
	{
		area 0 0 380 278
		mosaic GUIERR2B 
	}
	label
	{
		area 22 20 336 80
		text lua "getStringFromAmbiguousSource(Popup2Button.info)"
		text style	"normal"
		text shadow 1
		text align center center
	}
	button
	{
		on escape
		area		108 212 162 32
		bam			GUIWPKPC
		ScaleToClip
		sequence	1
		text lua "t(Popup2Button.cancelText or 'CANCEL_BUTTON')"
		text style	"button"
		text shadow 1
		action 
		"
			Infinity_PopMenu('POPUP_TWOBUTTON')
			if (Popup2Button.cancelFunc) then
				Popup2Button.cancelFunc()
			end
		"
	}
	button
	{
		on			return
		area		108 136 162 32
		bam			GUIWPKPC
		ScaleToClip
		sequence	1
		text style	"button"
		text shadow 1
		text lua "t(Popup2Button.okText or 'DONE_BUTTON')"
		action 
		"
			Infinity_PopMenu('POPUP_TWOBUTTON')
			if (Popup2Button.okFunc) then
				Popup2Button.okFunc()
			end
		"
	}
}

menu
{
	name 'POPUP_REFORMPARTY'
	align center bottom
	modal
	label
	{
		area 0 0 765 160
		mosaic GUWPKPC0
	}
	label
	{
		area 22 12 719 67
		text lua "getStringFromAmbiguousSource(Popup2ButtonReformParty.info)"
		text style	"label"
		text shadow 1
		text align center center
	}
	button
	{
		on escape
		area 592 96 149 32
		bam			GUIWPKPC
		ScaleToClip
		sequence	1
		text lua "t(Popup2ButtonReformParty.cancelText or 'CANCEL_BUTTON')"
		text style	"button"
		text shadow 1
		action 
		"
			Infinity_PopMenu('POPUP_REFORMPARTY')
			if (Popup2ButtonReformParty.cancelFunc) then
				Popup2ButtonReformParty.cancelFunc()
			end
		"
	}
	label --under button thingy
	{
		area 384 79 194 69
		bam 'BG_UND'
	}
	button
	{
		on			return
		area		400 96 149 32
		bam			GUIWPKPC
		ScaleToClip
		sequence	1
		text style	"button"
		text shadow 1
		text lua "t(Popup2ButtonReformParty.okText or 'DONE_BUTTON')"
		action 
		"
			Infinity_PopMenu('POPUP_REFORMPARTY')
			if (Popup2ButtonReformParty.okFunc) then
				Popup2ButtonReformParty.okFunc()
			end
		"
	}
}

menu
{
	name 'POPUP_THREEBUTTON'
	align center center
	modal
	label
	{
		area 0 0 380 355
		mosaic GUIERR3B
	}
	label
	{
		area 22 22 338 80
		text lua "getStringFromAmbiguousSource(Popup3Button.info)"
		text style	"normal"
		text align center center
	}
	button
	{
		area 88 212 200 32
		bam			GUIWPKPC
		ScaleToClip
		sequence	1
		text lua "t(Popup3Button.rightText)"
		text style	"button"
		text shadow 1
		action 
		"
			Infinity_PopMenu()
			if (Popup3Button.rightFunc) then
				Popup3Button.rightFunc()
			end
		"
	}
	button
	{
		area 88 136 200 32
		bam			GUIWPKPC
		ScaleToClip
		sequence	1
		text style	"button"
		text shadow 1
		text lua "t(Popup3Button.midText)"
		action 
		"
			Infinity_PopMenu()
			if (Popup3Button.midFunc) then
				Popup3Button.midFunc()
			end
		"
	}
	button
	{
		area 112 288 162 32
		bam			GUIWPKPC
		ScaleToClip
		sequence	1
		text style	"button"
		text shadow 1
		text lua "t(Popup3Button.leftText)"
		action 
		"
			Infinity_PopMenu()
			if (Popup3Button.leftFunc) then
				Popup3Button.leftFunc()
			end
		"
	}
}

menu
{
	name 'POPUP_FOURBUTTON'
	align center center
	modal
	label
	{
		area 0 0 380 431
		mosaic GUIERR4B
	}
	label
	{
		area 20 20 340 80
		text lua "getStringFromAmbiguousSource(Popup4Button.info)"
		text style	"normal"
		text align center center
	}
	button
	{
		area 88 212 200 32
		bam			GUIWPKPC
		ScaleToClip
		sequence	1
		text lua "t(Popup4Button.farRightText)"
		text style	"button"
		text shadow 1
		action 
		"
			Infinity_PopMenu()
			if (Popup4Button.farRightFunc) then
				Popup4Button.farRightFunc()
			end
		"
	}
	button
	{
		area 88 286 200 32
		bam			GUIWPKPC
		ScaleToClip
		sequence	1
		text style	"button"
		text shadow 1
		text lua "t(Popup4Button.rightText)"
		action 
		"
			Infinity_PopMenu()
			if (Popup4Button.rightFunc) then
				Popup4Button.rightFunc()
			end
		"
	}
	button
	{
		area 88 136 200 32
		bam			GUIWPKPC
		ScaleToClip
		sequence	1
		text style	"button"
		text shadow 1
		text lua "t(Popup4Button.leftText)"
		action 
		"
			Infinity_PopMenu()
			if (Popup4Button.leftFunc) then
				Popup4Button.leftFunc()
			end
		"
	}
	button
	{
		area 112 364 162 32
		bam			GUIWPKPC
		ScaleToClip
		sequence	1
		text style	"button"
		text shadow 1
		text lua "t(Popup4Button.farLeftText)"
		action 
		"
			Infinity_PopMenu()
			if (Popup4Button.farLeftFunc) then
				Popup4Button.farLeftFunc()
			end
		"
	}
}

menu
{
	name 'ITEM_IDENTIFY'
	align center center
	label
	{
		area 0 0 380 355
		mosaic GUIERR3B
	}
	label
	{
		area 22 22 338 80
		text 19394
		text style	"normal"
		text align center center
	}
	button
	{
		area 88 136 200 32
		bam			GUIWPKPC
		ScaleToClip
		sequence	1
		text style "button"
		text shadow 1
		text "SPELL_BUTTON"
		
		clickable lua "Infinity_GetSpellIdentifyEnabled(characters[id].equipment[selectedSlot].id)"
		action 
		"
			Infinity_OnSpellIdentify(characters[id].equipment[selectedSlot].id); 
			Infinity_PopMenu()
			itemDesc.item = characters[id].equipment[selectedSlot].item --update itemDesc item
		"
	}
	button
	{
		on escape
		area 112 288 162 32
		bam			GUIWPKPC
		ScaleToClip
		sequence	1
		text style "button"
		text shadow 1
		text "CANCEL_BUTTON"
		action
		"
			Infinity_PopMenu()
		"
	}
	button
	{
		area 88 212 200 32
		bam			GUIWPKPC
		ScaleToClip
		sequence	1
		text style "button"
		text shadow 1
		text "SCROLL_BUTTON"
		
		clickable lua "Infinity_GetScrollIdentifyEnabled(characters[id].equipment[selectedSlot].id)"
		action 
		"
			Infinity_OnScrollIdentify(characters[id].equipment[selectedSlot].id)
			Infinity_PopMenu()
			itemDesc.item = characters[id].equipment[selectedSlot].item --update itemDesc item
		"
	}
	
	
}
`
function showItemDescriptionInventory(slotName)
	if(characters[id].equipment[slotName].empty ~= 0) then
		return
	end

	selectedSlot = slotName
	Infinity_CheckItemIdentify(characters[id].equipment[slotName].id)
	showItemDescription(characters[id].equipment[slotName], 0)
end

itemDesc = {}
function showItemDescription(item, mode)
	if (item.item ~= nil) then
		itemDesc = item
	else
		itemDesc.item = item
	end
	itemDesc.mode = mode
	Infinity_PushMenu('ITEM_DESCRIPTION',0,0)
end

function itemDescLeftButtonEnabled()
	if(itemDesc.mode == 0) then
		return itemDesc.item.identified == 0 or itemDesc.abilityMode == 1
	end
	return 0
end
function itemDescLeftButtonText()
	if(itemDesc.mode == 0) then
		if(itemDesc.item.identified == 0) then
			return t("IDENTIFY_BUTTON") .. ': ' .. t("SPELL_BUTTON")
		end
		return t("ABILITIES_BUTTON")
	end
	return ""
end
function itemDescLeftButtonAction()
	if(itemDesc.mode == 0) then
		if(itemDesc.item.identified == 0) then
			Infinity_OnSpellIdentify(itemDesc.id)
			itemDesc.item = characters[id].equipment[selectedSlot].item --update itemDesc item
			computeSplitPosition(itemDesc.item.description, 'itemDescriptionSplit')
		else
			Infinity_PushMenu('ITEM_ABILITIES',0,0)
		end
	elseif(itemDesc.mode == 1) then 
		storeScreen:OpenBag(itemDesc.item.res)
		Infinity_PopMenu()
	end	
end

function itemDescRightButtonEnabled()
	if(itemDesc.mode == 0) then
		return itemDesc.item.identified == 0 or itemDesc.useMode ~= -1
	end
	return itemDesc.mode == 1 and itemDesc.item.isBag
end
function itemDescRightButtonText()
	if(itemDesc.mode == 0) then
		if(itemDesc.item.identified == 0) then
			return t("IDENTIFY_BUTTON") .. ': ' .. t("SCROLL_BUTTON")
		end
		return Infinity_GetUseButtonText(itemDesc.id, itemDesc.useMode)
	elseif(itemDesc.mode == 1) then
		return t('OPEN_CONTAINER_BUTTON')
	end
	return ""
end
function itemDescRightButtonAction()
	if(itemDesc.mode == 0) then
		if(itemDesc.item.identified == 0) then
			Infinity_OnScrollIdentify(itemDesc.id)
			itemDesc.item = characters[id].equipment[selectedSlot].item --update itemDesc item
			computeSplitPosition(itemDesc.item.description, 'itemDescriptionSplit')
		else
			Infinity_PopMenu()
			Infinity_OnUseButtonClick(itemDesc.id, itemDesc.useMode)
		end
	elseif(itemDesc.mode == 1) then
		storeScreen:OpenBag(itemDesc.item.res)
		Infinity_PopMenu()
	end
end
function computeSplitPosition(str, name)
	startPos = -1
	local firstChar = str:len() > 0 and str:byte() or 0
	if firstChar >= 65 and firstChar <= 90 then startPos = 2
	elseif firstChar >= 97 and firstChar <= 122 then startPos = 2
	elseif firstChar == 195 then startPos = 3 end
	splitPos = startPos
	curPos = startPos
	local newLine = false
	while splitPos ~= -1 do
		local b = str:byte(curPos)
		if b == nil then
			splitPos = curPos
		elseif b >= 240 then
			curPos = curPos + 3
		elseif b >= 224 then
			curPos = curPos + 2
		elseif b >= 194 then
			curPos = curPos + 1
		elseif b == 10 or b == 32 then
			splitPos = curPos
			newLine = true
		elseif b == 32 and not newLine then
			splitPos = curPos
		end
		Infinity_ScaleToText(name)
		local x,y,w,h = Infinity_GetArea(name)
		if h > 50 or curPos > str:len() then break end
		curPos = curPos + 1
	end
end
`
menu
{
	name 'ITEM_DESCRIPTION'
	align center center
	modal
	onOpen
	"
		Infinity_PlaySound('GAM_03')
		computeSplitPosition(itemDesc.item.description, 'itemDescriptionSplit')
		TT_BuildTitleData('ITEM_TITLE', 331, true)
		TT_CreateTitleChars('ITEM_TITLE', 'TT_ITEM', 37, 'TEMPLATE_titlechar_ITEM')
	"
	onClose
	"
		TT_DestroyTitleChars('ITEM_TITLE', 'TEMPLATE_titlechar_ITEM')
		Infinity_PlaySound('GAM_04')
	"
	label
	{
		area 0 0 757 710
		mosaic GUIINVHI
	}
	template
    {
        label
        {
            enabled "true"
            ignoreEvents
            area 0 0 -1 -1
            bam "TTREALMS"
            sequence lua "TT_TitleData['ITEM_TITLE'][instanceId].seq"
            align center center
        }
        name "TEMPLATE_titlechar_ITEM"
    }
	label
    {
        name "TT_ITEM"
		area 34 34 331 37
		--text "ITEM_TITLE"
		--text style "title"
    }
	label
	{
		area 664 34 52 52
		--bam STONSLOT
		icon lua "itemDesc.item.icon"
	}
	label
	{
		area 62 186 318 51
		text lua "itemDesc.item.name"
		text align center center
		text style "normal_parchment"
		text font "Stonebig"
		text point 15
	}
	label
	{
		name "itemDescriptionSplit"
		enabled "false"
		area 50 50 350 54
		text lua "itemDesc.item.description:sub(startPos, curPos)"
		text style "normal_parchment"
		scrollbar	'GUISCRC'
	}
	list
	{
		column
		{
			width 100
			label
			{
				enabled "rowNumber == 1"
				area 0 0 40 38
				bam INITIALS
				sequence lua "itemDesc.item.description:byte(startPos - 1) - 1"
			}
			label
			{
				enabled "rowNumber == 1"
				area 44 0 -1 -1
				text lua "itemDesc.item.description:sub(startPos, splitPos - 1)"
				text style "normal_parchment"
			}
			label
			{
				enabled "rowNumber == 2"
				area 0 0 -1 -1
				text lua "itemDesc.item.description:sub(splitPos + 1)"
				text style "normal_parchment"
			}
		}
		enabled "splitPos ~= -1"
		rowheight dynamic
		hidehighlight
		table "makeTable(2)"
		area 272 237 422 327
		scrollbar	'GUIKNSBR'
	}
	text
	{
		enabled "splitPos == -1"
		area 272 237 422 327
		text lua "itemDesc.item.description"
		scrollbar	'GUIKNSBR'
		text style "normal_parchment"
	}
	text
	{
		area 272 210 297 27
		enabled "itemDesc.item.identified == 0"
		text style "normal_parchment"
		text align left center
		text lua "Infinity_FetchString(17108)"
	}
	label
	{
		area 48 237 224 281
		bam lua "itemDesc.item.descPicture"
		sequence 0
		frame 0
		align center center
	}
	button
	{
		bam GUIINVHC
		ScaleToClip
		sequenceonce lua "Infinity_RandomNumber(0, 1)"
		area		30 638 250 44
		enabled "itemDescLeftButtonEnabled()"
		clickable lua "itemDesc.item.identified == 1 or Infinity_GetSpellIdentifyEnabled(itemDesc.id)"
		text lua "itemDescLeftButtonText()"
		text style "button"
		text shadow 1
		action
		"
			itemDescLeftButtonAction()
		"
	}
	button
	{
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		area		566 646 162 30
		text  "DONE_BUTTON"
		text style "button"
		text shadow 1
		action
		"
			Infinity_PopMenu()
		"
	}
	button
	{
		bam GUIINVHC
		ScaleToClip
		sequenceonce lua "Infinity_RandomNumber(0, 1)"
		area		294 638 250 44
		enabled "itemDescRightButtonEnabled()"
		clickable lua "itemDesc.item.identified == 1 or Infinity_GetScrollIdentifyEnabled(itemDesc.id)"
		text lua "itemDescRightButtonText()"
		text style "button"
		text shadow 1
		action
		"
			itemDescRightButtonAction()
		"
	}
}
`
function highlightSidebarButton(engine)
	return (engine == e:GetActiveEngine())
end
sidebarVisible =
{
	LEFT = 1,
	RIGHT = 1
}
showJournal = 0
wasPaused = 0
function toggleSidebar(side)
	local show = side .. "_SIDEBAR"
	local hide = show .. "_HIDDEN"
	if(sidebarVisible[side] == 1) then
		local temp = show
		show = hide
		hide = temp
		sidebarVisible[side] = 0
	else
		sidebarVisible[side] = 1
	end
	Infinity_PushMenu(show)
	Infinity_PopMenu(hide)
end
sidebarForceTooltips = 0
sidebarHidingIconOpacity = 0
`
menu
{
	name 'LEFT_SIDEBAR'
	align left top
	ignoreEsc
	onOpen 
	"
		if(sidebarVisible.LEFT == 1) then
			Infinity_PushMenu('LEFT_SIDEBAR_BOTTOM')
		else
			Infinity_PopMenu('LEFT_SIDEBAR')
			Infinity_PushMenu('LEFT_SIDEBAR_HIDDEN')
		end
		if(showJournal == 1) then
			Infinity_PushMenu('JOURNAL')
		end
		sidebarForceTooltips = 0
		sidebarHidingIconOpacity = 0
	"
	onClose 
	"
		Infinity_PopMenu('LEFT_SIDEBAR_BOTTOM')
		Infinity_PopMenu('JOURNAL')
	"
	label
	{
		name 'leftSidebarBackground'
		area 0 0 80 1536
		mosaic GUIWLSP
	}
	label
	{

		area 0 1536 80 1536
		mosaic GUIWLSP
	}
	button
	{
		area 5 14 70 62
		bam GUILS10
		frame lua "highlightSidebarButton(worldScreen) and showJournal ~= 1 and 2 or 0"
		sequence 0
		ScaleToClip
		tooltip lua "getTooltipWithHotkey(2,24364)"
		tooltip force lua "sidebarForceTooltips == 1"
		tooltip force top
--		glow lua "highlightSidebarButton(worldScreen)"
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			e:GetActiveEngine():OnLeftPanelButtonClick(0)
		"
	}
	button
	{
		area 5 76 70 62
		bam GUILS10
		frame lua "highlightSidebarButton(mapScreen) and showJournal ~= 1 and 2 or 0"
		sequence 1
		ScaleToClip
		tooltip lua "getTooltipWithHotkey(4,14648)"
		tooltip force lua "sidebarForceTooltips == 1"
		tooltip force top
		--glow lua "highlightSidebarButton(mapScreen)"
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			e:GetActiveEngine():OnLeftPanelButtonClick(1)
		"
	}
	button
	{
		area 5 138 70 62
		bam GUILS10
		frame lua "showJournal == 1 and 2 or 0"
		sequence 2
		ScaleToClip
		tooltip lua "getTooltipWithHotkey(3,24359)"
		tooltip force lua "sidebarForceTooltips == 1"
		tooltip force top
		--glow lua "showJournal == 1"
		clickable lua "sidebarsGreyed ~= 1 and game:GetJournalOpenable()"
		action
		"
			e:GetActiveEngine():OnLeftPanelButtonClick(2)
		"
	}
	button
	{
		area 5 200 70 62
		bam GUILS10
		frame lua "highlightSidebarButton(inventoryScreen) and 2 or 0"
		sequence 3
		ScaleToClip
		tooltip lua "getTooltipWithHotkey(0,24358)"
		tooltip force lua "sidebarForceTooltips == 1"
		tooltip force top
		--glow lua "highlightSidebarButton(inventoryScreen)"
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			e:GetActiveEngine():OnLeftPanelButtonClick(3)
		"
	}
	button
	{
		area 5 262 70 62
		bam GUILS10
		sequence 4
		ScaleToClip
		frame lua "(highlightSidebarButton(characterScreen) or portraitTable ~= nil) and 2 or 0"
		tooltip lua "getTooltipWithHotkey(1,24356)"
		tooltip force lua "sidebarForceTooltips == 1"
		tooltip force top
		--glow lua "highlightSidebarButton(characterScreen)"
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			e:GetActiveEngine():OnLeftPanelButtonClick(4)
		"
	}
	button
	{
		area 5 324 70 62
		bam GUILS10
		frame lua "highlightSidebarButton(mageScreen) and 2 or 0"
		sequence 5
		ScaleToClip
		tooltip lua "getTooltipWithHotkey(5,24360)"
		tooltip force lua "sidebarForceTooltips == 1"
		tooltip force top
		--glow lua "highlightSidebarButton(mageScreen)"
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			e:GetActiveEngine():OnLeftPanelButtonClick(5)
		"
	}
	button
	{
		area 5 386 70 62
		bam GUILS10
		frame lua "highlightSidebarButton(priestScreen) and 2 or 0"
		sequence 6
		ScaleToClip
		tooltip lua "getTooltipWithHotkey(6,24357)"
		tooltip force lua "sidebarForceTooltips == 1"
		tooltip force top
		--glow lua "highlightSidebarButton(priestScreen)"
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			e:GetActiveEngine():OnLeftPanelButtonClick(6)
		"
	}
	button
	{
		area 5 448 70 62
		bam GUILS10
		frame lua "highlightSidebarButton(optionsScreen) and 2 or 0"
		sequence 7
		ScaleToClip
		tooltip lua "getTooltipWithHotkey(7,24362)"
		tooltip force lua "sidebarForceTooltips == 1"
		tooltip force top
		--glow lua "highlightSidebarButton(optionsScreen)"
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			e:GetActiveEngine():OnLeftPanelButtonClick(7)
		"
	}
	button
	{
		area 5 510 70 62
		enabled "e:IsMultiplayer()"
		bam GUILS10
		frame lua "highlightSidebarButton(multiplayerScreen) and 2 or 0"
		sequence 8
		ScaleToClip
		tooltip lua "getTooltipWithHotkey(8,24363)"
		tooltip force lua "sidebarForceTooltips == 1"
		tooltip force top
		--glow lua "highlightSidebarButton(multiplayerScreen)"
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			e:GetActiveEngine():OnLeftPanelButtonClick(8)
		"
	}
	button
	{
		area 6 0 67 11
		bam GUIPNL10
		sequence 2
		ScaleToClip
		opacity lua "sidebarHidingIconOpacity"
		action
		"
			toggleSidebar('LEFT')
		"
		actionEnter "sidebarHidingIconOpacity = 255"
		actionExit "sidebarHidingIconOpacity=0"
	}
}
menu
{
	name 'LEFT_SIDEBAR_BOTTOM'
	align left bottom
	--combined height of these buttons makes a menu with height = 231, menu is placed into lower left. y pos is offset from top of this menu.
	onOpen "clockFrame = 0"
	ignoreEsc
	button
	{
		area 5 2 70 47
		enabled "0" -- no space for help
		--enabled "worldScreen == e:GetActiveEngine()"
		bam GUILS10
		sequence 16
		ScaleToClip
		tooltip lua "Infinity_FetchString(31827)"  --"getTooltipWithHotkey(16,31827)"
		tooltip force lua "sidebarForceTooltips == 1"
		tooltip force top
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			Infinity_PushMenu('HELP')
		"
	}
	button
	{
		area 5 70 70 50
		enabled "worldScreen == e:GetActiveEngine()"
		bam GUILS10
		sequence 15
		ScaleToClip
		tooltip lua "getTooltipWithHotkey(28,31813)"
		tooltip force lua "sidebarForceTooltips == 1"
		tooltip force top
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			worldScreen:OnQuickSaveButtonClick(false)
		"
		actionAlt
		"
			worldScreen:OnQuickSaveButtonClick(true)
		"
	}
	button
	{
		area 5 120 70 47
		bam GUILS10
		sequence 9
		ScaleToClip
		tooltip lua "getTooltipWithHotkey(31,11942)"
		tooltip force lua "sidebarForceTooltips == 1"
		tooltip force top
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			e:GetActiveEngine():OnRestButtonClick()
		"
	}
	
	
	--begin clock
	button
	{
		enabled "worldScreen == e:GetActiveEngine()"
		area -6 173 87 95
		bam "CPEN"
		ScaleToClip
		--frame lua "timer:GetCurrentTime() % 24"
		--frame lua "worldScreen:CheckIfPaused()"
		frame lua "getMovingFrame('clock')"
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			worldScreen:TogglePauseGame(true)
		"
	}
	label
	{
		enabled "worldScreen == e:GetActiveEngine() and getMovingFrame('clock')==0"
		area -1 187 78 78
		bam "CGEAR"
		ScaleToClip
		frame lua "timer:GetCurrentTime() % 24"
		useOverlayTint "worldScreen:CheckIfPaused()"
		overlayTint 150 150 150
	}
	
	label
	{
		enabled "worldScreen == e:GetActiveEngine() and getMovingFrame('clock')==1"
		area 2 190 78 78
		bam "CGEAR"
		ScaleToClip
		frame lua "timer:GetCurrentTime() % 24"
		useOverlayTint "worldScreen:CheckIfPaused()"
		overlayTint 150 150 150
	}
	label
	{
		enabled "worldScreen == e:GetActiveEngine() and getMovingFrame('clock')==0"
		area -1 187 78 78
		bam "CDIAL"
		ScaleToClip
		frame lua "timer:GetCurrentHour() % timer.TIMESCALE_HOUR_PER_DAY"
		useOverlayTint "worldScreen:CheckIfPaused()"
		overlayTint 150 150 150
	}
	label
	{
		enabled "worldScreen == e:GetActiveEngine() and getMovingFrame('clock')==1"
		area 2 190 78 78
		bam "CDIAL"
		ScaleToClip
		frame lua "timer:GetCurrentHour() % timer.TIMESCALE_HOUR_PER_DAY"
		useOverlayTint "worldScreen:CheckIfPaused()"
		overlayTint 150 150 150
	}
	button
	{
		enabled "worldScreen == e:GetActiveEngine()"
		area -6 173 87 95
		tooltip lua "worldScreen:GetCurrentTimeString()"
		tooltip force lua "sidebarForceTooltips == 1"
		tooltip force top
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			worldScreen:TogglePauseGame(true)
			getClick(Infinity_GetFrameCounter(), 'clock')
		"
		actionHold "getClick(Infinity_GetFrameCounter(), 'clock')"
	}
	--end clock
	label
	{
		--area is preset
		enabled "gameOptions.m_bRenderFrameTimes"
		frameTimes
	}
}
menu
{
	name 'LEFT_SIDEBAR_HIDDEN'
	align left top
	ignoreEsc
	button
	{
		area 6 0 67 11
		bam GUIPNL10
		sequence 2
		ScaleToClip
		action
		"
			toggleSidebar('LEFT')
		"
	}
}
`
	mouseOverPortrait = -1
	draggedPortrait = nil
	clickedFrame = 0
	clickedObject = nil
	function swapPortraits(dest)
		worldScreen:SwapPortraits(dest,draggedPortrait)
		draggedPortrait = nil
	end
	
	function getPartyAITooltip()
		if aiButtonToggle == 1 then
			return Infinity_FetchString(15918)
		else
			return Infinity_FetchString(15917)
		end
	end

	function getMovingFrame(object)
		if clickedObject ~= object then return 0 end --default if not clicked
		local val = Infinity_GetINIValue('Program Options','Maximum Frame Rate','30')/60
		if clickedFrame +10*val > Infinity_GetFrameCounter() then --(5-10 range)
			return 1
		else
			clickedObject = nil --click done, reset
			return 0 --5-10 frames have passed, go back to normal
		end
	end
	function getClick(num, object) --passing at what frame click happened and on what button, assigning to globals
			clickedFrame = num
			clickedObject = object
	end
	sidebarHidingIconOpacity = 0
`
menu
{
	name 'RIGHT_SIDEBAR'
	align right top
	ignoreEsc
	onOpen 
	"
		if(sidebarVisible.RIGHT == 1) then
			Infinity_PushMenu('RIGHT_SIDEBAR_BOTTOM')
		else
			Infinity_PopMenu('RIGHT_SIDEBAR')
			Infinity_PushMenu('RIGHT_SIDEBAR_HIDDEN')
		end
		if(worldScreen == e:GetActiveEngine() and game:GetPartyAI()) then aiButtonToggle = 1 end
		if(worldScreen == e:GetActiveEngine()) then Infinity_PushMenu('WORLD_LEVEL_UP_BUTTONS') end
		sidebarHidingIconOpacity = 0
	"
	onClose
	"
		Infinity_PopMenu('RIGHT_SIDEBAR_BOTTOM')
		Infinity_PopMenu('WORLD_LEVEL_UP_BUTTONS')
	"
	label
	{
		name 'rightSidebarBackground'
		area 0 0 83 1536
		mosaic GUIWRSP
	}
	label
	{
		area 0 1536 80 1536
		mosaic GUIWRSP
	}
	label
	{
		area 6 12 73 101
		bam GUIRSP10
		ScaleToClip
		enabled "Infinity_GetNumCharacters() > 0"
		frame lua "Infinity_GetNumCharacters() > 0 and getMovingFrame('portrait0')"
		glow lua "draggedPortrait and draggedPortrait ~= 0"
	}
	button
	{
		area 12 18 64 89
		portrait 0
		enabled "Infinity_GetNumCharacters() > 0 and getMovingFrame('portrait0')==0"
		glow lua "draggedPortrait and draggedPortrait ~= 0"
		action "Infinity_OnPortraitLClick(0); getClick(Infinity_GetFrameCounter(), 'portrait0')"
		actionHold "getClick(Infinity_GetFrameCounter(), 'portrait0')"
		actionAlt "Infinity_OnPortraitRClick(0); getClick(Infinity_GetFrameCounter(), 'portrait0')"
		actionDbl "Infinity_OnPortraitDblClick(0); getClick(Infinity_GetFrameCounter(), 'portrait0')"
		actiondrag "Infinity_SwapWithPortrait(0)"
		actionEnter "mouseOverPortrait = 0"
		actionExit "mouseOverPortrait = -1"
		actionSimpleDrag "draggedPortrait = 0"
		actionSimpleDrop "swapPortraits(0)"
		tooltip lua "Infinity_GetPortraitTooltip(0)"
		clickable lua "sidebarsGreyed ~= 1"
	}
	button
	{
		area 14 20 64 89
		portrait 0
		enabled "Infinity_GetNumCharacters() > 0 and getMovingFrame('portrait0')==1"
		glow lua "draggedPortrait and draggedPortrait ~= 0"
		action "Infinity_OnPortraitLClick(0); getClick(Infinity_GetFrameCounter(), 'portrait0')"
		actionAlt "Infinity_OnPortraitRClick(0); getClick(Infinity_GetFrameCounter(), 'portrait0')"
		actionDbl "Infinity_OnPortraitDblClick(0); getClick(Infinity_GetFrameCounter(), 'portrait0')"
		actiondrag "Infinity_SwapWithPortrait(0)"
		actionEnter "mouseOverPortrait = 0"
		actionExit "mouseOverPortrait = -1"
		actionSimpleDrag "draggedPortrait = 0"
		actionSimpleDrop "swapPortraits(0)"
		tooltip lua "Infinity_GetPortraitTooltip(0)"
		clickable lua "sidebarsGreyed ~= 1"
	}
	label
	{
		area 6 113 73 101
		bam GUIRSP10
		ScaleToClip
		enabled "Infinity_GetNumCharacters() > 1"
		frame lua "Infinity_GetNumCharacters() > 1 and getMovingFrame('portrait1')"
		glow lua "draggedPortrait and draggedPortrait ~= 1"
	}
	button
	{
		area 12 119 64 89
		portrait 1
		enabled "Infinity_GetNumCharacters() > 1 and getMovingFrame('portrait1')==0"
		glow lua "draggedPortrait and draggedPortrait ~= 1"
		action "Infinity_OnPortraitLClick(1); getClick(Infinity_GetFrameCounter(), 'portrait1')"
		actionHold "getClick(Infinity_GetFrameCounter(), 'portrait1')"
		actionAlt "Infinity_OnPortraitRClick(1); getClick(Infinity_GetFrameCounter(), 'portrait1')"
		actionDbl "Infinity_OnPortraitDblClick(1); getClick(Infinity_GetFrameCounter(), 'portrait1')"
		actiondrag "Infinity_SwapWithPortrait(1)"
		actionEnter "mouseOverPortrait = 1"
		actionExit "mouseOverPortrait = -1"
		actionSimpleDrag "draggedPortrait = 1"
		actionSimpleDrop "swapPortraits(1)"
		tooltip lua "Infinity_GetPortraitTooltip(1)"
		clickable lua "sidebarsGreyed ~= 1"
	}
	button
	{
		area 14 121 64 89
		portrait 1
		enabled "Infinity_GetNumCharacters() > 1 and getMovingFrame('portrait1')==1"
		glow lua "draggedPortrait and draggedPortrait ~= 1"
		action "Infinity_OnPortraitLClick(1); getClick(Infinity_GetFrameCounter(), 'portrait1')"
		actionAlt "Infinity_OnPortraitRClick(1); getClick(Infinity_GetFrameCounter(), 'portrait1')"
		actionDbl "Infinity_OnPortraitDblClick(1); getClick(Infinity_GetFrameCounter(), 'portrait1')"
		actiondrag "Infinity_SwapWithPortrait(1)"
		actionEnter "mouseOverPortrait = 1"
		actionExit "mouseOverPortrait = -1"
		actionSimpleDrag "draggedPortrait = 1"
		actionSimpleDrop "swapPortraits(1)"
		tooltip lua "Infinity_GetPortraitTooltip(1)"
		clickable lua "sidebarsGreyed ~= 1"
	}
	label
	{
		area 6 214 73 101
		bam GUIRSP10
		ScaleToClip
		enabled "Infinity_GetNumCharacters() > 2"
		frame lua "Infinity_GetNumCharacters() > 2 and getMovingFrame('portrait2')"
		glow lua "draggedPortrait and draggedPortrait ~= 2"
	}
	button
	{
		area 12 220 64 89
		portrait 2
		enabled "Infinity_GetNumCharacters() > 2 and getMovingFrame('portrait2')==0"
		glow lua "draggedPortrait and draggedPortrait ~= 2"
		action "Infinity_OnPortraitLClick(2); getClick(Infinity_GetFrameCounter(), 'portrait2')"
		actionHold "getClick(Infinity_GetFrameCounter(), 'portrait2')"
		actionAlt "Infinity_OnPortraitRClick(2); getClick(Infinity_GetFrameCounter(), 'portrait2')"
		actionDbl "Infinity_OnPortraitDblClick(2); getClick(Infinity_GetFrameCounter(), 'portrait2')"
		actiondrag "Infinity_SwapWithPortrait(2)"
		actionEnter "mouseOverPortrait = 2"
		actionExit "mouseOverPortrait = -1"
		actionSimpleDrag "draggedPortrait = 2"
		actionSimpleDrop "swapPortraits(2)"
		tooltip lua "Infinity_GetPortraitTooltip(2)"
		clickable lua "sidebarsGreyed ~= 1"
	}
	button
	{
		area 14 222 64 89
		portrait 2
		enabled "Infinity_GetNumCharacters() > 2 and getMovingFrame('portrait2')==1"
		glow lua "draggedPortrait and draggedPortrait ~= 2"
		action "Infinity_OnPortraitLClick(2); getClick(Infinity_GetFrameCounter(), 'portrait2')"
		actionAlt "Infinity_OnPortraitRClick(2); getClick(Infinity_GetFrameCounter(), 'portrait2')"
		actionDbl "Infinity_OnPortraitDblClick(2); getClick(Infinity_GetFrameCounter(), 'portrait2')"
		actiondrag "Infinity_SwapWithPortrait(2)"
		actionEnter "mouseOverPortrait = 2"
		actionExit "mouseOverPortrait = -1"
		actionSimpleDrag "draggedPortrait = 2"
		actionSimpleDrop "swapPortraits(2)"
		tooltip lua "Infinity_GetPortraitTooltip(2)"
		clickable lua "sidebarsGreyed ~= 1"
	}
	label
	{
		area 6 315 73 101
		bam GUIRSP10
		ScaleToClip
		enabled "Infinity_GetNumCharacters() > 3"
		frame lua "Infinity_GetNumCharacters() > 3 and getMovingFrame('portrait3')"
		glow lua "draggedPortrait and draggedPortrait ~= 3"
	}
	button
	{
		area 12 321 64 89
		portrait 3
		enabled "Infinity_GetNumCharacters() > 3 and getMovingFrame('portrait3')==0"
		glow lua "draggedPortrait and draggedPortrait ~= 3"
		action "Infinity_OnPortraitLClick(3); getClick(Infinity_GetFrameCounter(), 'portrait3')"
		actionHold "getClick(Infinity_GetFrameCounter(), 'portrait3')"
		actionAlt "Infinity_OnPortraitRClick(3); getClick(Infinity_GetFrameCounter(), 'portrait3')"
		actionDbl "Infinity_OnPortraitDblClick(3); getClick(Infinity_GetFrameCounter(), 'portrait3')"
		actiondrag "Infinity_SwapWithPortrait(3)"
		actionEnter "mouseOverPortrait = 3"
		actionExit "mouseOverPortrait = -1"
		actionSimpleDrag "draggedPortrait = 3"
		actionSimpleDrop "swapPortraits(3)"
		tooltip lua "Infinity_GetPortraitTooltip(3)"
		clickable lua "sidebarsGreyed ~= 1"
	}
	button
	{
		area 14 323 64 89
		portrait 3
		enabled "Infinity_GetNumCharacters() > 3 and getMovingFrame('portrait3')==1"
		glow lua "draggedPortrait and draggedPortrait ~= 3"
		action "Infinity_OnPortraitLClick(3); getClick(Infinity_GetFrameCounter(), 'portrait3')"
		actionAlt "Infinity_OnPortraitRClick(3); getClick(Infinity_GetFrameCounter(), 'portrait3')"
		actionDbl "Infinity_OnPortraitDblClick(3); getClick(Infinity_GetFrameCounter(), 'portrait3')"
		actiondrag "Infinity_SwapWithPortrait(3)"
		actionEnter "mouseOverPortrait = 3"
		actionExit "mouseOverPortrait = -1"
		actionSimpleDrag "draggedPortrait = 3"
		actionSimpleDrop "swapPortraits(3)"
		tooltip lua "Infinity_GetPortraitTooltip(3)"
		clickable lua "sidebarsGreyed ~= 1"
	}
	label
	{
		area 6 416 73 101
		bam GUIRSP10
		ScaleToClip
		enabled "Infinity_GetNumCharacters() > 4"
		frame lua "Infinity_GetNumCharacters() > 4 and getMovingFrame('portrait4')"
		glow lua "draggedPortrait and draggedPortrait ~= 4"
	}
	button
	{
		area 12 422 64 89
		portrait 4
		enabled "Infinity_GetNumCharacters() > 4 and getMovingFrame('portrait4')==0"
		glow lua "draggedPortrait and draggedPortrait ~= 4"
		action "Infinity_OnPortraitLClick(4); getClick(Infinity_GetFrameCounter(), 'portrait4')"
		actionHold "getClick(Infinity_GetFrameCounter(), 'portrait4')"
		actionAlt "Infinity_OnPortraitRClick(4); getClick(Infinity_GetFrameCounter(), 'portrait4')"
		actionDbl "Infinity_OnPortraitDblClick(4); getClick(Infinity_GetFrameCounter(), 'portrait4')"
		actiondrag "Infinity_SwapWithPortrait(4)"
		actionEnter "mouseOverPortrait = 4"
		actionExit "mouseOverPortrait = -1"
		actionSimpleDrag "draggedPortrait = 4"
		actionSimpleDrop "swapPortraits(4)"
		tooltip lua "Infinity_GetPortraitTooltip(4)"
		clickable lua "sidebarsGreyed ~= 1"
	}
	button
	{
		area 14 424 64 89
		portrait 4
		enabled "Infinity_GetNumCharacters() > 4 and getMovingFrame('portrait4')==1"
		glow lua "draggedPortrait and draggedPortrait ~= 4"
		action "Infinity_OnPortraitLClick(4); getClick(Infinity_GetFrameCounter(), 'portrait4')"
		actionAlt "Infinity_OnPortraitRClick(4); getClick(Infinity_GetFrameCounter(), 'portrait4')"
		actionDbl "Infinity_OnPortraitDblClick(4); getClick(Infinity_GetFrameCounter(), 'portrait4')"
		actiondrag "Infinity_SwapWithPortrait(4)"
		actionEnter "mouseOverPortrait = 4"
		actionExit "mouseOverPortrait = -1"
		actionSimpleDrag "draggedPortrait = 4"
		actionSimpleDrop "swapPortraits(4)"
		tooltip lua "Infinity_GetPortraitTooltip(4)"
		clickable lua "sidebarsGreyed ~= 1"
	}
	label
	{
		area 6 517 73 101
		bam GUIRSP10
		ScaleToClip
		enabled "Infinity_GetNumCharacters() > 5"
		frame lua "Infinity_GetNumCharacters() > 5 and getMovingFrame('portrait5')"
		glow lua "draggedPortrait and draggedPortrait ~= 5"
	}
	button
	{
		area 12 523 64 89
		portrait 5
		enabled "Infinity_GetNumCharacters() > 5 and getMovingFrame('portrait5')==0"
		glow lua "draggedPortrait and draggedPortrait ~= 5"
		action "Infinity_OnPortraitLClick(5); getClick(Infinity_GetFrameCounter(), 'portrait5')"
		actionHold "getClick(Infinity_GetFrameCounter(), 'portrait5')"
		actionAlt "Infinity_OnPortraitRClick(5); getClick(Infinity_GetFrameCounter(), 'portrait5')"
		actionDbl "Infinity_OnPortraitDblClick(5); getClick(Infinity_GetFrameCounter(), 'portrait5')"
		actiondrag "Infinity_SwapWithPortrait(5)"
		actionEnter "mouseOverPortrait = 5"
		actionExit "mouseOverPortrait = -1"
		actionSimpleDrag "draggedPortrait = 5"
		actionSimpleDrop "swapPortraits(5)"
		tooltip lua "Infinity_GetPortraitTooltip(5)"
		clickable lua "sidebarsGreyed ~= 1"
	}
	button
	{
		area 14 525 64 89
		portrait 5
		enabled "Infinity_GetNumCharacters() > 5 and getMovingFrame('portrait5')==1"
		glow lua "draggedPortrait and draggedPortrait ~= 5"
		action "Infinity_OnPortraitLClick(5); getClick(Infinity_GetFrameCounter(), 'portrait5')"
		actionAlt "Infinity_OnPortraitRClick(5); getClick(Infinity_GetFrameCounter(), 'portrait5')"
		actionDbl "Infinity_OnPortraitDblClick(5); getClick(Infinity_GetFrameCounter(), 'portrait5')"
		actiondrag "Infinity_SwapWithPortrait(5)"
		actionEnter "mouseOverPortrait = 5"
		actionExit "mouseOverPortrait = -1"
		actionSimpleDrag "draggedPortrait = 5"
		actionSimpleDrop "swapPortraits(5)"
		tooltip lua "Infinity_GetPortraitTooltip(5)"
		clickable lua "sidebarsGreyed ~= 1"
	}
	button
	{
		area 8 0 67 11
		bam GUIPNL10
		sequence 2
		ScaleToClip
		opacity lua "sidebarHidingIconOpacity"
		action
		"
			toggleSidebar('RIGHT')
		"
		actionEnter "sidebarHidingIconOpacity = 255"
		actionExit "sidebarHidingIconOpacity=0"
	}
}
menu
{
	name 'RIGHT_SIDEBAR_BOTTOM'
	align right bottom
	offset -3 0
	ignoreEsc
	--Buttons form a menu aligned bottom right, with height = 197, y is offset from top of that menu.
	button
	{
		area 0 50 70 51
		enabled "not e:IsTouchUI() and worldScreen == e:GetActiveEngine()"
		toggle highlightButtonToggle
		tooltip lua "Infinity_FetchString(32729)"
		bam GUILS10
		sequence 11
		ScaleToClip
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			worldScreen:SetHighlightEnabled(highlightButtonToggle == 1)
		"
	}
	button
	{
		area 0 100 70 51
		enabled "not e:IsTouchUI() and worldScreen == e:GetActiveEngine()"
		tooltip lua "getPartyAITooltip()"
		toggle aiButtonToggle
		bam GUILS10
		sequence 10
		ScaleToClip
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			game:ToggleAI()
		"
	}
	button
	{
		area 0 151 70 51
		enabled "not e:IsTouchUI() and worldScreen == e:GetActiveEngine()"
		tooltip lua "Infinity_FetchString(10485)"
		bam GUILS10
		sequence 13
		ScaleToClip
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			game:SelectAll()
		"
		actionDbl
		"
			game:CenterOnGroupLeader()
		"
	}
	--IsTouchUI() section
	button
	{
		area 0 -5 70 51
		enabled "e:IsTouchUI() and worldScreen == e:GetActiveEngine()"
		toggle selectionButtonToggle
		bam GUILS10
		sequence 14
		ScaleToClip
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			worldScreen:OnSelectionButtonClick()
		"
	}
	button
	{
		area 0 48 70 51
		enabled "e:IsTouchUI() and worldScreen == e:GetActiveEngine()"
		toggle highlightButtonToggle
		tooltip lua "Infinity_FetchString(32729)"
		bam GUILS10
		sequence 11
		ScaleToClip
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			worldScreen:SetHighlightEnabled(highlightButtonToggle == 1)
		"
	}
	button
	{
		area 0 101 35 52
		enabled "e:IsTouchUI() and worldScreen == e:GetActiveEngine()"
		tooltip lua "getPartyAITooltip()"
		toggle aiButtonToggle
		bam GUILS10
		sequence 12
		ScaleToClip
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			game:ToggleAI()
		"
	}
	button
	{
		area 36 101 35 52
		enabled "e:IsTouchUI() and worldScreen == e:GetActiveEngine()"
		tooltip lua "Infinity_FetchString(10485)"
		bam GUILS10
		sequence 17
		ScaleToClip
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			game:SelectAll()
		"
		actionDbl
		"
			game:CenterOnGroupLeader()
		"
	}
}
menu
{
	name 'RIGHT_SIDEBAR_HIDDEN'
	align right top
	ignoreEsc
	button
	{
		area 8 0 67 11
		bam GUIPNL10
		sequence 2
		scaleToClip
		action
		"
			toggleSidebar('RIGHT')
		"
		
	}
}
`
TEXT_inventoryError = ""
inventoryStats = {}
inventoryShow = {1,1,1,1,1,1}
savedID = 0
savedHeight = 0
forceGroundScroll = false

function resetStatsDisplay()
	tempStats = {}
end
function slotDoubleClick(slotName, force)
	local slot = characters[id].equipment[slotName]

	if(string.sub(slotName,1,6) == "ground" and force == nil) then
		--this hack is needed because unlike other slots, ground item add/remove is a message (doesnt get executed immediately)
		--since the double click removes the item before re-adding it, we need to wait for that re-add to complete before continuing.
		doubleClickEventScheduled = slotName
		return
	end

	if(slot ~= nil) then
		if(slot.item.isBag ~= 0) then
			Infinity_OpenInventoryContainer(slot.item.res)
		else
			showItemAmountRequester(slotName)
		end
	end
end
function checkDoubleClickScheduled(slotName)
	if(doubleClickEventScheduled == slotName) then
		slotDoubleClick(doubleClickEventScheduled, true)
		doubleClickEventScheduled = nil
	end
end
function shouldGreyOutInventory()
	return characters[id].HP.current <= 0 or inventoryScreen:IsSpriteOrderable() == false
end
function getInventoryTHAC0()
	local str = characters[id].THAC0.current
	if(characters[id].THAC0.offhand) then
		str = str .. "\n" .. characters[id].THAC0.offhand
	end
	return str
end
function getInventoryDamage()
	local str = characters[id].damage.min .. ' - ' .. characters[id].damage.max
	if(characters[id].damage.minOffhand and characters[id].damage.maxOffhand) then
		str = str .. "\n" .. characters[id].damage.minOffhand .. ' - ' .. characters[id].damage.maxOffhand
	end
	return str
end
function scrollGroundItems()
	if scrollDirection > 0 then
		Infinity_OnGroundPage(-1)
	elseif scrollDirection < 0 then
		Infinity_OnGroundPage(1)
	end
end
function formatString(value, score, coeff)
	local str = value .. " (-)"
	if score < 0 then
		str = value .. " (" .. score .. ")"
	elseif score > 0 then
		str = value .. " (+" .. score .. ")"
	end
	if coeff * score < 0 then return "^0xFF000090" .. str .. "^-" end --red
	if coeff * score > 0 then return"^0xFF2CEE60" .. str .. "^-" end --green
	return str
end
function getTempStat(old, newName, name, coeff)
	local new = tempStats[id][newName]
	local score = (new - old)
	if score ~= 0 then
		local str = formatString(new, score, coeff)
		table.insert(inventoryStats, {3,name,str})
	end
end
function getTempDamage()
	local dmgMinTemp = tempStats[id]['dmgMin']
	local dmgMaxTemp = tempStats[id]['dmgMax']
	if characters[id].damage.min ~= dmgMinTemp or characters[id].damage.max ~= dmgMaxTemp then
		local old = (characters[id].damage.min + characters[id].damage.max) / 2
		local new = (dmgMinTemp + dmgMaxTemp) / 2
		local score = (new - old)
		local str = formatString(dmgMinTemp .. '-' .. dmgMaxTemp, score, 1)
		table.insert(inventoryStats, {3,t("DAMAGE_LABEL"),str})
	end
end
function buildInventoryStats()
	inventoryStats = {}

	if(tempStats[id] ~= nil) then
		getTempStat(characters[id].AC.current,'AC',t("ARMOR_CLASS_LABEL"),-1)
		getTempStat(characters[id].HP.max,'maxHP',t("HIT_POINTS_LABEL"),1)
		getTempStat(characters[id].THAC0.current,'THAC0',t("THAC0_LABEL"),-1)
		getTempDamage()
		if length(inventoryStats) ~= 0 then
			table.insert(inventoryStats, 1, {1,tempStats[id].tempItem})
			return inventoryStats
		end
	end

	table.insert(inventoryStats, {1,t("ARMOR_CLASS_LABEL"),1})
	if inventoryShow[1] == 1 then
		table.insert(inventoryStats, {2,characters[id].AC.details})
	end

	table.insert(inventoryStats, {1,t("HIT_POINTS_LABEL"),2})
	if inventoryShow[2] == 1 then
		table.insert(inventoryStats, {2,characters[id].HP.details})
	end

	if (characters[id].THAC0.detailsOffhand ~= nil and characters[id].THAC0.detailsOffhand ~= "") then
		table.insert(inventoryStats, {1,t("MAIN_HAND_THAC0"),3})
		if inventoryShow[3] == 1 then
			table.insert(inventoryStats, {2,characters[id].THAC0.details})
		end
		table.insert(inventoryStats, {1,t("OFF_HAND_THAC0"),4})
		if inventoryShow[4] == 1 then
			table.insert(inventoryStats, {2,characters[id].THAC0.detailsOffhand})
		end
	else
		table.insert(inventoryStats, {1,t("THAC0_LABEL"),3})
		if inventoryShow[3] == 1 then
			table.insert(inventoryStats, {2,characters[id].THAC0.details})
		end
	end

	if (characters[id].damage.maxOffhand) then
		table.insert(inventoryStats, {1,t("MAIN_HAND_DAMAGE"),5})
		if inventoryShow[5] == 1 then
			table.insert(inventoryStats, {2,characters[id].damage.details})
		end
		table.insert(inventoryStats, {1,t("OFF_HAND_DAMAGE"),6})
		if inventoryShow[6] == 1 then
			table.insert(inventoryStats, {2,characters[id].damage.detailsOffhand})
		end
	else
		table.insert(inventoryStats, {1,t("DAMAGE_LABEL"),5})
		if inventoryShow[5] == 1 then
			table.insert(inventoryStats, {2,characters[id].damage.details})
		end
	end
	return inventoryStats
end
function inventoryScroll(top, height, contentHeight)
	savedHeight = contentHeight
	if id ~= savedID then
		savedID = id
		return 0
	end
	return nil
end
function makeTable(length)
	local t = {}
	for i=1,length do
		table.insert(t, 1, '')
	end
	return t
end
function format_value(amount)
  local formatted = amount
  while true do  
    formatted, k = string.gsub(formatted, "^(-?%d+)(%d%d%d)", '%1 %2')
    if (k==0) then
      break
    end
  end
  return formatted
end
function colorPausedRed(str)
 local s = string.find (str, "PAUSED")
 if s == nil then return str
 else  return "^R" .. str .. "^-" end
end
`
menu
{
	name 'INVENTORY'
	align center center
	ignoreEsc
	greyscale lua "shouldGreyOutInventory()"
	onOpen
	"
		Infinity_ActivateInventory()
		pushSidebars()
		doubleClickEventScheduled = nil
		TT_BuildTitleData('INVENTORY_TITLE', 362, true)
        TT_CreateTitleChars('INVENTORY_TITLE', 'TT_INVENTORY', 40, 'TEMPLATE_titlechar_INVENTORY')
	"
	onClose
	"
		Infinity_PopMenu('CHARACTER_COLOR')
		Infinity_PopMenu('ITEM_DESCRIPTION')
		popSidebars()
		TT_DestroyTitleChars('INVENTORY_TITLE', 'TEMPLATE_titlechar_INVENTORY')
	"
	label
	{
		area 0 0 864 710
		mosaic INVENTOR
	}
	template
    {
        label
        {
            enabled "true"
            ignoreEvents
            area 0 0 -1 -1
            bam "TTREALMS"
            sequence lua "TT_TitleData['INVENTORY_TITLE'][instanceId].seq"
            align center center
        }
        name "TEMPLATE_titlechar_INVENTORY"
    }
	label
    {
        name "TT_INVENTORY"
        area 40 40 362 40
    }
	label --shadow
	{
		area 436 25 402 49
		text lua "characters[id].name"
		text style "label"
		text point 27
		text color 5
	}
	label
	{
		area 438 27 402 49
		text lua "characters[id].name"
		text style "label"
		text point 27
	}
	label --shadow
	{
		area 440 74 394 38
		text lua "characters[id].class"
		text style "label"
		text point 18
		text color 5
	}
	label
	{
		area 442 76 394 38
		text lua "characters[id].class"
		text style "label"
		text point 18
	}
	label
	{
		area 82 138 151 30
		text "QUIVER_LABEL"
		text style "label"
		text shadow  1
		align left center
	}
	label
	{
		area 36 258 202 32
		text "QUICK_WEAPONS_LABEL"
		text style "label"
		text shadow  1
		align left center
	}
	label
	{
		area 30 382 152 34
		text "QUICK_ITEMS_LABEL"
		text style "label"
		text shadow  1
		align left center
	}
	button
	{
		area 296 240 144 180
		paperdoll 1
		ScaleToClip
		actionDrag "Infinity_SwapWithAppearance()"
	}
	button
	{
		area 40 574 68 100
		encumbrance
	}
	label
	{
		area 393 522 116 26
		text lua "format_value(characters[id].gold)"
		text style "gold"
	}
	text
	{
		area 22 504 271 55
		text lua "colorPausedRed(TEXT_inventoryError)"
		text style 'normal'
		text align left center
	}
	label
	{
		area 608 544 210 29
		text "GROUND_LABEL"
		text style "label"
		text shadow  1
		align center center
	}
	label
	{
		enabled		"Infinity_GetMaxGroundPage() > 0"
		area 730 544 88 29
		text lua "Infinity_GetCurrentGroundPage()+1 .. '/' .. Infinity_GetMaxGroundPage()+1"
		text style "label"
		align right center
		text shadow 1
	}

	--stat details begin
	text
	{
		area		526 144 43 42
		text lua	"characters[id].AC.current"
		text style	"title"
		align center center
		tooltip lua "t('ARMOR_CLASS_LABEL')"
	}
	text
	{
		area		586 142 52 44
		text lua	"characters[id].HP.current .. '\n' .. characters[id].HP.max"
		text style	"title"
		tooltip lua "t('HIT_POINTS_LABEL')"
		align center center
	}
	text
	{
		area		659 146 42 42
		text lua	"getInventoryTHAC0()"
		text style	"title"
		tooltip lua "t('THAC0_LABEL')"
		align center center
	}
	text
	{
		area		729 142 39 44
		text lua	"getInventoryDamage()"
		text style	"title"
		align center center
		tooltip lua "t('DAMAGE_LABEL')"
	}
	text
	{
		area		794 146 42 42
		text lua	"characters[id].proficiencies.numAttacks.current"
		text style	"title"
		tooltip lua "t('NUM_ATTACKS_LABEL')"
		align center center
	}
	--stat details end

	list
	{
		column
		{
			width 100
			label
			{
				area		0 0 238 30
				--mosaic		INVSEP1
				enabled		"inventoryStats[rowNumber][1] == 1 and ticksStarting == 0 or inventoryStats[rowNumber][1] == 1 and rowSelected ~= rowNumber"
				text		lua "inventoryStats[rowNumber][2]"
				text style  'bold_parchment'
				text point 14
				text color 'L'
				text align	center center
				text useFontZoom 0
			}
			label
			{
				area		2 2 238 28
				--mosaic		INVSEP1
				enabled		"inventoryStats[rowNumber][1] == 1 and ticksStarting ~= 0 and rowSelected == rowNumber"
				text		lua "inventoryStats[rowNumber][2]"
				text style  'bold_parchment'
				text point 14
				text color 'L'
				text align	center center
				text useFontZoom 0
			}			
			label
			{
				area		0 22 214 8
				mosaic		INVSEP1
				enabled "inventoryStats[rowNumber][1] == 1 and inventoryShow[inventoryStats[rowNumber][3]] == 1"
				align center center
			}			
			label
			{
				area		16 22 198 13
				mosaic		INVSEP2
				enabled "inventoryStats[rowNumber][1] == 1 and inventoryShow[inventoryStats[rowNumber][3]] == 0"
				align center center
			}
			label
			{
				area		15 0 -1 -1
				enabled		"inventoryStats[rowNumber][1] == 2 or inventoryStats[rowNumber][1] == 3"
				text		lua "inventoryStats[rowNumber][2]"
				text style  'normal_parchment'
				text point 11
				text align	left center
			}
		}
		area 564 228 238 272
		enabled "savedHeight >=272"
		rowheight	dynamic
		hidehighlight
		table		"buildInventoryStats()"
		var			inventoryVar
		scrollbar	'GUIKNSBR'
		scrollbar func "inventoryScroll"
		action
		"
			if inventoryStats[inventoryVar] ~= nil and inventoryStats[inventoryVar][1] == 1 then
				local idx = inventoryStats[inventoryVar][3]
				if idx ~= nil then
					local value = 1
					if inventoryShow[idx] == 1 then value = 0 end
					inventoryShow[idx] = value
				end
			end
			cellNumber = nil
			rowNumber = nil
			ticksPassed = 0
			ticksStarting = 0
			"
		actionAlt
		"
			if inventoryStats[inventoryVar] ~= nil and inventoryStats[inventoryVar][1] == 1 then
				local idx = inventoryStats[inventoryVar][3]
				if idx ~= nil then
					local value = 1
					if inventoryShow[idx] == 1 then value = 0 end
					inventoryShow = {value,value,value,value,value,value}
				end
			end
			cellNumber = nil
			rowNumber = nil
			ticksPassed = 0
			ticksStarting = 0
			"
		actionUpdate 
		"	
			ticksStarting = ticksStarting + 1
			if ticksStarting > 10 then
				ticksPassed = ticksPassed + 1
				if ticksPassed > 3 then
					ticksPassed = 0
				end
			end
		"
	}
	list
	{
		column
		{
			width 100
			label
			{
				area		0 0 238 30
				--mosaic		INVSEP
				respectClipping
				enabled		"inventoryStats[rowNumber][1] == 1 and ticksStarting == 0 or inventoryStats[rowNumber][1] == 1 and rowSelected ~= rowNumber"
				text		lua "inventoryStats[rowNumber][2]"
				text style  'bold_parchment'
				text point 14
				text color 'L'
				text align	center center
				text useFontZoom 0
			}
			label
			{
				area		0 2 238 28
				--mosaic		INVSEP
				respectClipping
				enabled		"inventoryStats[rowNumber][1] == 1 and ticksStarting ~= 0 and rowSelected == rowNumber"
				text	lua "inventoryStats[rowNumber][2]"
				text style  'bold_parchment'
				text point 14
				text color 'L'
				text align	center center
				text useFontZoom 0
			}						
			label
			{
				area		0 22 214 8
				mosaic		INVSEP1
				enabled "inventoryStats[rowNumber][1] == 1 and inventoryShow[inventoryStats[rowNumber][3]] == 1"
				align center center
			}			
			label
			{
				area		16 22 198 13
				mosaic		INVSEP2
				enabled "inventoryStats[rowNumber][1] == 1 and inventoryShow[inventoryStats[rowNumber][3]] == 0"
				align center center
			}
			label
			{
				area		15 0 238 -1
				enabled		"inventoryStats[rowNumber][1] == 2 or inventoryStats[rowNumber][1] == 3"
				text		lua "inventoryStats[rowNumber][2]"
				text style  'normal_parchment'
				text point 11
				text align	left center
			}
			label
			{
				area		150 0 238 -1
				enabled		"inventoryStats[rowNumber][1] == 3"
				text		lua "inventoryStats[rowNumber][3]"
				text style  'normal_parchment'
				text point 11
				text align	left center
			}
		}
		area 564 228 238 272
		enabled "savedHeight < 272"
		rowheight	dynamic
		hidehighlight
		table		"buildInventoryStats()"
		var			inventoryVar
		scrollbar func "inventoryScroll"
		action
		"
			if inventoryStats[inventoryVar] ~= nil and inventoryStats[inventoryVar][1] == 1 then
				local idx = inventoryStats[inventoryVar][3]
				if idx ~= nil then
					local value = 1
					if inventoryShow[idx] == 1 then value = 0 end
					inventoryShow[idx] = value
				end
			end
			cellNumber = nil
			rowNumber = nil
			ticksPassed = 0
			ticksStarting = 0
		"
		actionAlt
		"
			if inventoryStats[inventoryVar] ~= nil and inventoryStats[inventoryVar][1] == 1 then
				local idx = inventoryStats[inventoryVar][3]
				if idx ~= nil then
					local value = 1
					if inventoryShow[idx] == 1 then value = 0 end
					inventoryShow = {value,value,value,value,value,value}
				end
			end
			cellNumber = nil
			rowNumber = nil
			ticksPassed = 0
			ticksStarting = 0
		"
		actionUpdate 
		"	
			ticksStarting = ticksStarting + 1
			if ticksStarting > 10 then
				ticksPassed = ticksPassed + 1
				if ticksPassed > 3 then
					ticksPassed = 0
				end
			end
		"
	}

	slot {name "slot_inv_1"		area 26 290 52 52	bam "STONSL10"	slotinfo "characters[id].equipment.weapon0"		}
	slot {name "slot_inv_2"		area 78 290 52 52	bam "STONSL10"	slotinfo "characters[id].equipment.weapon1"		}
	slot {name "slot_inv_3"		area 130 290 52 52	bam "STONSL10"	slotinfo "characters[id].equipment.weapon2"		}
	slot {name "slot_inv_4"		area 182 290 52 52	bam "STONSL10"	slotinfo "characters[id].equipment.weapon3"		}
	
	slot {name "slot_inv_5"		area 26 417 52 52	bam "STONSL10"	slotinfo "characters[id].equipment.personal0"	}
	slot {name "slot_inv_6"		area 78 417 52 52	bam "STONSL10"	slotinfo "characters[id].equipment.personal1"	}
	slot {name "slot_inv_7"		area 130 417 52 52	bam "STONSL10"	slotinfo "characters[id].equipment.personal2"	}
	
	slot {name "slot_inv_11"		area 264 180 52 52	bam "STONSL10"	slotinfo "characters[id].equipment.armor"		}
	slot {name "slot_inv_12"		area 326 180 52 52	bam "STONSL10"	slotinfo "characters[id].equipment.gauntlets"	}
	slot {name "slot_inv_13"		area 388 180 52 52	bam "STONSL10"	slotinfo "characters[id].equipment.helmet"		}
	slot {name "slot_inv_14"		area 450 180 52 52	bam "STONSL10"	slotinfo "characters[id].equipment.amulet"		}
	slot {name "slot_inv_15"		area 77 168 52 52	bam "STONSL10"	slotinfo "characters[id].equipment.quiver0"		}
	slot {name "slot_inv_16"		area 129 168 52 52	bam "STONSL10"	slotinfo "characters[id].equipment.quiver1"		}
	slot {name "slot_inv_17"		area 181 168 52 52	bam "STONSL10"	slotinfo "characters[id].equipment.quiver2"		}
	slot {name "slot_inv_21"		area 331 428 52 52	bam "STONSL10"	slotinfo "characters[id].equipment.belt"		}
	slot {name "slot_inv_22"		area 206 368 52 52	bam "STONSL10"	slotinfo "characters[id].equipment.ringleft"	}
	slot {name "slot_inv_23"		area 455 368 52 52	bam "STONSL10"	slotinfo "characters[id].equipment.ringright"	}
	slot {name "slot_inv_24"		area 206 428 52 52	bam "STONSL10"	slotinfo "characters[id].equipment.cloak"		}
	slot {name "slot_inv_25"		area 268 428 52 52	bam "STONSL10"	slotinfo "characters[id].equipment.boots"		}
	slot {name "slot_inv_26"		area 455 306 52 52	bam "STONSL10"	slotinfo "characters[id].equipment.shield"		}
	
	slot {name "slot_inv_30"		area 115 573 52 52	bam "STONSL10"	slotinfo "characters[id].equipment.group0"		}
	slot {name "slot_inv_31"		area 115 625 52 52	bam "STONSL10"	slotinfo "characters[id].equipment.group1"		}
	slot {name "slot_inv_32"		area 167 573 52 52	bam "STONSL10"	slotinfo "characters[id].equipment.group2"		}
	slot {name "slot_inv_33"		area 167 625 52 52	bam "STONSL10"	slotinfo "characters[id].equipment.group3"		}
	slot {name "slot_inv_34"		area 219 573 52 52	bam "STONSL10"	slotinfo "characters[id].equipment.group4"		}
	slot {name "slot_inv_35"		area 219 625 52 52	bam "STONSL10"	slotinfo "characters[id].equipment.group5"		}
	slot {name "slot_inv_36"		area 271 573 52 52	bam "STONSL10"	slotinfo "characters[id].equipment.group6"		}
	slot {name "slot_inv_37"		area 271 625 52 52	bam "STONSL10"	slotinfo "characters[id].equipment.group7"		}
	slot {name "slot_inv_38"		area 323 573 52 52	bam "STONSL10"	slotinfo "characters[id].equipment.group8"		}
	slot {name "slot_inv_39"		area 323 625 52 52	bam "STONSL10"	slotinfo "characters[id].equipment.group9"		}
	slot {name "slot_inv_40"		area 375 573 52 52	bam "STONSL10"	slotinfo "characters[id].equipment.group10"		}
	slot {name "slot_inv_41"		area 375 625 52 52	bam "STONSL10"	slotinfo "characters[id].equipment.group11"		}
	slot {name "slot_inv_42"		area 427 573 52 52	bam "STONSL10"	slotinfo "characters[id].equipment.group12"		}
	slot {name "slot_inv_43"		area 427 625 52 52	bam "STONSL10"	slotinfo "characters[id].equipment.group13"		}
	slot {name "slot_inv_44"		area 479 573 52 52	bam "STONSL10"	slotinfo "characters[id].equipment.group14"		}
	slot {name "slot_inv_45"		area 479 625 52 52	bam "STONSL10"	slotinfo "characters[id].equipment.group15"		}

	button
	{
		area 610 570 208 104
		actionScroll "scrollGroundItems()"
	}
	list
	{
		column
		{
			width 100
			label
			{
				area 0 0 212 106
			}
		}
		enabled "not shouldGreyOutInventory()"
		area 610 570 208 104
		hidehighlight
		rowheight	106
		table		"makeTable(Infinity_GetMaxGroundPage() + 1)"
		scrollbar 'GUISCRC'
		scrollbar func "groundScroll"
	}

	slot {name "slot_inv_68"		area 608 573 52 52	bam "STONSL10"	slotinfo "characters[id].equipment.ground0"	actionScroll "scrollGroundItems()"	}
	slot {name "slot_inv_69"		area 608 625 52 52	bam "STONSL10"	slotinfo "characters[id].equipment.ground1"	actionScroll "scrollGroundItems()"	}
	slot {name "slot_inv_70"		area 660 573 52 52	bam "STONSL10"	slotinfo "characters[id].equipment.ground2"	actionScroll "scrollGroundItems()"	}
	slot {name "slot_inv_71"		area 660 625 52 52	bam "STONSL10"	slotinfo "characters[id].equipment.ground3"	actionScroll "scrollGroundItems()"	}
	slot {name "slot_inv_72"		area 712 573 52 52	bam "STONSL10"	slotinfo "characters[id].equipment.ground4"	actionScroll "scrollGroundItems()"	}
	slot {name "slot_inv_73"		area 712 625 52 52	bam "STONSL10"	slotinfo "characters[id].equipment.ground5"	actionScroll "scrollGroundItems()"	}
	slot {name "slot_inv_74"		area 764 573 52 52	bam "STONSL10"	slotinfo "characters[id].equipment.ground6"	actionScroll "scrollGroundItems()"	}
	slot {name "slot_inv_75"		area 764 625 52 52	bam "STONSL10"	slotinfo "characters[id].equipment.ground7"	actionScroll "scrollGroundItems()"	}

	button
	{
		enabled		"Infinity_GetMaxGroundPage() > 0"
		area 818 599 26 52
		bam GUIBTACT
		frame 42
		on D
		action
		"
			Infinity_OnGroundPage(1)
		"
	}
	button
	{
		enabled		"Infinity_GetMaxGroundPage() > 0"
		area 580 599 26 52
		bam GUIBTACT
		frame 44
		on A
		action
		"
			Infinity_OnGroundPage(-1)
		"
	}
	button
	{
		area 394 428 52 52
		bam INVBUT
		colordisplay 2
		action
		"
			Infinity_PushMenu('CHARACTER_COLOR', 0, 0)
		"
	}
	button
	{
		area 457 428 52 52
		bam INVBUT
		colordisplay 1
		action
		"
			Infinity_PushMenu('CHARACTER_COLOR', 0, 0)
		"
	}
	label --this has to be last so it draws over top of everything.
	{
		area 0 0 864 710
		enabled "shouldGreyOutInventory()"
		fill 0 0 0 0
	}
}
`
SLIDER_color_hair_start = 1
SLIDER_color_skin_start = 1
SLIDER_color_major_start = 1
SLIDER_color_minor_start = 1

SLIDER_color_hair = 1
SLIDER_color_skin = 1
SLIDER_color_major = 1
SLIDER_color_minor = 1
`
menu
{
	name 'CHARACTER_COLOR'
	align center center
	ignoreesc
	modal
	
	onOpen
	"
		Infinity_UpdateLuaStats()
		
		SLIDER_color_hair = characters[id].colors.hair
		SLIDER_color_skin = characters[id].colors.skin
		SLIDER_color_major = characters[id].colors.major
		SLIDER_color_minor = characters[id].colors.minor
		
		SLIDER_color_hair_start = SLIDER_color_hair
		SLIDER_color_skin_start = SLIDER_color_skin
		SLIDER_color_major_start = SLIDER_color_major
		SLIDER_color_minor_start = SLIDER_color_minor
		TT_BuildTitleData('COLOR_CHOICES_TITLE', 294, true)
		TT_CreateTitleChars('COLOR_CHOICES_TITLE', 'TT_COLOR_CHOICES', 34, 'TEMPLATE_titlechar_COLOR_CHOICES')
	"
	onClose
	"
		if(SLIDER_color_hair_start ~= -1) then Infinity_SetHairColor(SLIDER_color_hair_start) end
		if(SLIDER_color_skin_start ~= -1) then Infinity_SetSkinColor(SLIDER_color_skin_start) end
		if(SLIDER_color_major_start ~= -1) then Infinity_SetMajorColor(SLIDER_color_major_start) end
		if(SLIDER_color_minor_start ~= -1) then Infinity_SetMinorColor(SLIDER_color_minor_start) end
		TT_DestroyTitleChars('COLOR_CHOICES_TITLE', 'TEMPLATE_titlechar_COLOR_CHOICES')
	"
	label
	{
		area 0 0 767 628
		mosaic GUIPOPF
	}
	template
    {
        label
        {
            enabled "true"
            ignoreEvents
            area 0 0 -1 -1
            bam "TTREALMS"
            sequence lua "TT_TitleData['COLOR_CHOICES_TITLE'][instanceId].seq"
            align center center
        }
        name "TEMPLATE_titlechar_COLOR_CHOICES"
    }
	label
    {
        name "TT_COLOR_CHOICES"
		area 28 24 294 34
		--text "COLOR_CHOICES_TITLE"
		--text style "title"
    }
	button
	{
		area 174 160 114 160
		paperdoll 0
	}
	button
	{
		area 318 160 114 160
		paperdoll 1
		action
		"
			local a=Infinity_RandomNumber(0, game:GetPaletteSize(2))
			local b=Infinity_RandomNumber(0, game:GetPaletteSize(1))
			SLIDER_color_major = a
			SLIDER_color_minor = b
			Infinity_SetMajorColor(a)
			Infinity_SetMinorColor(b)
		"
	}
	button
	{
		enabled "characters[id].PC == 1"
		area 458 139 52 46
		bam INVBUT
		colordisplay 6
		action
		"
			local a=Infinity_RandomNumber(0, game:GetPaletteSize(6))
			SLIDER_color_hair = a
			Infinity_SetHairColor(a)
		"
	}
	button
	{
		enabled "characters[id].PC == 1"
		area 458 185 52 46
		bam INVBUT
		colordisplay 3
		action
		"
			local a=Infinity_RandomNumber(0, game:GetPaletteSize(3))
			SLIDER_color_skin = a
			Infinity_SetSkinColor(a)
		"
	}
	button
	{
		area 458 256 52 46
		bam INVBUT
		colordisplay 2
		action
		"
			local a=Infinity_RandomNumber(0, game:GetPaletteSize(2))
			SLIDER_color_major = a
			Infinity_SetMajorColor(a)
		"
	}
	button
	{
		area 458 298 52 46
		bam INVBUT
		colordisplay 1
		action
		"
			local a=Infinity_RandomNumber(0, game:GetPaletteSize(1))
			SLIDER_color_minor = a
			Infinity_SetMinorColor(a)
		"
	}
	label
	{
		enabled "characters[id].PC == 1"
		area 462 114 144 26
		text "APPEARANCE_LABEL"
		text style "label"
		text align left center
		text shadow 1
	}
	
	label
	{
		enabled "characters[id].PC == 1"
		area 514 140 92 45
		text "HAIR_LABEL"
		text style "label"
		text align left center
		text shadow 1
	}
	slider
	{
		palette 6
		enabled "characters[id].PC == 1"
		area 40 368 700 44
		bam	 'SLDRSTAR'
		scaleToClip
		position "SLIDER_color_hair"
		sequence 0
		settings lua "game:GetPaletteSize(6)"
		action
		"
			Infinity_SetHairColor(SLIDER_color_hair)
		"
	}

	label
	{
		enabled "characters[id].PC == 1"
		area 514 185 92 45
		text "SKIN_LABEL"
		text style "label"
		text align left center
		text shadow 1
	}
	slider
	{
		palette 3
		enabled "characters[id].PC == 1"
		area 40 412 700 44
		bam	 'SLDRSTAR'
		scaleToClip
		position "SLIDER_color_skin"
		sequence 0
		settings lua "game:GetPaletteSize(3)"
		action
		"
			Infinity_SetSkinColor(SLIDER_color_skin)
		"
	}
	
	label
	{
		area 462 230 144 26
		text "CLOTHING_LABEL"
		text style "label"
		text align left center
		text shadow 1
	}
	
	label
	{
		area 514 256 92 46
		text "MAJOR_LABEL"
		text style "label"
		text align left center
		text shadow 1
	}
	slider
	{
		palette 2
		enabled "characters[id].PC == 1"
		area 40 456 700 44
		bam	 'SLDRSTAR'
		scaleToClip
		position "SLIDER_color_major"
		sequence 0
		settings lua "game:GetPaletteSize(2)"
		action
		"
			Infinity_SetMajorColor(SLIDER_color_major)
		"
	}
	slider
	{
		palette 2
		enabled "characters[id].PC ~= 1"
		area 40 398 700 44
		bam	 'SLDRSTAR'
		scaleToClip
		position "SLIDER_color_major"
		sequence 0
		settings lua "game:GetPaletteSize(2)"
		action
		"
			Infinity_SetMajorColor(SLIDER_color_major)
		"
	}
	label
	{
		area 514 298 92 46
		text "MINOR_LABEL"
		text shadow 1		
		text style "label"
		text align left center
	}
	slider
	{
		palette 1
		enabled "characters[id].PC == 1"
		area 40 500 700 44
		bam	 'SLDRSTAR'
		scaleToClip
		position "SLIDER_color_minor"
		sequence 0
		settings lua "game:GetPaletteSize(1)"
		action
		"
			Infinity_SetMinorColor(SLIDER_color_minor)
		"
	}
	slider
	{
		palette 1
		enabled "characters[id].PC ~= 1"
		area 40 464 700 44
		bam	 'SLDRSTAR'
		scaleToClip
		position "SLIDER_color_minor"
		sequence 0
		settings lua "game:GetPaletteSize(1)"
		action
		"
			Infinity_SetMinorColor(SLIDER_color_minor)
		"
	}
	button
	{
		on escape
		area 180 574 134 28
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text "CANCEL_BUTTON"
		text style "button"
		text shadow 1
		action
		"
			Infinity_PopMenu('CHARACTER_COLOR',0,0)
		"
	}
	button
	{
		on return
		area 418 574 132 28
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text "DONE_BUTTON"
		text style "button"
		text shadow 1
		action
		"
			--save settings
			SLIDER_color_hair_start = SLIDER_color_hair
			SLIDER_color_skin_start = SLIDER_color_skin
			SLIDER_color_major_start = SLIDER_color_major
			SLIDER_color_minor_start = SLIDER_color_minor
			
			if (e:GetActiveEngine() == createCharScreen) then
				createCharScreen:OnDoneButtonClick()
			end
			
			Infinity_PopMenu('CHARACTER_COLOR',0,0)
		"
	}
}

menu
{
	name 'WORLD_LEVEL_UP_BUTTONS'
	align right top
	offset -66 0
	ignoreesc
	enabled "1"
	button
	{
		enabled "Infinity_CanLevelUp(0)"
		bam GUIOSW
		area 0 16 30 30
		ScaleToClip
		sequence 0
		action "Infinity_ActivateRecord(0)"
		pulse 1
	}
	button
	{
		enabled "Infinity_CanLevelUp(1)"
		bam GUIOSW
		area 0 117 30 30
		ScaleToClip
		sequence 0
		action "Infinity_ActivateRecord(1)"
		pulse 1
	}
	button
	{
		enabled "Infinity_CanLevelUp(2)"
		bam GUIOSW
		area 0 218 30 30
		ScaleToClip
		sequence 0
		action "Infinity_ActivateRecord(2)"
		pulse 1
	}
	button
	{
		enabled "Infinity_CanLevelUp(3)"
		bam GUIOSW
		area 0 319 30 30
		ScaleToClip
		sequence 0
		action "Infinity_ActivateRecord(3)"
		pulse 1
	}
	button
	{
		enabled "Infinity_CanLevelUp(4)"
		bam GUIOSW
		area 0 420 30 30
		ScaleToClip
		sequence 0
		action "Infinity_ActivateRecord(4)"
		pulse 1
	}
	button
	{
		enabled "Infinity_CanLevelUp(5)"
		bam GUIOSW
		area 0 521 30 30
		ScaleToClip
		sequence 0
		action "Infinity_ActivateRecord(5)"
		pulse 1
	}
	
}
menu
{
	name 'textflash'
	opacity lua 'getOpacityForInfoBlock(1000)'
	enabled 'getOpacityForInfoBlock(1000) ~= 0'
	align center top
	offset 0 10

	label
	{
		area 0 0 500 140
		mosaic 'GUINOTE'	
	}
	label
	{
		area 92 10 348 26
		text lua "getTitleString()"
		text style "label"
		text align left center
		text point 14
		text color C
	}
	label
	{
		area 92 36 348 26
		text lua "getSubtitleString()"
		text style "label"
		text align left center
		text point 14
		text color D
		text shadow 1
	}

	label
	{
		area 17 73 472 56
		text lua "getBodyString()"
		text style "gamelog"
		text align left center
		text shadow 1
	}
	label
	{
		area 16 9 70 62
		bam 'GUILS10'
		ScaleToClip
		sequence 2
		frame 0
	}
	button
	{
		area 0 0 500 140
		action
		"
			FindTitle = getSubtitleString()
			if (sidebarsGreyed ~= 1) then
				if journalOpen ~= 1 then
					e:GetActiveEngine():OnLeftPanelButtonClick(2)
				end
				QFilter = 0
				local tf = next(textflashes)
				setSelectedQuest(textflashes[tf][5])
				CloseAll()
				findQuestPopUp()
				CheckForOpenedQuests()
			end
		"
	}
	button
	{
		bam GUIOSW
		on esc
		area 464 8 28 26
		ScaleToClip
		sequence 2
		action 
		"
			--end the animation
			local tf = next(textflashes)
			textflashes[tf] = nil
		"
	}
}


`
luaEdit = ""
luaEditDebugDump = 0
luaEditHistory = {}
luaEditMaxHistory = 10
luaEditHistoryIndex = 0
luaEditShowHistoryList = 0
luaEditHistoryListSelected = 0
function updateLuaHistory()
	local i = 2
	local tempTab = {}
	tempTab[1] = luaEdit
	while ( i <= luaEditMaxHistory ) do
		tempTab[i] = luaEditHistory[i-1]
		i = i + 1
	end
	luaEditHistory = tempTab
end
function loadLuaHistory()
	local i = 1
	while (i <= luaEditMaxHistory ) do
		luaEditHistory[i] = Infinity_GetINIString("Lua Edit","String"..i-1, "")
		i = i + 1
	end
end
function saveLuaHistory()
	local i = 1
	while (i <= luaEditMaxHistory ) do
		Infinity_SetINIValue("Lua Edit","String"..i-1, luaEditHistory[i])
		i = i + 1
	end
end
function luaEditHistoryUp()
	if(luaEditHistoryIndex <= 1) then return end
	luaEditHistoryIndex = luaEditHistoryIndex - 1
	luaEdit = luaEditHistory[luaEditHistoryIndex]
end
function luaEditHistoryDown()
	if(luaEditHistoryIndex == luaEditMaxHistory) then return end
	if(luaEditHistory[luaEditHistoryIndex + 1] == "") then return end
	luaEditHistoryIndex = luaEditHistoryIndex + 1
	luaEdit = luaEditHistory[luaEditHistoryIndex]
end

cheatGoldAmt = 1000000
cheatXpAmt = 500000

cheatAreaDisplayList = {}

`
menu
{
	name 'cheatMenu'
	ignoreEsc

	onOpen
	"
		if game:GetMissionPackInfo() then
			cheatAreaDisplayList = cheatAreasTutorial
		elseif game:GetMissionPackInfoTBP() then
			cheatAreaDisplayList = cheatAreasArena
		elseif startEngine:GetCampaign() == 3 then
			cheatAreaDisplayList = cheatAreasExpansion
		else
			cheatAreaDisplayList = cheatAreas
		end
	"

	label
	{
		area 100 0 819 298
		mosaic 'GUWBTP30'	
	}
	list
	{
		column 
		{ 
			width 20 
			label
			{
				area 0 0 -1 -1
				text lua "cheatAreaDisplayList[rowNumber][1]"
				text style "normal"
				text shadow 1
			}
			label
			{
				enabled "cheatTeleportArea == rowNumber"
				area 0 0 -1 -1
				text lua "cheatAreaDisplayList[rowNumber][1]"
				text style "normal"
				text shadow 1
				text color S
			}
		}
		column 
		{ 
			width 80 
			label
			{
				area 0 0 -1 -1
				text lua "cheatAreaDisplayList[rowNumber][2]"
				text style "normal"
				text shadow 1
			}
			label
			{
				enabled "cheatTeleportArea == rowNumber"
				area 0 0 -1 -1
				text lua "cheatAreaDisplayList[rowNumber][2]"
				text style "normal"
				text shadow 1				
				text color S
			}
		}

		area 122 6 492 240
		hideHighlight
		rowheight	18
		table		"cheatAreaDisplayList"
		var		cheatTeleportArea
		scrollbar	'GUISCRC'
	}
	button
	{
		area		122 252 140 30
		bam			GUIWPKPC
		ScaleToClip
		sequence	1
		text		"TRAVEL_BUTTON"
		text style	"button"
		text shadow 1
		action 		"C:MoveToArea(cheatAreaDisplayList[cheatTeleportArea][1])"
	}
	button
	{
		area		620 186 140 30
		bam			GUIWPKPC
		ScaleToClip
		sequence	1
		text			"GODBOW_LABEL"
		text style	"button"
		text shadow 1
		action		"C:CreateItem('godbow')"
	}
	button
	{
		area		620 216 140 30
		bam			GUIWPKPC
		ScaleToClip
		sequence	1
		text			"GIVE_GOLD_LABEL"
		text style	"button"
		text shadow 1
		action		"C:AddGold(cheatGoldAmt)"
	}
	edit
	{
		area		766 222 138 30
		var		cheatGoldAmt
		text style	"edit"
		maxlines	1
		fill            112 111 111 64
	}

	button
	{
		area		620 252 140 30
		bam			GUIWPKPC
		ScaleToClip
		sequence	1
		text			"GIVE_XP_LABEL"
		text style	"button"
		text shadow 1
		action		"C:SetCurrentXP(cheatXpAmt)"
	}
	edit
	{
		area		766 258 138 30
		var		cheatXpAmt
		text style	"edit"
		maxlines	1
		fill            112 111 111 64
	}

	button
	{
		area		766 186 140 30
		bam			GUIWPKPC
		ScaleToClip
		sequence	1
		text			"EXPLORE_LABEL"
		text style	"button"
		text shadow 1
		action		"C:ExploreArea()"
	}

}
menu
{
	name "luaHistoryMenu"
	offset 0 0
	align center center
	label
	{
		area 0 0 819 300
		mosaic 'GUWBTP30'
	}
	list
	{
		column 
		{ 
			width 100
			label
			{
				area 0 0 -1 -1
				text lua "luaEditHistory[rowNumber]"
				text style	"normal"
				text shadow 1
			}
			label
			{
				enabled "luaEditHistoryListSelected == rowNumber"
				area 0 0 -1 -1
				text lua "luaEditHistory[rowNumber]"
				text style	"normal"
				text shadow 1
				text color S
				
			}
		}
		area 12 10 796 278
		rowheight	24
		hidehighlight
		var luaEditHistoryListSelected
		table		"luaEditHistory"
		scrollbar	'GUISCRC'
		action
		"
			luaEdit = luaEditHistory[luaEditHistoryListSelected]
		"
	}
}
menu
{
	name 'cheatConsole'
	align center bottom
	ignoreEsc

	onOpen 
	"
		toolbarTop = 50
		Infinity_PushMenu('WORLD_MESSAGES')
		Infinity_PushMenu('cheatMenu', 0, 0);
		Infinity_FocusTextEdit('luaEditArea'); 
		luaEdit = trim(luaEdit)
		loadLuaHistory()
	"
	onClose 
	"
		Infinity_PopMenu('cheatMenu', 0, 0);
		Infinity_PopMenu('luaHistoryMenu', 0, 0);
	"
	label
	{
		area 0 0 809 50
		mosaic GUWBTP20
	}
	edit
	{
		name				"luaEditArea"
		area				12 8 790 34
		var					luaEdit
		pulse lua "string.len(luaEdit) <1"
		scrollbar			'GUISCRC'
		text style			"edit"
		text useFontZoom	0
		action
		"
			--if key_pressed is return
			if (key_pressed == 13) then
				updateLuaHistory()
				saveLuaHistory()
				Infinity_LuaConsoleInput(luaEditObjectId,luaEditDebugDump)
				return -1
			end
			if (key_pressed == 27) then
				return 0
			end
			return 1
		"
	}
	button
	{
		area		816 8 28 28
		bam			ROUNDBUT
		scaleToClip
		toggle		luaEditShowHistoryList
		action
		"
			if(luaEditShowHistoryList == 0) then
				Infinity_PopMenu('luaHistoryMenu',0,0)
			else
				Infinity_PushMenu('luaHistoryMenu',0,0)
			end
		"
	}
	button
	{
		enabled "Infinity_TextEditHasFocus()"
		on up
		action
		"
			luaEditHistoryUp()
		"
	}
	button
	{
		enabled "Infinity_TextEditHasFocus()"
		on down
		action
		"
			luaEditHistoryDown()
		"
	}

}
`
cloudLoadState=0
function CheckCloudSaveStatus()
	Infinity_UpdateCloudSaveState()
	if(cloudLoadState == 0) then
		Infinity_PopMenu()
	end
	return GetCloudLoadingText()
end
function GetCloudLoadingText()
	if(cloudLoadState == 1 or cloudLoadState == 0) then
		return t('DOWNLOADING_SAVE_NORMAL')
	end
	if(cloudLoadState == 2) then
		return t('SEARCHING_SAVE_NORMAL')
	end
	return t('CLOUD_STATE_UNDEFINED_NORMAL')
end
`
menu
{
	name 'CloudSaveUpdateMenu'
	modal
	align center center
	label -- Background
	{
		area 0 0 380 212
		mosaic GUIERR1B
	}
	label
	{
		area 20 20 340 80
		text lua "CheckCloudSaveStatus()"
		text style "normal"
		text align center center
		text shadow 1
	}
	button
	{
		on escape
		area		108 136 162 32
		bam			GUIWPKPC
		ScaleToClip
		sequence	1
		text		"SKIP_BUTTON"
		text style	"button"
		text shadow 1
		action
		"
			Infinity_PopMenu()
		"
	}
}
`
messageBoxCurMessage = nil
messageBoxMessages = {}
function initMessageBox(message)
	messageBoxMessages[message] = 1
	if(messageBoxCurMessage ~= nil) then
		--message box already active
		return
	end
	getNextMessage()
	Infinity_PushMenu('LuaMessageBox',0,0)
end

function getNextMessage()
	i = 1
	while ( i <= messageBoxMessageCount ) do
		showMessage = messageBoxMessages[i]
		if ( showMessage ~= nil ) then
			messageBoxCurMessage = i
			return 1
		end
		i = i + 1
	end
	--whole table scanned, all messages have been displayed
	return 0
end
`
menu
{
	name 'LuaMessageBox'
	align center center
	modal
	label
	{
		area 0 0 380 212
		mosaic GUIERR1B
	}
	label
	{
		area 20 20 340 80
		text lua "messages[messageBoxCurMessage]"
		text style	"normal"
		text align center center
	}
	button
	{
		area		108 136 162 32
		bam			GUIWPKPC
		ScaleToClip
		sequence	1
		text "DONE_BUTTON"
		text style	"button"
		text shadow 1
		action
		"
			messageBoxMessages[messageBoxCurMessage] = nil
			if(getNextMessage() == 0) then
				messageBoxCurMessage = nil
				Infinity_PopMenu()
			end
		"	
	}
}

`
	partyImport = {}
`
menu
{
	name 'IMPORTPARTY'
	align center center
	onOpen
	"
		TT_BuildTitleData('CREATE_PARTY_TITLE', 654, true)
		TT_CreateTitleChars('CREATE_PARTY_TITLE', 'TT_CREATE_PARTY', 44, 'TEMPLATE_titlechar_CREATE_PARTY')
	"
	onclose	"TT_DestroyTitleChars('CREATE_PARTY_TITLE', 'TEMPLATE_titlechar_CREATE_PARTY')"
	label 
	{
		mosaic 'GMPCARBD'
		area 0 0 1024 768
	}
	template
    {
        label
        {
            enabled "true"
            ignoreEvents
            area 0 0 -1 -1
            bam "TTREALMS"
            sequence lua "TT_TitleData['CREATE_PARTY_TITLE'][instanceId].seq"
            align center center
        }
        name "TEMPLATE_titlechar_CREATE_PARTY"
    }
	label
    {
        name "TT_CREATE_PARTY"
		area 58 52 654 44
		--text "CREATE_PARTY_TITLE"
		--text style "title"
    }
	label
	{
		enabled		"game:GetMissionPackInfoTBP()"
		area 		43 622 697 76
		scrollbar	'GUISCRC'
		text style	"normal"
		text 			69563
	}

	--portraits
	label
	{
		area 424 174 84 119
		bam 'GUIRSP10'
		ScaleToClip
	}
	button
	{
		area 437 185 62 97
		bitmap lua "partyImport.character[1].portrait"
		clickable lua "partyImport.character[1].name ~= ''"
		action
		"
			createPartyScreen:OnPortraitButtonClick(0)
		"
	}
	label
	{
		area 424 311 84 119
		bam 'GUIRSP10'
		ScaleToClip
	}
	button
	{
		area 437 320 62 97
		bitmap lua "partyImport.character[2].portrait"
		clickable lua "partyImport.character[2].name ~= ''"
		action
		"
			createPartyScreen:OnPortraitButtonClick(1)
		"
	}
	label
	{
		area 424 447 84 119
		bam 'GUIRSP10'
		ScaleToClip
	}
	button
	{
		area 437 456 62 97
		bitmap lua "partyImport.character[3].portrait"
		clickable lua "partyImport.character[3].name ~= ''"
		action
		"
			createPartyScreen:OnPortraitButtonClick(2)
		"
	}
	label
	{
		area 921 175 84 119
		bam 'GUIRSP10'
		ScaleToClip
	}
	button
	{
		area 934 184 62 97
		bitmap lua "partyImport.character[4].portrait"
		clickable lua "partyImport.character[4].name ~= ''"
		action
		"
			createPartyScreen:OnPortraitButtonClick(3)
		"
	}
	label
	{
		area 921 311 84 119
		bam 'GUIRSP10'
		ScaleToClip
	}
	button
	{
		area 934 320 62 97
		bitmap lua "partyImport.character[5].portrait"
		clickable lua "partyImport.character[5].name ~= ''"
		action
		"
			createPartyScreen:OnPortraitButtonClick(4)
		"
	}
	label
	{
		area 921 447 84 119
		bam 'GUIRSP10'
		ScaleToClip
	}
	button
	{
		area 934 456 62 97
		bitmap lua "partyImport.character[6].portrait"
		clickable lua "partyImport.character[6].name ~= ''"
		action
		"
			createPartyScreen:OnPortraitButtonClick(5)
		"
	}

	button
	{
		on return
		area 786 670 188 44
		bam 'BIGBUTT'
		ScaleToClip
		text "PLAY_IMPORT_BUTTON" -- Play
		text style 'big_button'
		text shadow 1
		clickable lua "partyImport.playbuttonclickable"
		action 
		"
			createPartyScreen:OnDoneButtonClick()
		"
	}
	button
	{
		on escape
		area 764 594 236 44
		bam GUIINVHC
		ScaleToClip
		sequenceonce lua "Infinity_RandomNumber(0, 1)"
		text "BACK_BUTTON" -- Back
		text style "button"
		text shadow 1
		action 
		"
			createPartyScreen:OnBackButtonClick()
		"
	}

	--delete/create buttons
	button
	{
		area 84 176 338 33
		bam 'GMPCARBC'
		sequence 0
		text lua "partyImport.character[1].createdelete"
		text style "button"
		text shadow 1
		action
		"
			createPartyScreen:OnCreateDeleteButtonClick(0)
		"
	}
	button
	{
		area 86 312 338 33
		bam 'GMPCARBC'
		sequence 0
		text lua "partyImport.character[2].createdelete"
		text style "button"
		text shadow 1
		action
		"
			createPartyScreen:OnCreateDeleteButtonClick(1)
		"
	}
	button
	{
		area 86 449 338 33
		bam 'GMPCARBC'
		sequence 0
		text lua "partyImport.character[3].createdelete"
		text style "button"
		text shadow 1
		action
		"
			createPartyScreen:OnCreateDeleteButtonClick(2)
		"
	}
	button
	{
		area 583 176 338 33
		bam 'GMPCARBC'
		sequence 0
		text lua "partyImport.character[4].createdelete"
		text style "button"
		text shadow 1
		action
		"
			createPartyScreen:OnCreateDeleteButtonClick(3)
		"
	}
	button
	{
		area 583 312 338 33
		bam 'GMPCARBC'
		sequence 0
		text lua "partyImport.character[5].createdelete"
		text style "button"
		text shadow 1
		action
		"
			createPartyScreen:OnCreateDeleteButtonClick(4)
		"
	}
	button
	{
		area 583 449 338 33
		bam 'GMPCARBC'
		sequence 0
		text lua "partyImport.character[6].createdelete"
		text style "button"
		text shadow 1
		action
		"
			createPartyScreen:OnCreateDeleteButtonClick(5)
		"
	}

	-- character labels
	button
	{
		area 84 214 339 69
		text lua "partyImport.character[1].name"
		enabled "partyImport.character[1].name ~= ''"
		text style "normal"
		text align center center
		text shadow 1
		bam 'GMPCARBC'
		ScaleToClip
		sequence 1
		action
		"
			createPartyScreen:OnPortraitButtonClick(0)
		"
	}
	button
	{
		area 86 350 339 69
		text lua "partyImport.character[2].name"
		enabled "partyImport.character[2].name ~= ''"
		text style "normal"
		text align center center
		text shadow 1
		bam 'GMPCARBC'
		ScaleToClip
		sequence 1
		action
		"
			createPartyScreen:OnPortraitButtonClick(1)
		"
	}
	button
	{
		area 86 485 339 69
		text lua "partyImport.character[3].name"
		enabled "partyImport.character[3].name ~= ''"
		text style "normal"
		text align center center
		text shadow 1
		bam 'GMPCARBC'
		ScaleToClip
		sequence 1
		action
		"
			createPartyScreen:OnPortraitButtonClick(2)
		"
	}
	button
	{
		area 583 214 339 69
		text lua "partyImport.character[4].name"
		enabled "partyImport.character[4].name ~= ''"
		text style "normal"
		text align center center
		text shadow 1
		bam 'GMPCARBC'
		ScaleToClip
		sequence 1
		action
		"
			createPartyScreen:OnPortraitButtonClick(3)
		"
	}
	button
	{
		area 583 350 339 69
		text lua "partyImport.character[5].name"
		enabled "partyImport.character[5].name ~= ''"
		text style "normal"
		text align center center
		text shadow 1
		bam 'GMPCARBC'
		ScaleToClip
		sequence 1
		action
		"
			createPartyScreen:OnPortraitButtonClick(4)
		"
	}
	button
	{
		area 583 485 339 69
		text lua "partyImport.character[6].name"
		enabled "partyImport.character[6].name ~= ''"
		text style "normal"
		text align center center
		text shadow 1
		bam 'GMPCARBC'
		ScaleToClip
		sequence 1
		action
		"
			createPartyScreen:OnPortraitButtonClick(5)
		"
	}
}

menu
{
	name 'START_CAMPAIGN_SELECT'
	align center center
	ignoreEsc
	modal
	onOpen
	"
		if e:IsTouchUI() then
			startEngine:DismissChooseCampaignPopup()
		end
	"
	
	label
	{
		area 0 0 672 672
		mosaic "RECENTEV"
		enabled "not e:IsTouchUI()"
	}
	label
	{
		area 158 52 354 46
		text style "title"
		text "SELECT_CAMPAIGN_TITLE"
		enabled "not e:IsTouchUI()"
	}
	label
	{
		area 136 120 406 258
		text style "normal"
		text "WELCOME_NORMAL"
		enabled "not e:IsTouchUI()"
	}
	button
	{
		area 198 408 300 40
		bam GUIBUTWT
		text style "button"
		text shadow 1
		text "SIEGE_OF_DRAGONSPEAR_BUTTON"
		enabled "not e:IsTouchUI()"
		action
		"
			startEngine:DismissChooseCampaignPopup()
			startEngine:OnCampaignButtonClick('SOD',true)
		"
	}
		button
	{
		area 198 458 300 40
		bam GUIBUTWT
		text style "button"
		text shadow 1
		text "BALDURS_GATE_BUTTON"
		enabled "not e:IsTouchUI()"
		action
		"
			--selected by default, just close this menu.
			startEngine:DismissChooseCampaignPopup()
		"
	}
	button
	{
		area 198 508 300 40
		bam GUIBUTWT
		text style "button"
		text shadow 1
		text "BLACK_PITS_BUTTON"
		enabled "not e:IsTouchUI()"
		action
		"
			startEngine:DismissChooseCampaignPopup()
			startEngine:OnTBPButtonClick(true)
		"
	}

}

`
	highlightedCampaign = nil

	--obviously theres some redundancy in this data but I dislike the idea of assuming what our frame/sequence will be.
	startCampaignData = { 
		{bigLogo = 0, icon = 0, tooltip = "TOOLTIP_CAMPAIGN_BG", background = 2, button = 2, sidebar = 2, importEnabled = false, tutorialEnabled = true}, 
		{bigLogo = 2, icon = 1, tooltip = "TOOLTIP_CAMPAIGN_TBP", background = 2, button = 2, sidebar = 2, importEnabled = false, tutorialEnabled = false}, 
		{bigLogo = 1, icon = 2, tooltip = "TOOLTIP_CAMPAIGN_SOD", background = 2, button = 2, sidebar = 2, importEnabled = true, tutorialEnabled = false}
	}
	startButtons = 
	{
		{const.START_CAMPAIGN_SOD, const.START_CAMPAIGN_BP}, --bg
		{const.START_CAMPAIGN_BG, const.START_CAMPAIGN_SOD}, --bp
		{const.START_CAMPAIGN_BG,const.START_CAMPAIGN_BP}, --sod
	}
	
	function getCampaignHighlight(selected)
		return selected == highlightedCampaign
	end
	
	function getBigLogo()
		local campaign = startEngine:GetCampaign()
		return startCampaignData[campaign].bigLogo
	end
	
	function getCampaignIcon(buttonNum)
		local campaign = startEngine:GetCampaign()
		return startCampaignData[startButtons[campaign][buttonNum]].icon
	end
	
	function getCampaignTooltip(buttonNum)
		local campaign = startEngine:GetCampaign()
		return t(startCampaignData[startButtons[campaign][buttonNum]].tooltip)
	end
	
	function getCampaignButtonSequence()
		local campaign = startEngine:GetCampaign()
		return startCampaignData[campaign].button
	end
	
	function onCampaignButton(buttonNum)
		local campaign = startEngine:GetCampaign()
		local clickedCampaign = startButtons[campaign][buttonNum]
		if(clickedCampaign == const.START_CAMPAIGN_SOD) then
			startEngine:OnCampaignButtonClick('SOD',true)
		elseif(clickedCampaign == const.START_CAMPAIGN_BP) then
			startEngine:OnTBPButtonClick(true)
		elseif(clickedCampaign == const.START_CAMPAIGN_BG) then
			startEngine:OnSoAButtonClick(true)
		end
	end
	function getCampaignImportEnabled()
		local campaign = startEngine:GetCampaign()
		return startCampaignData[campaign].importEnabled	
	end
	function getTutorialEnabled()
		--Tutorial and campaign import should never be enabled for the same campaign - the button uses the same space
		local campaign = startEngine:GetCampaign()
		return startCampaignData[campaign].tutorialEnabled	
	end
	function getSidebarFrame()
		local campaign = startEngine:GetCampaign()
		return startCampaignData[campaign].sidebar
	end
	function checkIfBaseGame()
		if startEngine:GetCampaign() ~= const.START_CAMPAIGN_BG and startEngine:GetCampaign() ~= const.START_CAMPAIGN_SOD and  startEngine:GetCampaign() ~= const.START_CAMPAIGN_BP then return true
		else 
			return false 
		end
	end
	function getCampaignText()
	 if startEngine:GetCampaign() == 2 then return t("BALDURS_GATE_BUTTON")
	 else return  t("BLACK_PITS_BUTTON") end
	end

	usingSODStartMenu = 1
`
menu
{
	name 'START'
	align center center
	size 1024 768
	ignoreesc
	onOpen "
		if e:IsTouchUI() and startEngine:GetCampaign() ~= 3 then
			startEngine:OnCampaignButtonClick('SOD',false)
		end

		versionString = CBaldurChitin:GetVersionString()
		canContinue = startEngine:HasGameToContinue()
		Infinity_PlayMovie('flames','flames')
		e:CheckGUISong()
		local state = startEngine:GetEngineState()
		if lastStartMenu and lastStartMenu ~= 'START' then
			Infinity_PopMenu('START')
			Infinity_PushMenu(lastStartMenu)
			lastStartMenu = nil
		elseif state == 1 or state == 3 then
			Infinity_PopMenu('START')
			Infinity_PushMenu('START_SP')
		elseif state == 2 then
			Infinity_PopMenu('START')
			Infinity_PushMenu('START_MP')
		end
		Infinity_SetBackground('BACKGROUND')
		
		--If we're coming back from the tutorial make sure we're set to our actual campaign.
		if(startEngine:GetCampaign() == const.START_CAMPAIGN_BG) then
			startEngine:OnSoAButtonClick(false)
		end
	"
	onClose "
		local state = startEngine:GetEngineState()
		if state == 1 then
			Infinity_PopMenu('START_SP')
		elseif state == 2 then
			Infinity_PopMenu('START_MP')
		end

	"
	label
	{
		area 0 0 1024 768
	}
	label
	{
		area 0 0 1024 768
		mosaic "START"
	}
	label
	{
		enabled "checkIfBaseGame()"
		area 0 0 1024 768
		mosaic "START2"
	}
	--label
	--{
		--area 644 202 382 384
		--bam "BIGLOGO"
		--sequence 0
		--frame lua "getBigLogo()"
	--}
	label
	{
		enabled "startEngine:GetCampaign() == const.START_CAMPAIGN_BG"
		area 340 98 350 108
		bam 'TITLE'
		ScaleToClip
		sequence 0
		frame 0
	}
	label
	{
		enabled "startEngine:GetCampaign() == const.START_CAMPAIGN_SOD"
		area 336 52 350 144
		bam 'TITLE'
		ScaleToClip
		sequence 0
		frame 1
	}
	label
	{
		enabled "startEngine:GetCampaign() == const.START_CAMPAIGN_BP"
		area 336 124 350 58
		bam 'TITLE'
		ScaleToClip
		sequence 0
		frame 2
	}

	--label
	--{
		--area 210 692 271 30
		--bam "DNDLOGO"
		--scaleToClip
	--}
	button
	{
		bam GUISTDRC
		sequenceonce lua "Infinity_RandomNumber(0, 3)"
		ScaleToClip
		area 380 147 264 71
		pad 10 8 10 8
		text style "big_button"
		text shadow 1
		text "STRREF_GUI_LOWER_DLC_STORE"
		enabled "e:IsTouchUI()"
		action 
		"
			startEngine:OnDLCImageClick()
		"
	}
	button
	{
		bam GUISTDRC
		sequenceonce lua "Infinity_RandomNumber(0, 3)"
		ScaleToClip
		area 380 218 264 71
		pad 10 8 10 8
		text style "big_button"
		text shadow 1
		--text 9372
		text "CONTINUE_BUTTON"
		clickable lua "canContinue"
		action "startEngine:OnContinueGame()"
	}
	button
	{
		bam GUISTDRC
		sequenceonce lua "Infinity_RandomNumber(0, 3)"
		ScaleToClip
		area 380 289 264 71
		pad 10 8 10 8
		text style "big_button"
		text shadow 1
		text "SINGLEPLAYER_BUTTON"
		--text 15413
		action 
		"
			startEngine:SetEngineState(1)
			Infinity_TransitionMenu('START_SP')
		"
	}
	button
	{
		bam GUISTDRC
		sequenceonce lua "Infinity_RandomNumber(0, 3)"
		ScaleToClip
		area 380 360 264 71
		pad 10 8 10 8
		text style "big_button"
		text shadow 1
		text "MULTIPLAYER_BUTTON"
		action 
		"
			startEngine:OnMultiPlayerButtonClick()
		"
	}
	button
	{
		bam GUISTDRC
		sequenceonce lua "Infinity_RandomNumber(0, 3)"
		ScaleToClip
		area 380 431 264 71
		pad 10 8 10 8
		text style "big_button"
		text "OPTIONS_BUTTON"
		text shadow 1
		action "
			Infinity_TransitionMenu('START_OPTIONS')
			optionsScreen:SetEngineState(1)
			startEngine:OnOptionsButtonClick()
			lastStartMenu = 'START'
		"
	}
	button
	{
		bam GUISTDRC
		sequenceonce lua "Infinity_RandomNumber(0, 3)"
		ScaleToClip
		area 380 502 264 71
		pad 10 8 10 8
		text style "big_button"
		text shadow 1
		text "QUIT_GAME_BUTTON"
		enabled "not e:IsTouchUI()"
		on escape
		action 
		"
			startEngine:OnQuitButtonClick()
		"
	}
	--Black Pits/Baldur's Gate button for base game
	button
	{
		enabled "not e:IsTouchUI() and checkIfBaseGame()"
		bam GUISTDRC
		sequenceonce lua "Infinity_RandomNumber(0, 3)"
		ScaleToClip
		area 380 590 264 71
		pad 10 8 10 8
		text style "big_button"
		text shadow 1
		text lua "getCampaignText()"
		on escape
		action 
		"
		 if startEngine:GetCampaign() == 2 then startEngine:OnSoAButtonClick(true)
		else startEngine:OnTBPButtonClick(true) end
		"
	}
	button
	{
		area 0 0 1 1
		enabled "e:IsTouchUI()"
		on escape
		action 
		"
			startEngine:OnQuitButtonClick()
		"
	}

	text
	{
		bam "CMPGSML"
		sequence lua 'getCampaignIcon(1)'
		frame lua "getCampaignHighlight(1)"
		area 380 573 116 116
		align center center
		tooltip lua "getCampaignTooltip(1)"
		enabled "not e:IsTouchUI() and not checkIfBaseGame()"
		action 
		"
			onCampaignButton(1)
		"
		actionEnter
		"
			highlightedCampaign = 1
		"
		actionExit
		"
			highlightedCampaign = nil
		"
	}
	text
	{
		bam "CMPGSML"
		sequence lua 'getCampaignIcon(2)'
		frame lua "getCampaignHighlight(2)"
		area 528 573 116 116
		align center center
		tooltip lua "getCampaignTooltip(2)"
		enabled "not e:IsTouchUI() and not checkIfBaseGame()"
		action 
		"
			onCampaignButton(2)
		"
		actionEnter
		"
			highlightedCampaign = 2
		"
		actionExit
		"
			highlightedCampaign = nil
		"
	}
	movie
	{
		enabled "startEngine:GetCampaign() == const.START_CAMPAIGN_SOD"
		name "flames"
		area -132 236 512 512
		loop
		respectClipping
	}
	label
	{
		area 844 706 147 35
		text style "normal"
		text align center center
		text lua "CBaldurChitin:GetVersionString()"
	}
}

menu
{
	name 'START_SP'
	align center center
	size 1024 768
	ignoreEsc
	onopen "Infinity_PlayMovie('flames','flames2')"
	
	label
	{
		area 0 0 1024 768
		mosaic "START"
	}
	label
	{
		enabled "checkIfBaseGame()"
		area 0 0 1024 768
		mosaic "START2"
	}
	label
	{
		enabled "startEngine:GetCampaign() == const.START_CAMPAIGN_BG"
		area 340 98 350 108
		bam 'TITLE'
		ScaleToClip
		sequence 0
		frame 0
	}
	label
	{
		enabled "startEngine:GetCampaign() == const.START_CAMPAIGN_SOD"
		area 336 52 350 144
		bam 'TITLE'
		ScaleToClip
		sequence 0
		frame 1
	}
	label
	{
		enabled "startEngine:GetCampaign() == const.START_CAMPAIGN_BP"
		area 336 124 350 58
		bam 'TITLE'
		ScaleToClip
		sequence 0
		frame 2
	}

	--label
	--{
		--area 210 692 271 30
		--bam "DNDLOGO"
		--scaleToClip
	--}

	button
	{
		enabled "getTutorialEnabled()"
		bam GUISTDRC
		sequenceonce lua "Infinity_RandomNumber(0, 3)"
		ScaleToClip
		area 380 218 264 71
		pad 10 8 10 8
		text style "big_button"
		text shadow 1
		text "TUTORIAL_BUTTON"
		action 
		"
			Infinity_PopMenu();
			startEngine:OnTutorialButtonClick()
		"
	}
	button
	{
		enabled "getCampaignImportEnabled()"
		bam GUISTDRC
		sequenceonce lua "Infinity_RandomNumber(0, 3)"
		ScaleToClip
		area 380 218 264 71
		pad 10 8 10 8
		text style "big_button"
		text shadow 1
		text "IMPORT_GAME_BUTTON"
		action 
		"
			Infinity_PopMenu();
			startEngine:OnImportCharacterButtonClick();
		"
	}
	button
	{
		bam GUISTDRC
		sequenceonce lua "Infinity_RandomNumber(0, 3)"
		ScaleToClip
		area 380 289 264 71
		pad 10 8 10 8
		text style "big_button"
		text shadow 1
		text "NEW_GAME_BUTTON"
		action "Infinity_PopMenu(); startEngine:OnNewGameButtonClick();"
	}
	button
	{
		bam GUISTDRC
		sequenceonce lua "Infinity_RandomNumber(0, 3)"
		ScaleToClip
		area 380 360 264 71
		pad 10 8 10 8
		text style "big_button"
		text shadow 1
		text "LOAD_GAME_BUTTON"
		action "Infinity_PopMenu(); startEngine:OnLoadGameButtonClick()"
	}
	button
	{
		bam GUISTDRC
		sequenceonce lua "Infinity_RandomNumber(0, 3)"
		ScaleToClip
		area 380 431 264 71
		pad 10 8 10 8
		text style "big_button"
		text shadow 1
		text "PREGENERATE_BUTTON"
		action "Infinity_PopMenu(); startEngine:OnPreGenerateButtonClick()"
	}
	button
	{
		bam GUISTDRC
		sequenceonce lua "Infinity_RandomNumber(0, 3)"
		ScaleToClip
		area 380 502 264 71
		sequence lua "getCampaignButtonSequence()"
		pad 10 8 10 8
		text style "big_button"
		text shadow 1
		text "OPTIONS_BUTTON"
		action "
			Infinity_TransitionMenu('START_OPTIONS')
			optionsScreen:SetEngineState(1)
			startEngine:OnOptionsButtonClick()
			lastStartMenu = 'START_SP'
		"
	}
	button
	{
		on escape
		bam GUISTDRC
		sequenceonce lua "Infinity_RandomNumber(0, 3)"
		ScaleToClip
		area 380 606 264 71
		sequence lua "getCampaignButtonSequence()"
		pad 10 8 10 8
		text style "big_button"
		text shadow 1
		text "BACK_BUTTON"
		action "startEngine:SetEngineState(0); Infinity_TransitionMenu('START')"
	}
	movie
	{
		enabled "startEngine:GetCampaign() == const.START_CAMPAIGN_SOD"
		name "flames2"
		area -132 252 512 512
		loop
		respectClipping
	}
	label
	{
		area 844 706 147 35
		text style "normal"
		text align center center
		text lua "CBaldurChitin:GetVersionString()"
	}

}
`
OptionsButtons = 
{
	{text = "CREDITS_BUTTON", menu = "CREDITS", sequence = 0},
	{text = "GAMEPLAY_BUTTON", menu = "OPTIONS_GAMEPLAY", sequence = 0}, 
	{text = "GRAPHICS_BUTTON", menu = "OPTIONS_GRAPHICS", sequence = 1}, 
	{text = "LANGUAGE_BUTTON", menu = "OPTIONS_LANGUAGE", sequence = 0}, 
	{text = "MOVIES_BUTTON", menu = "", sequence = 2}, 
	{text = "SOUND_BUTTON", menu = "OPTIONS_SOUND", sequence = 1}, 
}
function onStartOptionClick()
	if(selectedMenuOpt == 1 and startEngine:GetCampaign() == const.START_CAMPAIGN_SOD) then
    Infinity_PushMenu( 'SODCREDIT' )
		--If in SOD, display the end credits
		--Infinity_PopMenu('-')
		--chapterScreen:StartTextScreen( "25ecred" )
		--e:SelectEngine(chapterScreen)
		selectedMenuOpt = NIL
		return
	end
	
	if OptionsButtons[selectedMenuOpt].menu ~= '' then
		Infinity_PushMenu( OptionsButtons[selectedMenuOpt].menu )
	else
		e:SelectEngine(moviesScreen)
	end
	selectedMenuOpt = NIL
end
`
menu
{
	name 'START_OPTIONS'
	align center center
	ignoreEsc
	onopen
	"
		Infinity_PlayMovie('flames','flames3')
	"
	size 1024 768
	
	label
	{
		area 0 0 1024 768
		mosaic "START"
	}

	--label
	--{
		--area 210 692 271 30
		--bam "DNDLOGO"
		--scaleToClip
	--}
	
	
	list
	{
		
		column 
		{ 
			width 100
			button
			{
				area 0 0 264 71
				bam GUISTDRC
				sequenceonce lua "rowNumber %4"
				frame lua "selectedMenuOpt == rowNumber and 1 or 0"
				align center center
			}
			button
			{
				enabled "selectedMenuOpt ~= rowNumber"
				area 0 0 264 71
				pad 10 8 10 8
				text lua "t( OptionsButtons[rowNumber].text )"
				text style "big_button"
				text shadow 1
				align center center
			}
			button
			{
				enabled "selectedMenuOpt == rowNumber"
				area 2 2 264 71
				pad 10 8 10 8
				text lua "t( OptionsButtons[rowNumber].text )"
				text style "big_button"
				text shadow 1
				align center center
			}
		}

		area 380 124 276 448		
		rowheight	71
		table		"OptionsButtons"
		var			selectedMenuOpt
		scrollbar	'GUISCRC'
		hidehighlight

		action		
		"
			onStartOptionClick()
		"
		actionUpdate "cellNumber = nil"
		
	}
	
		button
	{
		on escape
		sequenceonce lua "Infinity_RandomNumber(0, 3)"
		area 380 600 264 71
		bam GUISTDRC
		ScaleToClip
		pad 10 8 10 8
		text style "button"
		text shadow 1
		text "BACK_BUTTON"
		align center center
		action
		"
			Infinity_PopMenu()
			e:SelectEngine(startEngine)
		"
	}
	movie
	{
		enabled "startEngine:GetCampaign() == const.START_CAMPAIGN_SOD"
		name "flames3"
		area -132 252 512 512
		loop
		respectClipping
	}
	label
	{
		area 844 706 147 35
		text style "normal"
		text align center center
		text lua "CBaldurChitin:GetVersionString()"
	}
}

`

function magePageInfo()
	if bookMode == 0 then -- Regular
		if characters[id].hasSorcererBook then
			return t("SPELLS_CAN_CAST_LABEL") .. ": " .. characters[id].mageDetails[currentSpellLevel].slotsRemaining .. "/" .. characters[id].mageDetails[currentSpellLevel].maxMemorized
		else
			return t("MEMORIZED_LABEL") .. ": " .. #bottomSpells .. "/" .. characters[id].mageDetails[currentSpellLevel].maxMemorized
		end
	elseif bookMode == 1 then -- Sequencer/Contingency
		return t("SPELLS_LABEL") .. " :" .. #bottomSpells .. "/" .. #bottomSpellsPlaceHolder
	end
	return ""
end

contingencyDescription = 0

function mageBookTitle()
	if bookMode == 1 and mageBookStrings[contingencyResRef] then
		return t(mageBookStrings[contingencyResRef].title)
	end
	return t('MAGE_SPELLS_TITLE')
end
function mageBookAction()
	if bookMode == 1 and mageBookStrings[contingencyResRef] then
		return t(mageBookStrings[contingencyResRef].action)
	end
	return characters[id].name
end

function makeBlankTable(num)
	local out = {}
	for i = 1,num do
		table.insert(out, {})
	end
	return out
end

function contingencyComplete()
	if showContingency then
		return #bottomSpells == #bottomSpellsPlaceHolder and (currentContingencyCondition or 0) > 0 and (currentContingencyTarget or 0) > 0
	end
	return #bottomSpells == #bottomSpellsPlaceHolder
end

function getSpellOpacity(num)
	if bottomSpells[num].castable == 0 then
		return 100
	end
	return 255
end

function getSpellFrame(num)
	if bottomSpells[num].castable == 1 then
		return 0
	end
	return 1
end

function getSpellHighlight(num)
	if currentSpellLevel == num then
		return 2
	end
	return 0
end

function filterMemorizedMageSpells()
	local out = {}
	currentSpellLevel = math.min(currentSpellLevel, 9)
	for k,v in pairs(characters[id].mageSpells[currentSpellLevel]) do
		for i=v.memorizedCount, 1, -1 do
			local spell = deepcopy(v)
			if(i <= v.castableCount) then
				spell.castable = 1
			else
				spell.castable = 0
			end
			table.insert(out, spell)
		end
	end
	return out
end

function tableInsert(out, v)
	if mageScreen:SpellSwappedInContingency(v.resref) then
		for key,value in pairs(contingencySwapTable) do
			value.castableCount = v.castableCount
			table.insert(out, value)
		end
	else
		table.insert(out, v)
	end
end

function filterContingencyMageSpells()
	local out = {}
	if characters[id].mageSpells ~= nil and characters[id].mageSpells[currentSpellLevel] ~= nil then
		for k,v in pairs(characters[id].mageSpells[currentSpellLevel]) do
			if v.castableCount > 0 and mageScreen:SpellAllowedForContingency(v.level, v.resref) then
				tableInsert(out, v)
			end
		end
	end
	if characters[id].priestSpells ~= nil and characters[id].priestSpells[currentSpellLevel] ~= nil then
		for k,v in pairs(characters[id].priestSpells[currentSpellLevel]) do
			if v.castableCount > 0 and mageScreen:SpellAllowedForContingency(v.level, v.resref) then
				tableInsert(out, v)
			end
		end
	end
	return out
end

function findFirstDifferenceInSpellList(oldList, newList)
	local ret = -1
	local spellIndex = 1

	if oldList ~= nil and newList ~= nil then
		while oldList[spellIndex] ~= nil do
			if newList[spellIndex] == nil then
				ret = spellIndex
				break
			end
			if oldList[spellIndex].icon ~= newList[spellIndex].icon then
				ret = spellIndex
				break
			end
			spellIndex = spellIndex + 1
		end
		if oldList[spellIndex] == nil and newList[spellIndex] ~= nil then
			ret = spellIndex
		end
	end

	return ret
end

showMageMemorizationFlash = false

function refreshMageBook()
	if currentSpellLevel == nil then
		currentSpellLevel = 1
	end
	if bookMode == 0 then
		if characters[id].hasMageBook then
			bookSpells = characters[id].mageSpells[currentSpellLevel]
			newBottomSpells = filterMemorizedMageSpells()
			bottomSpells = newBottomSpells
			bottomSpellsPlaceHolder = makeBlankTable(characters[id].mageDetails[currentSpellLevel].maxMemorized)
		else
			bookSpells = characters[id].mageSpells[currentSpellLevel]
			bottomSpells = {}
			bottomSpellsPlaceHolder = {}
		end
	elseif bookMode == 1 then
		bookSpells = filterContingencyMageSpells()
		bottomSpells = sequencerSpells
		bottomSpellsPlaceHolder = makeBlankTable(contingencyMaxSpells)
		contingencyDescription = mageBookStrings[contingencyResRef].tip
	end
end

function setMageBookLevel(num, noSound)
	currentBookSpell = 0
	if noSound ~= true and num ~= currentSpellLevel then
		Infinity_PlaySound('GAM_05')
	end
	currentSpellLevel = num
	mageScreen:SetSpellLevel(num - 1)
	refreshMageBook()
end

currentAnimationID = 1
updateCounterMemorizationSparkles = 1

function updateMemorizationSparkles()
	local sparkleNumber = 1
	updateCounterMemorizationSparkles = updateCounterMemorizationSparkles + 1
	if updateCounterMemorizationSparkles > 2 then
		updateCounterMemorizationSparkles = 1
		for sparkleNumber = 1, #(memorizationFlashes), 1 do
			if memorizationFlashes[sparkleNumber][1] == true then
				memorizationFlashes[sparkleNumber][2] = memorizationFlashes[sparkleNumber][2] + 1
				if memorizationFlashes[sparkleNumber][2] > 7 then
					memorizationFlashes[sparkleNumber][1] = false
					memorizationFlashes[sparkleNumber][2] = 0
					memorizationFlashes[sparkleNumber][3] = true
				end
			end
		end
	end
end

function destroyMemorizationSparkle(instanceId)
	local ret = memorizationFlashes[instanceId][3]
	memorizationFlashes[instanceId][3] = false
	return ret
end

function showMemorizationSparkle(instanceId)
	updateMemorizationSparkles()
	return memorizationFlashes[instanceId][1]
end

function createMageMemorizationSparkle(x,y,w,h, fromList, listIndex)
	Infinity_InstanceAnimation("TEMPLATE_mageMemorizationSparkle","FLASHBR",x,y,w,h,fromList,listIndex)
	memorizationFlashes[currentAnimationID][1] = true
	memorizationFlashes[currentAnimationID][3] = false
	currentAnimationID = currentAnimationID + 1
	if currentAnimationID > #(memorizationFlashes) then
		currentAnimationID = 1
	end
end

function unmemorizingMageSpell(resref)
	createMageMemorizationSparkle(62 * (cellNumber - 1), 0, 62, 62, 'memorizedListMage', currentBottomSpell)
end

function removeMageSpell(idx)
	showMageMemorizationFlash = false
	mageScreen:UnmemorizeSpell(bottomSpells[idx].level, bottomSpells[idx].memorizedIndex)
	Infinity_PlaySound('GAM_44')
end

function spellTooltip(spells, cellNumber)
	local idx = 4 * (currentBookSpell - 1) + cellNumber
	if spells[idx] then
		return Infinity_FetchString(spells[idx].name)
	end
	return ''
end

function showSpellDetails(spell)
	if(spell.isPlaceholder) then
		return
	end
	currentSpell = spell
	Infinity_PushMenu("SPELL_DESCRIPTION")
end

memorizationFlashes =
{
	{false, 0, false},
	{false, 0, false},
	{false, 0, false},
	{false, 0, false},
	{false, 0, false},
	{false, 0, false},
	{false, 0, false},
	{false, 0, false},
	{false, 0, false},
	{false, 0, false}
}
`
menu
{
	name 'MAGE'
	align center center
	greyscale lua "mageBookEnabled == false"

	onOpen
	"
		pushSidebars()
		showMageMemorizationFlash = false
		setMageBookLevel(1, true)
		currentAnimationID = 1
		updateCounterMemorizationSparkles = 1
		if bookMode == 1 then
			Infinity_PopMenu()
			Infinity_PushMenu('MAGE_CHOOSE_CONTINGENCY')
		end
		TT_BuildTitleData('MAGE_SPELLS_TITLE', 366, true)
		TT_CreateTitleChars('MAGE_SPELLS_TITLE', 'TT_MAGEBOOK', 42, 'TEMPLATE_titlechar_MAGEBOOK')
	"
	onClose
	"
		popSidebars()
		TT_DestroyTitleChars('MAGE_SPELLS_TITLE', 'TEMPLATE_titlechar_MAGEBOOK')
	"
	button
	{
		enabled "CurrentlyInGame()"
		on escape
		action
		"
			--Return to world screen on escape
			e:SelectEngine(worldScreen)
		"
	}

	label
	{
		area 0 0 864 710
		mosaic GUIMGB
	}
	template
    {
        label
        {
            enabled "true"
            ignoreEvents
            area 0 0 -1 -1
            bam "TTREALMS"
            sequence lua "TT_TitleData['MAGE_SPELLS_TITLE'][instanceId].seq"
            align center center
        }
        name "TEMPLATE_titlechar_MAGEBOOK"
    }
	text
    {
        name "TT_MAGEBOOK"
		area		248 52 366 42
		--text lua	"mageBookTitle()"
		--text style "title"
    }
	button -- change book for clerics/mages
	{
		enabled "characters[id].hasClericBook"
		area		136 128 62 59
		bam 		'GUMPBUTX'
		sequence 	2
		action 
		"
		if characters[id].hasClericBook then
			e:GetActiveEngine():OnLeftPanelButtonClick(6) 
		end
		"
	}
	label
	{
		area 		211 122 446 34
		text lua	"mageBookAction()"
		text style	"label"
		text shadow 1
	}
	button
	{
		area		243 157 42 42
		bam		GUIPRTC
 		ScaleToClip
		frame lua "getSpellHighlight(1)"
		sequence	0
		enabled		"maxMagePage > 0"
		action		"setMageBookLevel(1)"
	}
	button
	{
		area		285 157 42 42
		bam		GUIPRTC
 		ScaleToClip
		frame lua "getSpellHighlight(2)"
		sequence	1
		enabled		"maxMagePage > 1"
		action		"setMageBookLevel(2)"
	}
	button
	{
		area		327 157 42 42
		bam		GUIPRTC
 		ScaleToClip
		frame lua "getSpellHighlight(3)"
		sequence	2
		enabled		"maxMagePage > 2"
		action		"setMageBookLevel(3)"
	}
	button
	{
		area		369 157 42 42
		bam		GUIPRTC
 		ScaleToClip
		frame lua "getSpellHighlight(4)"
		sequence	3
		enabled		"maxMagePage > 3"
		action		"setMageBookLevel(4)"
	}
	button
	{
		area		411 157 42 42
		bam		GUIPRTC
 		ScaleToClip
		frame lua "getSpellHighlight(5)"
		sequence	4
		enabled		"maxMagePage > 4"
		action		"setMageBookLevel(5)"
	}
	button
	{
		area		453 157 42 42
		bam		GUIPRTC
 		ScaleToClip
		frame lua "getSpellHighlight(6)"
		sequence	5
		enabled		"maxMagePage > 5"
		action		"setMageBookLevel(6)"
	}
	button
	{
		area		495 157 42 42
		bam		GUIPRTC
 		ScaleToClip
		frame lua "getSpellHighlight(7)"
		sequence	6
		enabled		"maxMagePage > 6"
		action		"setMageBookLevel(7)"
	}
	button
	{
		area		537 157 42 42
		bam		GUIPRTC
 		ScaleToClip
		frame lua "getSpellHighlight(8)"
		sequence	7
		enabled		"maxMagePage > 7"
		action		"setMageBookLevel(8)"
	}
	button
	{
		area		579 157 42 42
		bam		GUIPRTC
 		ScaleToClip
		frame lua "getSpellHighlight(9)"
		sequence	8
		enabled		"maxMagePage > 8"
		action		"setMageBookLevel(9)"
	}
	button
	{
		area 152 208 56 54
		bam GUIMGC
		sequence 0
		frame lua "getMovingFrame('mageTurnLeft')==1 and 1 or 0"
		action
		"
			if currentSpellLevel > 1 then
				setMageBookLevel(currentSpellLevel - 1)
			end
		"
	}
	button
	{
		on A
		action
		"
			if currentSpellLevel > 1 then
				getClick(Infinity_GetFrameCounter(), 'mageTurnLeft')
				setMageBookLevel(currentSpellLevel - 1)
			end
		"
	}
	button
	{
		area 657 208 56 54
		bam GUIMGC
		sequence 1
		frame lua "getMovingFrame('mageTurnRight')==1 and 1 or 0"
		action
		"
			if currentSpellLevel < maxMagePage then
				setMageBookLevel(currentSpellLevel + 1)
			end	
		"
	}
	button
	{
		on D
		action
		"
			if currentSpellLevel < maxMagePage then						
				getClick(Infinity_GetFrameCounter(), 'mageTurnRight')
				setMageBookLevel(currentSpellLevel + 1)
			end
		"
	}
	template
	{
		label
		{
			enabled "showMemorizationSparkle(instanceId)"
			ignoreEvents
			area 0 0 45 42
			bam FLASHBR
			usealpha lua "true"
			frame lua "memorizationFlashes[instanceId][2]"
			align center center
		}
		name "TEMPLATE_mageMemorizationSparkle"
	}
	text
	{
		area 208 226 170 24
		text lua "t(JFStrings.Level_String) .. ' ' .. currentSpellLevel .. ' ' .. t(JFStrings.Spells_String)"
		text style "bold_parchment"
	}
	text
	{
		area 176 266 240 26
		text lua "Infinity_FetchString(11944)"
		text style "bold_parchment"
	}
	list
	{
		column
		{
			width 25
			label
			{
				enabled "bookSpells[4 * rowNumber - 3] ~= nil"
				area 0 0 -1 -1
				bam lua "bookSpells[4 * rowNumber - 3].icon"
				align center center
			}
		}
		column
		{
			width 25
			label
			{
				enabled "bookSpells[4 * rowNumber - 2] ~= nil"
				area 0 0 -1 -1
				bam lua "bookSpells[4 * rowNumber - 2].icon"
				align center center
			}
		}
		column
		{
			width 25
			label
			{
				enabled "bookSpells[4 * rowNumber - 1] ~= nil"
				area 0 0 -1 -1
				bam lua "bookSpells[4 * rowNumber - 1].icon"
				align center center
			}
		}
		column
		{
			width 25
			label
			{
				enabled "bookSpells[4 * rowNumber] ~= nil"
				area 0 0 -1 -1
				bam lua "bookSpells[4 * rowNumber].icon"
				align center center
			}
		}
		area 462 300 230 268
		name "bookListMage"
		scrollbar 'GUIKNSBR'
		rowheight 52
		hidehighlight
		table "makeTable(math.ceil(#bookSpells / 4))"
		var currentBookSpell
		action
		"
			local idx = 4 * (currentBookSpell - 1) + cellNumber
			if bookSpells[idx] and #bottomSpells < #bottomSpellsPlaceHolder then
				createMageMemorizationSparkle(52 * (cellNumber - 1), 0, 52, 52, 'bookListMage', currentBookSpell)
				Infinity_PlaySound('GAM_24')
				showMageMemorizationFlash = true
				mageScreen:MemorizeSpell(bookSpells[idx].level, bookSpells[idx].index)
			end
		"
		actionAlt
		"
			local idx = 4 * (currentBookSpell - 1) + cellNumber
			if bookSpells[idx] then
				showSpellDetails(bookSpells[idx])
			end
		"
		actionEnter	"currentBookSpell = mouseoverRow"
		actionExit	"currentBookSpell = 0"
	}
	text
	{
		area 462 300 52 52
		ignoreEvents
		tooltip lua "spellTooltip(bookSpells, 1)"
	}
	text
	{
		area 514 300 52 52
		ignoreEvents
		tooltip lua "spellTooltip(bookSpells, 2)"
	}
	text
	{
		area 566 300 52 52
		ignoreEvents
		tooltip lua "spellTooltip(bookSpells, 3)"
	}
	text
	{
		area 618 300 52 52
		ignoreEvents
		tooltip lua "spellTooltip(bookSpells, 4)"
	}
	text
	{
		area 462 352 52 52
		ignoreEvents
		tooltip lua "spellTooltip(bookSpells, 1)"
	}
	text
	{
		area 514 352 52 52
		ignoreEvents
		tooltip lua "spellTooltip(bookSpells, 2)"
	}
	text
	{
		area 566 352 52 52
		ignoreEvents
		tooltip lua "spellTooltip(bookSpells, 3)"
	}
	text
	{
		area 618 352 52 52
		ignoreEvents
		tooltip lua "spellTooltip(bookSpells, 4)"
	}
	text
	{
		area 462 404 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bookSpells, 1)"
	}
	text
	{
		area 514 404 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bookSpells, 2)"
	}
	text
	{
		area 566 404 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bookSpells, 3)"
	}
	text
	{
		area 618 404 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bookSpells, 4)"
	}
	text
	{
		area 462 456 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bookSpells, 1)"
	}
	text
	{
		area 514 456 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bookSpells, 2)"
	}
	text
	{
		area 566 456 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bookSpells, 3)"
	}
	text
	{
		area 618 456 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bookSpells, 4)"
	}
	text
	{
		area 462 508 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bookSpells, 1)"
	}
	text
	{
		area 514 508 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bookSpells, 2)"
	}
	text
	{
		area 566 508 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bookSpells, 3)"
	}
	text
	{
		area 618 508 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bookSpells, 4)"
	}
	text
	{
		area 462 560 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bookSpells, 1)"
	}
	text
	{
		area 514 560 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bookSpells, 2)"
	}
	text
	{
		area 566 560 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bookSpells, 3)"
	}
	text
	{
		area 618 560 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bookSpells, 4)"
	}
	text
	{
		area 450 272 230 24
		text lua "Infinity_FetchString(11945)"
		text style "bold_parchment"
		text align right top
	}
	list
	{
		column
		{
			width 25
			label
			{
				enabled "bottomSpellsPlaceHolder[4 * rowNumber - 3] ~= nil"
				area 0 0 -1 -1
				bam SPELFRMS
				frame lua "getSpellFrame(4 * rowNumber - 3)"
				align center center
			}
			label
			{
				enabled "bottomSpells[4 * rowNumber - 3] ~= nil"
				area 0 0 -1 -1
				bam lua "bottomSpells[4 * rowNumber - 3].icon"
				opacity lua "getSpellOpacity(4 * rowNumber - 3)"
				align center center
			}
		}
		column
		{
			width 25
			label
			{
				enabled "bottomSpellsPlaceHolder[4 * rowNumber - 2] ~= nil"
				area 0 0 -1 -1
				bam SPELFRMS
				frame lua "getSpellFrame(4 * rowNumber - 2)"
				align center center
			}
			label
			{
				enabled "bottomSpells[4 * rowNumber - 2] ~= nil"
				area 0 0 -1 -1
				bam lua "bottomSpells[4 * rowNumber - 2].icon"
				opacity lua "getSpellOpacity(4 * rowNumber - 2)"
				align center center
			}
		}
		column
		{
			width 25
			label
			{
				enabled "bottomSpellsPlaceHolder[4 * rowNumber - 1] ~= nil"
				area 0 0 -1 -1
				bam SPELFRMS				
				frame lua "getSpellFrame(4 * rowNumber - 1)"
				align center center
			}
			label
			{
				enabled "bottomSpells[4 * rowNumber - 1] ~= nil"
				area 0 0 -1 -1
				bam lua "bottomSpells[4 * rowNumber - 1].icon"
				opacity lua "getSpellOpacity(4 * rowNumber - 1)"
				align center center
			}
		}
		column
		{
			width 25
			label
			{
				enabled "bottomSpellsPlaceHolder[4 * rowNumber] ~= nil"
				area 0 0 -1 -1
				bam SPELFRMS
				frame lua "getSpellFrame(4 * rowNumber)"
				align center center
			}
			label
			{
				enabled "bottomSpells[4 * rowNumber] ~= nil"
				area 0 0 -1 -1
				bam lua "bottomSpells[4 * rowNumber].icon"
				opacity lua "getSpellOpacity(4 * rowNumber)"
				align center center
			}
		}
		area 166 292 260 284
		name "memorizedListMage"
		scrollbar 'GUIKNSBR'
		rowheight 62
		hidehighlight
		table "makeTable(math.ceil(#bottomSpellsPlaceHolder / 4))"
		var currentBottomSpell
		action
		"
			local idx = 4 * (currentBottomSpell - 1) + cellNumber
			if bottomSpells[idx] then
				if bottomSpells[idx].memorizedCount > bottomSpells[idx].castableCount or Infinity_GetOption(41, 9) == 0 then
					removeMageSpell(idx)
				else
					popup2Button(11824, 'DELETE_BUTTON', function() removeMageSpell(idx) end)
				end
			end
		"
		actionAlt
		"
			local idx = 4 * (currentBottomSpell - 1) + cellNumber
			if bottomSpells[idx] then
				showSpellDetails(bottomSpells[idx])
			end
		"
		actionEnter	"currentBookSpell = mouseoverRow"
		actionExit	"currentBookSpell = 0"
	}
	label
	{
		enabled "not (#characters[id].contingencySpells > 0 or #characters[id].sequencerSpells > 0)"
		area 272 647 321 44
		text lua "magePageInfo()"
		text style "label"
		bam 'BG_UND'
		sequence 3
	}
	label
	{
		enabled "(#characters[id].contingencySpells > 0 or #characters[id].sequencerSpells > 0)"
		area 176 647 321 44
		text lua "magePageInfo()"
		text style "label"
		bam 'BG_UND'
		sequence 3
	}
	text
	{
		area 166 292 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bottomSpells, 1)"
	}
	text
	{
		area 216 292 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bottomSpells, 2)"
	}
	text
	{
		area 278 292 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bottomSpells, 3)"
	}
	text
	{
		area 340 292 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bottomSpells, 4)"
	}
	text
	{
		area 154 354 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bottomSpells, 1)"
	}
	text
	{
		area 216 354 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bottomSpells, 2)"
	}
	text
	{
		area 278 354 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bottomSpells, 3)"
	}
	text
	{
		area 340 354 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bottomSpells, 4)"
	}
	text
	{
		area 154 416 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bottomSpells, 1)"
	}
	text
	{
		area 216 416 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bottomSpells, 2)"
	}
	text
	{
		area 278 416 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bottomSpells, 3)"
	}
	text
	{
		area 340 416 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bottomSpells, 4)"
	}
	text
	{
		area 154 478 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bottomSpells, 1)"
	}
	text
	{
		area 216 478 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bottomSpells, 2)"
	}
	text
	{
		area 278 478 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bottomSpells, 3)"
	}
	text
	{
		area 340 478 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bottomSpells, 4)"
	}
	text
	{
		area 154 540 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bottomSpells, 1)"
	}
	text
	{
		area 216 540 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bottomSpells, 2)"
	}
	text
	{
		area 278 540 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bottomSpells, 3)"
	}
	text
	{
		area 340 540 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bottomSpells, 4)"
	}
	text
	{
		area 154 602 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bottomSpells, 1)"
	}
	text
	{
		area 216 602 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bottomSpells, 2)"
	}
	text
	{
		area 278 602 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bottomSpells, 3)"
	}
	text
	{
		area 340 602 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bottomSpells, 4)"
	}
	button
	{
		area 516 647 203 44
		enabled "(#characters[id].contingencySpells > 0 or #characters[id].sequencerSpells > 0)"
		bam			GUIINVHC
		ScaleToClip
		sequence	1
		text "CONTINGENCY_BUTTON"
		text style "button"
		text shadow 1
		action "Infinity_PushMenu('MAGE_CONTINGENCY')"
	}
}
`
function getCastableCount(idx)
	local nb = bookSpells[idx].castableCount
	if nb <= 1 then
		return 0
	end
	return nb
end

function getIconName(spell)
	local icon = spell.icon
	local iconB = icon:sub(1, -2) .. 'B'
	for _, entry in ipairs(Infinity_GetFilesOfType("BAM")) do
		if entry[1] == iconB then
			return iconB
		end
	end
	return icon
end
`
menu
{
	name 'MAGE_CHOOSE_CONTINGENCY'
	align center center
	ignoreesc
	modal
	onOpen
	"
		currentContingencyCondition = 0
		currentContingencyTarget = 0
		TT_BuildTitleData(mageBookTitle(), 606, true)
		TT_CreateTitleChars(mageBookTitle(), 'TT_CHOOSE_CONTINGENCY', 44, 'TEMPLATE_titlechar_CHOOSE_CONTINGENCY')
	"
	onclose	"TT_DestroyTitleChars(mageBookTitle(), 'TEMPLATE_titlechar_CHOOSE_CONTINGENCY')"
	label
	{
		area 0 0 716 710
		mosaic GUIMGCP
	}
	template
    {
        label
        {
            enabled "true"
            ignoreEvents
            area 0 0 -1 -1
            bam "TTREALMS"
            sequence lua "TT_TitleData[mageBookTitle()][instanceId].seq"
            align center center
        }
        name "TEMPLATE_titlechar_CHOOSE_CONTINGENCY"
    }
	label
    {
        name "TT_CHOOSE_CONTINGENCY"
		area 52 48 606 44
		--text lua "mageBookTitle()"
		--text style "title"
    }
	label
	{
		area 70 438 110 40
		text lua "t('LEVEL_LABEL') .. ' ' .. currentSpellLevel"
		text style "big_button"
		text shadow 1
	}
	list
	{
		column
		{
			width 25
			button
			{
				area 6 5 52 52
				bam GUISTMSC
				sequenceonce lua "getRandomSequence(rowNumber, 9)"
				icon lua "getIconName(bookSpells[rowNumber])"
				count lua "getCastableCount(rowNumber)"
				align center center
			}
		}
		column
		{
			width 75
			label
			{
				area 10 0 -1 -1
				text lua "Infinity_FetchString(bookSpells[rowNumber].name)"
				text style "normal"
				text align left center
			}
		}
		area 26 154 238 260
		scrollbar 'GUISTSCR'
		rowheight 58
		hidehighlight
		table "bookSpells"
		var currentBookSpell
		action
		"
			contingencyDescription = mageBookStrings[contingencyResRef].tip
			if bookSpells[currentBookSpell] then
				if cellNumber == 1 and #bottomSpells < #bottomSpellsPlaceHolder then
					Infinity_PlaySound('GAM_24')
					mageScreen:SequenceSpell(bookSpells[currentBookSpell].resref, bookSpells[currentBookSpell].masterResref)
				end
				contingencyDescription = bookSpells[currentBookSpell].description
			end
		"
		actionAlt
		"
			if bookSpells[currentBookSpell] then
				contingencyDescription = bookSpells[currentBookSpell].description
			end
		"
	}
	button
	{
		area 190 430 52 52
		bam GUIBTACT
		sequence 1
		clickable lua "currentSpellLevel > 1"
		action
		"
			setMageBookLevel(currentSpellLevel - 1)
		"
	}
	button
	{
		area 242 430 52 52
		bam GUIBTACT
		sequence 2
		clickable lua "currentSpellLevel < maxMagePage"
		action
		"
			setMageBookLevel(currentSpellLevel + 1)
		"
	}

	list
	{
		column
		{
			width 100
			label
			{
				area 0 0 -1 -1
				bam GUISTMSC
				frame lua "getIconName(bottomSpells[rowNumber]) and 2 or 0"
				sequenceonce lua "getRandomSequence(rowNumber, 9)"
				align center center
			}
		}
		area 322 426 311 60
		rowwidth 70
		hidehighlight
		table "bottomSpellsPlaceHolder"
	}
	list
	{
		column
		{
			width 100
			label
			{
				area 0 0 -1 -1
				bam lua "getIconName(bottomSpells[rowNumber])"
				align center center
			}
		}
		area 322 426 311 60
		enabled "#bottomSpells ~= 0"
		rowwidth 70
		hidehighlight
		table "bottomSpells"
		var currentBottomSpell
		action
		"
			if bottomSpells[currentBottomSpell] then
				Infinity_PlaySound('GAM_44')
				mageScreen:UnSequenceSpell(bottomSpells[currentBottomSpell].resref, bottomSpells[currentBottomSpell].masterResref)
				table.remove(sequencerSpells, currentBottomSpell)
				bottomSpells = sequencerSpells
			end
		"
	}
	label
	{
		enabled "showContingency == true"
		area 284 148 196 34
		text "CONDITION_NORMAL"
		text style "label"
	}
	list
	{
		column
		{
			width 100
			label
			{
				enabled "rowNumber ~= currentContingencyCondition and rowNumber ~= currentContingencyCondition_hover"
				area 0 0 -1 -1
				text lua "Infinity_FetchString(contingencyConditions[rowNumber].strref)"
				text style "normal"
				text color B
			}
			label
			{
				enabled "rowNumber == currentContingencyCondition and rowNumber ~= currentContingencyCondition_hover"
				area 0 0 -1 -1
				text lua "Infinity_FetchString(contingencyConditions[rowNumber].strref)"
				text style "normal"
				text color S
			}
			label
			{
				enabled "rowNumber == currentContingencyCondition_hover"
				area 0 0 -1 -1
				text lua "Infinity_FetchString(contingencyConditions[rowNumber].strref)"
				text style "normal"
				text color H
			}
		}
		enabled "showContingency == true"
		area 288 182 192 232
		rowheight 32
		hidehighlight
		table "contingencyConditions"
		var currentContingencyCondition
		scrollbar 'GUISCRC'
		action
		"
			contingencyDescription = contingencyConditions[currentContingencyCondition].desc
		"
		actionEnter	"currentContingencyCondition_hover = mouseoverRow"
		actionExit	"currentContingencyCondition_hover = 0"
	}
	label
	{
		enabled "showContingency == true"
		area 494 148 196 34
		text "TARGET_NORMAL"
		text style "label"
	}
	list
	{
		column
		{
			width 100
			label
			{
				enabled "rowNumber ~= currentContingencyTarget and rowNumber ~= currentContingencyTarget_hover"
				area 0 0 -1 -1
				text lua "Infinity_FetchString(contingencyTargets[rowNumber].strref)"
				text style "normal"
				text color B
			}
			label
			{
				enabled "rowNumber == currentContingencyTarget and rowNumber ~= currentContingencyTarget_hover"
				area 0 0 -1 -1
				text lua "Infinity_FetchString(contingencyTargets[rowNumber].strref)"
				text style "normal"
				text color S
			}
			label
			{
				enabled "rowNumber == currentContingencyTarget_hover"
				area 0 0 -1 -1
				text lua "Infinity_FetchString(contingencyTargets[rowNumber].strref)"
				text style "normal"
				text color H
			}
		}
		enabled "showContingency == true"
		area 500 182 198 232
		rowheight 32
		hidehighlight
		table "contingencyTargets"
		var currentContingencyTarget
		scrollbar 'GUISCRC'
		action
		"
			contingencyDescription = contingencyTargets[currentContingencyTarget].desc
		"
		actionEnter	"currentContingencyTarget_hover = mouseoverRow"
		actionExit	"currentContingencyTarget_hover = 0"
	}
	text
	{
		area 40 500 636 106
		text lua "Infinity_FetchString(contingencyDescription)"
		text style "normal"
		scrollbar 'GUISCRC'
	}
	button
	{
		on return
		clickable lua "contingencyComplete()"
		area 414 640 162 30
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text "DONE_BUTTON"
		text style "button"
		text shadow 1
		action
		"
			Infinity_PopMenu()
			mageScreen:DoneSequencingSpells()
			e:SelectEngine(worldScreen)
		"
	}
	button
	{
		on escape
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		area 130 640 162 30
		text style "button"
		text shadow 1
		text "CANCEL_BUTTON"
		action
		"
			Infinity_PopMenu()
			mageScreen:CancelSequencingSpells()
			e:SelectEngine(worldScreen)
		"
	}
}
`
function incrSpellDescriptionKnown(incr)
	local nextSpell = bookSpells[currentSpell.index + incr + 1]

	if(nextSpell ~= nil) then
		currentSpell = nextSpell
		return
	end

	if(incr > 0) then
		currentSpell = bookSpells[1]
	else
		currentSpell = bookSpells[#bookSpells]
	end
end
function getNextDifferentMemorizedSpell(incr, startIdx, matchIdx)
	local k = startIdx
	while (k > 0 and k <= #bottomSpells) do
		local v = bottomSpells[k]
		if(v.memorizedIndex ~= matchIdx and not v.isPlaceholder) then
			return v
		end
		k = k + incr
	end
	return nil
end
function incrSpellDescriptionMemorized(incr)
	local nextSpell = getNextDifferentMemorizedSpell(incr, currentSpell.memorizedDisplayIdx, currentSpell.memorizedIndex)

	if(nextSpell ~= nil) then
		currentSpell = nextSpell
		return
	end

	if(incr > 0) then
		currentSpell = getNextDifferentMemorizedSpell(incr, 1, -1)
	else
		currentSpell = getNextDifferentMemorizedSpell(incr, #bottomSpells, -1)
	end
end
function incrSpellDescription(incr)
	if(currentSpell.memorizedDisplayIdx == nil) then
		incrSpellDescriptionKnown(incr)
	else
		incrSpellDescriptionMemorized(incr)
	end
end
function isWizSpellMode()
	return e:GetActiveEngine() == e:GetEngineWizSpell()
end
function inSpellBook()
	return e:GetActiveEngine() == e:GetEngineWizSpell() or e:GetActiveEngine() == e:GetEnginePriestSpell()
end

showEraseButton = true
`
menu
{
	name "SPELL_DESCRIPTION"
	align center center
	modal
	onOpen
	"
		if(e:GetActiveEngine() == worldScreen) then
			worldScreenWasPaused = worldScreen:CheckIfPaused()
			if worldScreenWasPaused == false then
				worldScreen:TogglePauseGame(true)
			end
		end
		showEraseButton = true
		if characters[id].hasSorcererBook then
			showEraseButton = false
		end
	"
	onClose
	"
		if(e:GetActiveEngine() == worldScreen) then
			if worldScreenWasPaused == false then
				worldScreen:TogglePauseGame(true)
			end
			worldScreenWasPaused = false
		end
	"
	label
	{
		area 0 0 456 576
		mosaic GUISPLHB
	}
	label
	{
		area 16 12 296 38
		text 16189
		text style 'label'
		text align left center
		text point 20
		text shadow 1
	}
	label
	{
		area 354 26 52 52
		icon lua "getIconName(currentSpell)"
		sequence 0
		align center center
	}
	button
	{
		enabled "inSpellBook()"
		area 312 26 26 52
		bam GUIBTACT
		frame 44
		on A
		action
		"
			incrSpellDescription(-1)
		"
	}
	button
	{
		enabled "inSpellBook()"
		area 420 26 26 52
		bam GUIBTACT
		frame 42
		on D
		action
		"
			incrSpellDescription(1)
		"
	}
	text
	{
		area 16 62 280 36
		text lua "Infinity_FetchString(currentSpell.name)"
		text shadow 1
		text style "label"
		text align left center
	}
	text
	{
		area 26 112 408 370
		text lua "Infinity_FetchString(currentSpell.description)"
		scrollbar 'GUISCRC'
		text style "normal"
	}
	button
	{
		on escape
		area 264 510 162 30
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text "DONE_BUTTON"
		text style "button"
		text shadow 1
		action "Infinity_PopMenu('SPELL_DESCRIPTION')"
	}
	label --under button thingy
	{
		area 37 495 194 69
		bam 'BG_UND'
		enabled "isWizSpellMode() and showEraseButton"
	}
	button
	{
		enabled "isWizSpellMode() and showEraseButton"
		area 48 510 162 30
		text "REMOVE_BUTTON"
		text style "button"
		text shadow 1
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		action "popup2Button(engine_mode == 0 and 24485 or 63745, 'REMOVE_BUTTON', function() mageScreen:EraseKnownSpell(currentSpell.resref); Infinity_PopMenu('SPELL_DESCRIPTION') end)"
	}
}
`
function refreshMageContingency()
	preparedSpells = {}
	for k, v in pairs(characters[id].contingencySpells) do
		table.insert(preparedSpells, v)
	end
	for k, v in pairs(characters[id].sequencerSpells) do
		table.insert(preparedSpells, v)
	end
end
`
menu
{
	name 'MAGE_CONTINGENCY'
	align center center
	modal
	onOpen 
	"
	refreshMageContingency()
	TT_BuildTitleData('CONTINGENCY_TITLE', 606, true)
	TT_CreateTitleChars('CONTINGENCY_TITLE', 'TT_CONTINGENCY', 42, 'TEMPLATE_titlechar_CONTINGENCY')
	"
	onclose	"TT_DestroyTitleChars('CONTINGENCY_TITLE', 'TEMPLATE_titlechar_CONTINGENCY')"
	label
	{
		area 0 0 716 710
		mosaic GMPVCHRB
	}
	template
    {
        label
        {
            enabled "true"
            ignoreEvents
            area 0 0 -1 -1
            bam "TTREALMS"
            sequence lua "TT_TitleData['CONTINGENCY_TITLE'][instanceId].seq"
            align center center
        }
        name "TEMPLATE_titlechar_CONTINGENCY"
    }
	label --Title
    {
        name "TT_CONTINGENCY"
		area 52 48 606 42
		--text "CONTINGENCY_TITLE"
		--text style "title"
    }
	label
	{
		area 188 136 360 48
		text "SPELLS_PREPARED_LABEL"
		text style "label"
		text shadow 1
		text align center center
	}
	label
	{
		area 220 268 124 32
		text "CONDITION_LABEL"
		text style "label"
		text align left center
		text color L
	}
	label
	{
		area 362 268 132 32
		text "TARGET_LABEL"
		text style "label"
		text align left center
		text color L
	}
	label
	{
		area 506 268 146 32
		text "SPELL_LABEL"
		text style "label"
		text align left center
		text color L
	}

	list
	{
		column
		{
			width 25
			label
			{
				area 0 0 -1 -1
				text lua "t(mageBookStrings[preparedSpells[rowNumber].resref].title)"
				text style "normal_parchment"
				text font "STONESML"
				align left center
			}
		}
		column
		{
			width 25
			label
			{
				area 0 0 -1 -1
				text lua "Infinity_FetchString(preparedSpells[rowNumber].condition)"
				text style "normal_parchment"
				align left center
			}
		}
		column
		{
			width 25
			label
			{
				area 0 0 -1 -1
				text lua "Infinity_FetchString(preparedSpells[rowNumber].target)"
				text style "normal_parchment"
				align left center
			}
		}
		column
		{
			width 5
			label
			{
				enabled "preparedSpells[rowNumber].spells[1] ~= nil"
				area 0 0 -1 -1
				bam lua "preparedSpells[rowNumber].spells[1].icon"
				align center center
			}
		}
		column
		{
			width 5
			label
			{
				enabled "preparedSpells[rowNumber].spells[2] ~= nil"
				area 0 0 -1 -1
				bam lua "preparedSpells[rowNumber].spells[2].icon"
				align center center
			}
		}
		column
		{
			width 5
			label
			{
				enabled "preparedSpells[rowNumber].spells[3] ~= nil"
				area 0 0 -1 -1
				bam lua "preparedSpells[rowNumber].spells[3].icon"
				align center center
			}
		}
		column
		{
			width 10
			label
			{
				area 0 0 -1 -1
				text lua "'X'"
				text style "normal_parchment"
				text shadow 1
				align center center
				enabled "preparedSpells[rowNumber].dispellable"
			}
		}
		area 76 300 576 242
		rowheight	56
		hidehighlight
		table		"preparedSpells"
		var		"currentContingencySpell"
		action
		"
			if cellNumber == 7 and preparedSpells[currentContingencySpell].dispellable then
				popup2Button(engine_mode == 0 and 24398 or 32665, 'YES_BUTTON', function() mageScreen:OnDispellButtonClick(currentContingencySpell) end, 'NO_BUTTON')
			end
		"
	}

	button
	{
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		area 272 620 186 38
		text "DONE_BUTTON"
		text style "button"
		text shadow 1
		action "Infinity_PopMenu('MAGE_CONTINGENCY')"
	}
}

menu
{
	name "POPUP_DETAILS"
	align center center
	modal
	label
	{
		area 0 0 456 576
		mosaic GUISPLHB
	}
	label
	{
		area 16 12 296 38
		text lua "Infinity_FetchString(PopupDetails.title)"
		text style 'label'
		text align left center
		text point 20
		text shadow 1
	}
	text
	{
		area 16 62 280 36
		text lua "Infinity_FetchString(PopupDetails.name)"
		text shadow 1
		text style "label"
		text align left center
	}
	label
	{
		area 354 26 52 52
		icon lua "PopupDetails.icon"
		sequence 0
		align center center
	}
	text
	{
		area 26 112 408 370
		text lua "Infinity_FetchString(PopupDetails.description)"
		scrollbar 'GUISCRC'
		text style "normal"
	}
	button
	{
		on escape
		area 264 510 162 30
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text "DONE_BUTTON"
		text style "button"
		text shadow 1
		action "Infinity_PopMenu('POPUP_DETAILS')"
	}
}

`
function priestPageInfo()
	if characters[id].hasShamanBook then
		return t("SPELLS_CAN_CAST_LABEL") .. ": " .. characters[id].priestDetails[currentSpellLevel].slotsRemaining .. "/" .. characters[id].priestDetails[currentSpellLevel].maxMemorized
	else
		return t("MEMORIZED_LABEL") .. ": " .. #bottomSpells .. "/" .. characters[id].priestDetails[currentSpellLevel].maxMemorized
	end
end

function filterMemorizedPriestSpells()
	local out = {}
	currentSpellLevel = math.min(currentSpellLevel, 7)
	for k,v in pairs(characters[id].priestSpells[currentSpellLevel]) do
		for i=v.memorizedCount, 1, -1 do
			local spell = deepcopy(v)
			if(i <= v.castableCount) then
				spell.castable = 1
			else
				spell.castable = 0
			end
			table.insert(out, spell)
		end
	end
	return out
end

showPriestMemorizationFlash = false

function refreshPriestBook()
	if currentSpellLevel == nil then
		currentSpellLevel = 1
	end
	if characters[id].hasClericBook then
		bookSpells = characters[id].priestSpells[currentSpellLevel]
		newBottomSpells = filterMemorizedPriestSpells()
		bottomSpells = newBottomSpells
		bottomSpellsPlaceHolder = makeBlankTable(characters[id].priestDetails[currentSpellLevel].maxMemorized)
	elseif characters[id].hasShamanBook then
		bookSpells = characters[id].priestSpells[currentSpellLevel]
		bottomSpells = {}
		bottomSpellsPlaceHolder = {}
	else
		bookSpells = {}
		bottomSpells = {}
		bottomSpellsPlaceHolder = {}
	end
end

function setPriestBookLevel(num, noSound)
	currentBookSpell = 0
	if noSound ~= true and num ~= currentSpellLevel then
		Infinity_PlaySound('GAM_06')
	end
	currentSpellLevel = num
	refreshPriestBook()
end

function createPriestMemorizationSparkle(x,y,w,h, fromList, listIndex)
	Infinity_InstanceAnimation("TEMPLATE_priestMemorizationSparkle","FLASHBR",x,y,w,h,fromList,listIndex)
	memorizationFlashes[currentAnimationID][1] = true
	memorizationFlashes[currentAnimationID][3] = false
	currentAnimationID = currentAnimationID + 1
	if currentAnimationID > #(memorizationFlashes) then
		currentAnimationID = 1
	end
end

function unmemorizingPriestSpell(resref)
	createPriestMemorizationSparkle(62 * (cellNumber - 1), 0, 62, 62, 'memorizedListPriest', currentBottomSpell)
end

function removePriestSpell(idx)
	showPriestMemorizationFlash = false
	priestScreen:UnmemorizeSpell(bottomSpells[idx].level, bottomSpells[idx].memorizedIndex)
	Infinity_PlaySound('GAM_44')
end
`
menu
{
	name 'PRIEST'
	align center center
	greyscale lua "priestBookEnabled == false"

	onopen
	"
		showPriestMemorizationFlash = false
		pushSidebars()
		setPriestBookLevel(1, true)
		currentAnimationID = 1
		updateCounterMemorizationSparkles = 1
		TT_BuildTitleData('PRIEST_SCROLL_TITLE', 366, true)
		TT_CreateTitleChars('PRIEST_SCROLL_TITLE', 'TT_PRIESTSCROLL', 42, 'TEMPLATE_titlechar_PRIESTSCROLL')
	"
	onclose
	"
		popSidebars()
		TT_DestroyTitleChars('PRIEST_SCROLL_TITLE', 'TEMPLATE_titlechar_PRIESTSCROLL')
	"
	button
	{
		on escape
		action
		"
			--Return to world screen on escape
			e:SelectEngine(worldScreen)
		"
	}

	label
	{
		area 0 0 864 710
		mosaic GUIPRB
	}
	template
    {
        label
        {
            enabled "true"
            ignoreEvents
            area 0 0 -1 -1
            bam "TTREALMS"
            sequence lua "TT_TitleData['PRIEST_SCROLL_TITLE'][instanceId].seq"
            align center center
        }
        name "TEMPLATE_titlechar_PRIESTSCROLL"
    }
	text
    {
        name "TT_PRIESTSCROLL"
		area		248 52 366 42
		--text lua	"PRIEST_SCROLL_TITLE"
		--text style "title"
    }
	button -- change book for clerics/mages
	{
		enabled "characters[id].hasMageBook"
		area		136 128 62 59
		bam 		'GUMPBUTX'
		sequence 	2
		action 
		"
		if characters[id].hasMageBook then
			e:GetActiveEngine():OnLeftPanelButtonClick(5) 
		end
		"
	}
	label
	{
		area 		211 122 446 34
		text lua	"characters[id].name"
		text style	"label"
		text shadow 1
	}
	button
	{
		area		243 157 42 42
		bam		GUIPRTC
 		ScaleToClip
		frame lua "getSpellHighlight(1)"
		sequence	0
		enabled		"maxPriestPage > 0"
		action		"setPriestBookLevel(1)"
	}
	button
	{
		area		299 157 42 42
		bam		GUIPRTC
 		ScaleToClip
		frame lua "getSpellHighlight(2)"
		sequence	1
		enabled		"maxPriestPage > 1"
		action		"setPriestBookLevel(2)"
	}
	button
	{
		area		355 157 42 42
		bam		GUIPRTC
 		ScaleToClip
		frame lua "getSpellHighlight(3)"
		sequence	2
		enabled		"maxPriestPage > 2"
		action		"setPriestBookLevel(3)"
	}
	button
	{
		area		411 157 42 42
		bam		GUIPRTC
 		ScaleToClip
		frame lua "getSpellHighlight(4)"
		sequence	3
		enabled		"maxPriestPage > 3"
		action		"setPriestBookLevel(4)"
	}
	button
	{
		area		467 157 42 42
		bam		GUIPRTC
 		ScaleToClip
		frame lua "getSpellHighlight(5)"
		sequence	4
		enabled		"maxPriestPage > 4"
		action		"setPriestBookLevel(5)"
	}
	button
	{
		area		523 157 42 42
		bam		GUIPRTC
 		ScaleToClip
		frame lua "getSpellHighlight(6)"
		sequence	5
		enabled		"maxPriestPage > 5"
		action		"setPriestBookLevel(6)"
	}
	button
	{
		area		579 157 42 42
		bam		GUIPRTC
 		ScaleToClip
		frame lua "getSpellHighlight(7)"
		sequence	6
		enabled		"maxPriestPage > 6"
		action		"setPriestBookLevel(7)"
	}
	button
	{
		area 363 212 71 51
		bam GUIPRC
		sequence 0
		frame lua "getMovingFrame('clericTurnLeft') ==1 and 1 or 0"
		action
		"
			if currentSpellLevel > 1 then
				setPriestBookLevel(currentSpellLevel - 1)
			end
		"
	}
	button
	{
		on A
		action
		"
			if currentSpellLevel > 1 then
				getClick(Infinity_GetFrameCounter(), 'clericTurnLeft')
				setPriestBookLevel(currentSpellLevel - 1)
			end
		"
	}
	button
	{
		area 434 212 71 52
		bam GUIPRC
		sequence 1
		frame lua "getMovingFrame('clericTurnRight') ==1 and 1 or 0"
		action
		"
			if currentSpellLevel < maxPriestPage then
				setPriestBookLevel(currentSpellLevel + 1)
			end
		"
	}
	button
	{
		on D
		action
		"
			if currentSpellLevel < maxPriestPage then				
				getClick(Infinity_GetFrameCounter(), 'clericTurnRight')
				setPriestBookLevel(currentSpellLevel + 1)
			end
		"
	}
	template
	{
		label
		{
			enabled "showMemorizationSparkle(instanceId)"
			ignoreEvents
			area 0 0 45 42
			bam FLASHBR
			usealpha lua "true"
			frame lua "memorizationFlashes[instanceId][2]"
			align center center
		}
		name "TEMPLATE_priestMemorizationSparkle"
	}
	text
	{
		area 208 226 155 24
		text lua "t(JFStrings.Level_String) .. ' ' .. currentSpellLevel .. ' ' .. t(JFStrings.Spells_String)"
		text style "bold_parchment"
	}
	text
	{
		area 182 278 212 26
		text lua "Infinity_FetchString(11944)"
		text style "bold_parchment"
	}
	list
	{
		column
		{
			width 25
			label
			{
				enabled "characters[id].priestSpells[currentSpellLevel][4 * rowNumber - 3] ~= nil"
				area 0 0 -1 -1
				bam lua "characters[id].priestSpells[currentSpellLevel][4 * rowNumber - 3].icon"
				align center center
			}
		}
		column
		{
			width 25
			label
			{
				enabled "characters[id].priestSpells[currentSpellLevel][4 * rowNumber - 2] ~= nil"
				area 0 0 -1 -1
				bam lua "characters[id].priestSpells[currentSpellLevel][4 * rowNumber - 2].icon"
				align center center
			}
		}
		column
		{
			width 25
			label
			{
				enabled "characters[id].priestSpells[currentSpellLevel][4 * rowNumber - 1] ~= nil"
				area 0 0 -1 -1
				bam lua "characters[id].priestSpells[currentSpellLevel][4 * rowNumber - 1].icon"
				align center center
			}
		}
		column
		{
			width 25
			label
			{
				enabled "characters[id].priestSpells[currentSpellLevel][4 * rowNumber] ~= nil"
				area 0 0 -1 -1
				bam lua "characters[id].priestSpells[currentSpellLevel][4 * rowNumber].icon"
				align center center
			}
		}
		area 440 304 226 268
		name "bookListPriest"
		scrollbar 'GUIKNSBR'
		rowheight 52
		hidehighlight
		table "makeTable(math.ceil(#characters[id].priestSpells[currentSpellLevel] / 4))"
		var currentBookSpell
		action
		"
			local idx = 4 * (currentBookSpell - 1) + cellNumber
			if characters[id].priestSpells[currentSpellLevel][idx] and #bottomSpells < #bottomSpellsPlaceHolder then
				createPriestMemorizationSparkle(52 * (cellNumber - 1), 0, 52, 52, 'bookListPriest', currentBookSpell)
				Infinity_PlaySound('GAM_24')
				showPriestMemorizationFlash = true
				priestScreen:MemorizeSpell(characters[id].priestSpells[currentSpellLevel][idx].level, characters[id].priestSpells[currentSpellLevel][idx].index)
			end
		"
		actionAlt
		"
			local idx = 4 * (currentBookSpell - 1) + cellNumber
			if characters[id].priestSpells[currentSpellLevel][idx] then
				showSpellDetails(characters[id].priestSpells[currentSpellLevel][idx])
			end
		"
		actionEnter	"currentBookSpell = mouseoverRow"
		actionExit	"currentBookSpell = 0"
	}
	text
	{
		area 440 304 52 52
		ignoreEvents
		tooltip lua "spellTooltip(characters[id].priestSpells[currentSpellLevel], 1)"
	}
	text
	{
		area 492 304 52 52
		ignoreEvents
		tooltip lua "spellTooltip(characters[id].priestSpells[currentSpellLevel], 2)"
	}
	text
	{
		area 544 304 52 52
		ignoreEvents
		tooltip lua "spellTooltip(characters[id].priestSpells[currentSpellLevel], 3)"
	}
	text
	{
		area 596 304 52 52
		ignoreEvents
		tooltip lua "spellTooltip(characters[id].priestSpells[currentSpellLevel], 4)"
	}
	text
	{
		area 440 356 52 52
		ignoreEvents
		tooltip lua "spellTooltip(characters[id].priestSpells[currentSpellLevel], 1)"
	}
	text
	{
		area 492 356 52 52
		ignoreEvents
		tooltip lua "spellTooltip(characters[id].priestSpells[currentSpellLevel], 2)"
	}
	text
	{
		area 544 356 52 52
		ignoreEvents
		tooltip lua "spellTooltip(characters[id].priestSpells[currentSpellLevel], 3)"
	}
	text
	{
		area 596 356 52 52
		ignoreEvents
		tooltip lua "spellTooltip(characters[id].priestSpells[currentSpellLevel], 4)"
	}
	text
	{
		area 440 408 52 52
		ignoreEvents
		tooltip lua "spellTooltip(characters[id].priestSpells[currentSpellLevel], 1)"
	}
	text
	{
		area 492 408 52 52
		ignoreEvents
		tooltip lua "spellTooltip(characters[id].priestSpells[currentSpellLevel], 2)"
	}
	text
	{
		area 544 408 52 52
		ignoreEvents
		tooltip lua "spellTooltip(characters[id].priestSpells[currentSpellLevel], 3)"
	}
	text
	{
		area 596 408 52 52
		ignoreEvents
		tooltip lua "spellTooltip(characters[id].priestSpells[currentSpellLevel], 4)"
	}
	text
	{
		area 440 460 52 52
		ignoreEvents
		tooltip lua "spellTooltip(characters[id].priestSpells[currentSpellLevel], 1)"
	}
	text
	{
		area 492 460 52 52
		ignoreEvents
		tooltip lua "spellTooltip(characters[id].priestSpells[currentSpellLevel], 2)"
	}
	text
	{
		area 544 460 52 52
		ignoreEvents
		tooltip lua "spellTooltip(characters[id].priestSpells[currentSpellLevel], 3)"
	}
	text
	{
		area 596 460 52 52
		ignoreEvents
		tooltip lua "spellTooltip(characters[id].priestSpells[currentSpellLevel], 4)"
	}
	text
	{
		area 440 512 52 52
		ignoreEvents
		tooltip lua "spellTooltip(characters[id].priestSpells[currentSpellLevel], 1)"
	}
	text
	{
		area 492 512 52 52
		ignoreEvents
		tooltip lua "spellTooltip(characters[id].priestSpells[currentSpellLevel], 2)"
	}
	text
	{
		area 544 512 52 52
		ignoreEvents
		tooltip lua "spellTooltip(characters[id].priestSpells[currentSpellLevel], 3)"
	}
	text
	{
		area 596 512 52 52
		ignoreEvents
		tooltip lua "spellTooltip(characters[id].priestSpells[currentSpellLevel], 4)"
	}
	text
	{
		area 440 564 52 52
		ignoreEvents
		tooltip lua "spellTooltip(characters[id].priestSpells[currentSpellLevel], 1)"
	}
	text
	{
		area 492 564 52 52
		ignoreEvents
		tooltip lua "spellTooltip(characters[id].priestSpells[currentSpellLevel], 2)"
	}
	text
	{
		area 544 564 52 52
		ignoreEvents
		tooltip lua "spellTooltip(characters[id].priestSpells[currentSpellLevel], 3)"
	}
	text
	{
		area 596 564 52 52
		ignoreEvents
		tooltip lua "spellTooltip(characters[id].priestSpells[currentSpellLevel], 4)"
	}

	text
	{
		area 460 278 197 26
		text lua "Infinity_FetchString(11945)"
		text style "bold_parchment"
		text align right top
	}
	list
	{
		column
		{
			width 25
			label
			{
				enabled "bottomSpellsPlaceHolder[4 * rowNumber - 3] ~= nil"
				area 0 0 -1 -1
				bam SPELFRMS
				frame lua "getSpellFrame(4 * rowNumber - 3)"
				align center center
			}
			label
			{
				enabled "bottomSpells[4 * rowNumber - 3] ~= nil"
				area 0 0 -1 -1
				bam lua "bottomSpells[4 * rowNumber - 3].icon"
				opacity lua "getSpellOpacity(4 * rowNumber - 3)"
				align center center
			}
		}
		column
		{
			width 25
			label
			{
				enabled "bottomSpellsPlaceHolder[4 * rowNumber - 2] ~= nil"
				area 0 0 -1 -1
				bam SPELFRMS				
				frame lua "getSpellFrame(4 * rowNumber - 2)"
				align center center
			}
			label
			{
				enabled "bottomSpells[4 * rowNumber - 2] ~= nil"
				area 0 0 -1 -1
				bam lua "bottomSpells[4 * rowNumber - 2].icon"
				opacity lua "getSpellOpacity(4 * rowNumber - 2)"
				align center center
			}
		}
		column
		{
			width 25
			label
			{
				enabled "bottomSpellsPlaceHolder[4 * rowNumber - 1] ~= nil"
				area 0 0 -1 -1
				bam SPELFRMS
				
				frame lua "getSpellFrame(4 * rowNumber - 1)"
				align center center
			}
			label
			{
				enabled "bottomSpells[4 * rowNumber - 1] ~= nil"
				area 0 0 -1 -1
				bam lua "bottomSpells[4 * rowNumber - 1].icon"
				opacity lua "getSpellOpacity(4 * rowNumber - 1)"
				align center center
			}
		}
		column
		{
			width 25
			label
			{
				enabled "bottomSpellsPlaceHolder[4 * rowNumber] ~= nil"
				area 0 0 -1 -1
				bam SPELFRMS
				frame lua "getSpellFrame(4 * rowNumber)"
				align center center
			}
			label
			{
				enabled "bottomSpells[4 * rowNumber] ~= nil"
				area 0 0 -1 -1
				bam lua "bottomSpells[4 * rowNumber].icon"
				opacity lua "getSpellOpacity(4 * rowNumber)"
				align center center
			}
		}
		area 178 304 262 272
		name "memorizedListPriest"
		scrollbar 'GUIKNSBR'
		rowheight 62
		hidehighlight
		table "makeTable(math.ceil(#bottomSpellsPlaceHolder / 4))"
		var currentBottomSpell
		action
		"
			local idx = 4 * (currentBottomSpell - 1) + cellNumber
			if bottomSpells[idx] then
				if bottomSpells[idx].memorizedCount > bottomSpells[idx].castableCount or Infinity_GetOption(41, 9) == 0 then
					removePriestSpell(idx)
				else
					popup2Button(11824, 'DELETE_BUTTON', function() removePriestSpell(idx) end)
				end
			end
		"
		actionAlt
		"
			local idx = 4 * (currentBottomSpell - 1) + cellNumber
			if bottomSpells[idx] then
				showSpellDetails(bottomSpells[idx])
			end
		"
		actionEnter	"currentBookSpell = mouseoverRow"
		actionExit	"currentBookSpell = 0"
	}
	label
	{
		area 272 647 321 44
		text lua "priestPageInfo()"
		text style "label"
		text style "label"
		bam 'BG_UND'
		sequence 3
	}
	text
	{
		area 178 304 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bottomSpells, 1)"
	}
	text
	{
		area 240 304 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bottomSpells, 2)"
	}
	text
	{
		area 302 304 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bottomSpells, 3)"
	}
	text
	{
		area 364 304 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bottomSpells, 4)"
	}
	text
	{
		area 178 366 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bottomSpells, 1)"
	}
	text
	{
		area 240 366 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bottomSpells, 2)"
	}
	text
	{
		area 302 366 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bottomSpells, 3)"
	}
	text
	{
		area 364 366 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bottomSpells, 4)"
	}
	text
	{
		area 178 428 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bottomSpells, 1)"
	}
	text
	{
		area 240 428 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bottomSpells, 2)"
	}
	text
	{
		area 302 428 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bottomSpells, 3)"
	}
	text
	{
		area 364 428 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bottomSpells, 4)"
	}
	text
	{
		area 178 490 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bottomSpells, 1)"
	}
	text
	{
		area 240 490 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bottomSpells, 2)"
	}
	text
	{
		area 302 490 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bottomSpells, 3)"
	}
	text
	{
		area 364 490 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bottomSpells, 4)"
	}
	text
	{
		area 178 552 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bottomSpells, 1)"
	}
	text
	{
		area 240 552 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bottomSpells, 2)"
	}
	text
	{
		area 302 552 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bottomSpells, 3)"
	}
	text
	{
		area 364 552 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bottomSpells, 4)"
	}
	text
	{
		area 178 614 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bottomSpells, 1)"
	}
	text
	{
		area 240 614 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bottomSpells, 2)"
	}
	text
	{
		area 302 614 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bottomSpells, 3)"
	}
	text
	{
		area 364 614 62 62
		ignoreEvents
		tooltip lua "spellTooltip(bottomSpells, 4)"
	}
}
`
	versionString = ""
	function canClickSaveLoad()
		return game:IsClient() == false
	end
`
menu
{
	name "ESC_MENU"
	ignoreesc
	align center center
	onOpen
	"
		pushSidebars()
		Infinity_SetBackground('BACKGROUND')
		TT_BuildTitleData('OPTIONS_TITLE', 362, true)
		TT_CreateTitleChars('OPTIONS_TITLE', 'TT_OPTIONS', 40, 'TEMPLATE_titlechar_OPTIONS')
	"
	onClose
	"
		popSidebars()
		Infinity_SetBackground(nil)
		TT_DestroyTitleChars('OPTIONS_TITLE', 'TEMPLATE_titlechar_OPTIONS')
	"
	label
	{
		area 0 0 864 768
		mosaic STONEOPT
	}
	template
    {
        label
        {
            enabled "true"
            ignoreEvents
            area 0 0 -1 -1
            bam "TTREALMS"
            sequence lua "TT_TitleData['OPTIONS_TITLE'][instanceId].seq"
            align center center
        }
        name "TEMPLATE_titlechar_OPTIONS"
    }
	label
    {
        name "TT_OPTIONS"
		area 40 40 362 40
		--text "OPTIONS_TITLE"
		--text style "title"
    }
	label
	{
		area 26 702 144 30
		text lua "versionString"
		text style "normal"
		text align center center
	}
	--label
	--{
		--area 244 174 378 454
		--bam BIGLOGO
		--align center center
		--frame lua 'getBigLogo()'
	--}
	button
	{
		bam GUIOPTC
		sequenceonce lua "Infinity_RandomNumber(0, 3)"
		ScaleToClip
		area 383 543 285 60
		text style "big_button"
		text "GAMEPLAY_BUTTON"
		text shadow 1
		action
		"
			if iHaveSCS == true then scsInGameVar=true end
			Infinity_PushMenu( 'OPTIONS_GAMEPLAY' )
		"
	}
	button
	{
		bam GUIOPTC
		sequenceonce lua "Infinity_RandomNumber(0, 3)"
		ScaleToClip
		area 383 415 285 60
		text style "big_button"
		text "GRAPHICS_BUTTON"
		text shadow 1
		action
		"
			Infinity_PushMenu('OPTIONS_GRAPHICS')
		"
	}
	button
	{
		bam GUIOPTC
		sequenceonce lua "Infinity_RandomNumber(0, 3)"
		ScaleToClip
		area 383 479 285 60
		text style "big_button"
		text "SOUND_BUTTON"
		text shadow 1
		action
		"
			Infinity_PushMenu('OPTIONS_SOUND')
		"
	}
	button
	{
		area 417 639 214 50
		bam BIGBUTT
		ScaleToClip
		text "RETURN_GAME_BUTTON"
		text style "button"
		text shadow 1
		action
		"
			e:SelectEngine(worldScreen)
		"
	}
	button
	{
		bam GUIOPTC
		sequenceonce lua "Infinity_RandomNumber(0, 3)"
		ScaleToClip
		area 383 192 285 60
		text style "big_button"
		text shadow 1
		text "LOAD_GAME_BUTTON"
		clickable lua "canClickSaveLoad()"
		action
		"
			popup2Button(19531, 'LOAD_BUTTON', function() optionsScreen:LoadGame() end)
		"
	}
	button
	{
		bam GUIOPTC
		sequenceonce lua "Infinity_RandomNumber(0, 3)"
		ScaleToClip
		area 383 320 285 60
		text style "big_button"
		text shadow 1
		text "QUIT_GAME_BUTTON"
		action
		"
			if e:IsTouchUI() then
				popup3Button(16456, 
				'CANCEL_BUTTON', nil, 
				'MAIN_MENU_BUTTON', function() optionsScreen:QuitGame() end, 
				'SAVE_BUTTON', function() optionsScreen:SaveGame(0) end
				)
			else
				popup4Button(16456, 
				'CANCEL_BUTTON', nil, 
				'MAIN_MENU_BUTTON', function() optionsScreen:QuitGame() end, 
				'QUIT_BUTTON', function() Infinity_ShutdownGame() end, 
				'SAVE_BUTTON', function() optionsScreen:SaveGame(0) end
				)
			end
		"
	}
	button
	{
		bam GUIOPTC
		sequenceonce lua "Infinity_RandomNumber(0, 3)"
		ScaleToClip
		area 383 256 285 60
		text style "big_button"
		text shadow 1
		text "SAVE_GAME_BUTTON"
		clickable lua "canClickSaveLoad()"
		action
		"
			optionsScreen:SaveGame(0)
		"
	}
}
`
mapnoteSettings = {}
showNotes = 1
function showNote(instanceId)
	if(mapScreen:IsNoteVisible(mapnoteSettings[instanceId].worldCoord.x, mapnoteSettings[instanceId].worldCoord.y)
	and mapnoteSettings[instanceId].screenCoord.x >= 0
	and mapnoteSettings[instanceId].screenCoord.y >= 0) then
		return showNotes
	else
		return false
	end
end
notesAlpha = 0
function getAndIncrementNotesAlpha()
	if(notesAlpha < .99) then
		notesAlpha = notesAlpha + 0.075
	end
	if(notesAlpha > 1) then
		notesAlpha = 1
	end
	return notesAlpha
end
`
menu
{
	name 'AREA_MAP_TITLE'
	align center top
	opacity lua "notesAlpha"
	ignoreEsc
	onOpen 
	"
	if isScaledUI() then Infinity_SetOffset('AREA_MAP_TITLE', 206, nil) else Infinity_SetOffset('AREA_MAP_TITLE', 0, nil) end
	Infinity_PopMenu('JOURNAL')
	TT_BuildTitleData(Infinity_FetchString(32898), 314, true)
	TT_CreateTitleChars(Infinity_FetchString(32898), 'TT_AREA_MAP_TITLE', 30, 'TEMPLATE_titlechar_AREA_MAP_TITLE')
	"
	onclose	"TT_DestroyTitleChars(Infinity_FetchString(32898), 'TEMPLATE_titlechar_AREA_MAP_TITLE')"
	label
	{
		name "AREA_MAP_BACKGROUND"
		area 0 0 900 96
	}
	label
	{
		enabled "isScaledUI()"
		area 0 0 900 96
		mosaic "GUIMAPAB"
	}
	label
	{
		enabled "not isScaledUI()"
		area 0 0 1312 96
		mosaic "GUIMAPAC"
	}
	template
    {
        label
        {
            enabled "true"
            ignoreEvents
            area 0 0 -1 -1
            bam "TTREALMS"
            sequence lua "TT_TitleData[Infinity_FetchString(32898)][instanceId].seq"
            align center center
        }
        name "TEMPLATE_titlechar_AREA_MAP_TITLE"
    }
	label
    {
        name "TT_AREA_MAP_TITLE"
        area 28 24 314 30
    }
	label
	{
		area 411 8 220 40
		action "mapScreen:ToggleDisplayExploredMap()"
		text "WORLDMAP_HIGHLIGHT_LABEL"
		text style "label"
		text align left center
		text shadow 1
	}
	button
	{
		area 375 8 206 36
		bam "4CHECK"
		sequence lua "mapScreen:DisplayExploredMap() and 0 or 1"
		action "mapScreen:ToggleDisplayExploredMap()"
	}

	label
	{
		area 411 42 220 40
		toggle showNotes
		text "WORLD_MAP_NOTES_LABEL"
		text style "label"
		text align left center
		text shadow 1
	}
	button
	{
		area 375 42 206 36
		bam "4CHECK"
		sequence lua "showNotes == 1 and 0 or 1"
		toggle showNotes
	}

	button
	{
		enabled "isScaledUI()"
		area 804 6 79 84
		bam GUIMAPWC
		sequence 0
		ScaleToClip
		text style "button"
		text shadow 1
		action
		"
			worldMapScreen:StartWorldMap(0)
			e:SelectEngine(worldMapScreen)
		"
	}
	button
	{
		enabled "not isScaledUI()"
		area 1202 6 79 84
		bam GUIMAPWC
		sequence 0
		ScaleToClip
		text style "button"
		text shadow 1
		action
		"
			worldMapScreen:StartWorldMap(0)
			e:SelectEngine(worldMapScreen)
		"
	}
}
`
	areaMapHover = -1
	function showAreaMapNoteTooltip(id)
		if id == areaMapHover then
			return true
		else
			return false
		end
	end
`
menu
{
	name 'AREA_MAP'
	align left top
	ignoreesc
	onOpen "pushSidebars(); Infinity_PushMenu('AREA_MAP_TITLE'); notesAlpha = 0"
	onClose "popSidebars(); Infinity_PopMenu('AREA_MAP_TITLE');"
	opacity lua "getAndIncrementNotesAlpha()"
	template
	{
		button
		{
			enabled "showNote(instanceId)"
			area 0 0 30 30
			ScaleToClip
			bam "FLAG1"
			sequence lua "mapnoteSettings[instanceId].sequence"
			tooltip force lua "showAreaMapNoteTooltip(instanceId)"
			tooltip force top
			tooltip lua "Infinity_FetchString(mapnoteSettings[instanceId].text)"
			tooltip position 3
			actionAlt
			"
				mapScreen:OnUserNoteClick(instanceId, mapnoteSettings[instanceId].worldCoord.x, mapnoteSettings[instanceId].worldCoord.y)
				Infinity_PushMenu('NOTE_ADD',0,0)
			"
			actionEnter
			"
				areaMapHover = instanceId
			"
			actionExit
			"
				areaMapHover = -1
			"
		}
		name "TEMPLATE_mapnote"
	}
}
`
	colorChoice = nil
`
menu
{
	name 'NOTE_ADD'
	align center center
	onOpen 
	"
		if colorChoice == nil then
			colorChoice = Infinity_FindUIItemByName('BUTTON_mapNoteColor_' .. mapScreen:GetColorChoice())
		end
	"
	onClose
	"
		colorChoice = nil
	"
	modal
	label
	{
		area 0 0 643 211
		mosaic GUIERR4
	}
	edit
	{
		name 		"mapNoteEditArea"
		area		52 20 542 36
		var			mapNoteEdit
		maxlines 1
		scrollbar	'GUISCRC'
		text style	"edit"
	}
	button
	{
		area 440 143 162 30
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text style "button"
		text shadow 1
		text "DONE_BUTTON"
		on return
		action
		"
			mapScreen:OnUserNoteDoneButtonClick()
			Infinity_PopMenu('NOTE_ADD',0,0)
		"
	}
	button
	{
		on escape
		area 28 143 162 30
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text style "button"
		text shadow 1
		text "CANCEL_BUTTON"
		action
		"
			Infinity_PopMenu('NOTE_ADD',0,0)
		"
	}
	button
	{
		area 235 143 162 30
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text style "button"
		text shadow 1
		text "DELETE_BUTTON"
		action
		"
			mapScreen:OnUserNoteDeleteButtonClick()
			Infinity_PopMenu('NOTE_ADD',0,0)
		"
	}
	
	button
	{
		name "BUTTON_mapNoteColor_0"
		area 95 76 30 30
		bam "FLAG1"
		ScaleToClip
		highlightgroup colorChoice
		sequence 0
		action
		"
			mapScreen:OnColorChoice(0)
		"
	}
	button
	{
		name "BUTTON_mapNoteColor_1"
		area 155 76 30 30
		bam "FLAG1"
		ScaleToClip
		highlightgroup colorChoice
		sequence 1
		action
		"
			mapScreen:OnColorChoice(1)
		"
	}
	button
	{
		name "BUTTON_mapNoteColor_2"
		area 215 76 30 30
		bam "FLAG1"
		ScaleToClip
		highlightgroup colorChoice
		sequence 2
		action
		"
			mapScreen:OnColorChoice(2)
		"
	}
	button
	{
		name "BUTTON_mapNoteColor_3"
		area 275 76 30 30
		bam "FLAG1"
		ScaleToClip
		highlightgroup colorChoice
		sequence 3
		action
		"
			mapScreen:OnColorChoice(3)
		"
	}
	button
	{
		name "BUTTON_mapNoteColor_4"
		area 335 76 30 30
		bam "FLAG1"
		ScaleToClip
		highlightgroup colorChoice
		sequence 4
		action
		"
			mapScreen:OnColorChoice(4)
		"
	}
	button
	{
		name "BUTTON_mapNoteColor_5"
		area 395 76 30 30
		bam "FLAG1"
		ScaleToClip
		highlightgroup colorChoice
		sequence 5
		action
		"
			mapScreen:OnColorChoice(5)
		"
	}
	button
	{
		name "BUTTON_mapNoteColor_6"
		area 455 76 30 30
		bam "FLAG1"
		ScaleToClip
		highlightgroup colorChoice
		sequence 6
		action
		"
			mapScreen:OnColorChoice(6)
		"
	}
	button
	{
		name "BUTTON_mapNoteColor_7"
		area 515 76 30 30
		bam "FLAG1"
		ScaleToClip
		highlightgroup colorChoice
		sequence 7
		action
		"
			mapScreen:OnColorChoice(7)
		"
	}
}
`
	function setWorldmapSize()
		if isScaledUI() then
			Infinity_SetArea('worldmap_space', -3, 96, 1006, 664)
		else 
			local screenWidth, screenHeight = Infinity_GetScreenSize()
			Infinity_SetArea('worldmap_space', -3, 96, 1006, screenHeight-96)
		end
	end
`
menu
{
	name "WORLD_MAP"
	align center top
	onOpen "
	setWorldmapSize()
	Infinity_SetArea('travelButton', 791, 374, 45, 44)
	TT_BuildTitleData('WORLD_MAP_TITLE', 294, true)
   TT_CreateTitleChars('WORLD_MAP_TITLE', 'TT_WORLD_MAP', 35, 'TEMPLATE_titlechar_WORLD_MAP')
	"
	onClose "TT_DestroyTitleChars('WORLD_MAP_TITLE', 'TEMPLATE_titlechar_WORLD_MAP')"
	label
	{
		area 0 0 988 96
		mosaic GUIMAPWB
	}
	template
    {
        label
        {
            enabled "true"
            ignoreEvents
            area 0 0 -1 -1
            bam "TTREALMS"
            sequence lua "TT_TitleData['WORLD_MAP_TITLE'][instanceId].seq"
            align center center
        }
        name "TEMPLATE_titlechar_WORLD_MAP"
    }
	label
    {
        name "TT_WORLD_MAP"
		area 38 22 294 35
		--text "WORLD_MAP_TITLE"
		--text style "title"
    }
	button
	{
		area 870 6 79 84
		bam GUIMAPWC
		sequence 0
		ScaleToClip
		text style "button"
		text shadow 1
		action
		"
			worldMapScreen:OnCancelButtonClick()
		"
	}
	button
	{
		--enabled false
		area 951 6 22 38
		bam GUIMAPWC
		sequence 1
		ScaleToClip
		text style "button"
	}
	button
	{
		--enabled false
		area 951 52 22 38
		bam GUIMAPWC
		sequence 2
		ScaleToClip
		text style "button"
	}
	map
	{
		name "worldmap_space"
		area -3 96 1006 664
		worldmap
		action
		"
			worldMapScreen:OnMapMouseDown(eventXCoord,eventYCoord)
			if worldMapScreen:IsTravelButtonClickable() then
				Infinity_SetArea('travelButton', eventXCoord, eventYCoord+140, 45, 44)
			else
				Infinity_SetArea('travelButton', 869, 688, 0, 0)
			end
		"
		actionDbl
		"
			worldMapScreen:TravelToSelected()
		"
		actionDrag
		"
			worldMapScreen:OnMapMouseMove(eventXCoord,eventYCoord)
		"
	}
	button
	{
		name 'travelButton'
		area 913 293 45 44
		enabled "worldMapScreen:IsTravelButtonClickable()"
		bam GMPCONNC
		ScaleToClip
		--text "TRAVEL_BUTTON"
		text style "button"
		text shadow 1
		clickable lua "worldMapScreen:IsTravelButtonClickable()"
		action "
			worldMapScreen:TravelToSelected()
		"	
	}
}
`
chapterBackground = ""
chapterTitle = ""
text_CHAPTERSCROLL = ""
text_CHAPTERSCROLL_timeStart = 0
text_CHAPTERSCROLL_auto = 1
function UpdateChapterScroll(top, height, contentHeight)
	if(text_CHAPTERSCROLL_auto == 0) then
		--defer to default scrolling
		return nil
	end
	local dT = Infinity_GetClockTicks() - text_CHAPTERSCROLL_timeStart
	local x,y,w,h = Infinity_GetArea("chapterIntroduction") --need only width
	local timerCrawl = dT * -0.006*(500/w) --arbitrary multiplier, seems to produce best pace for narration
	if megacredits ~= '' then
		timerCrawl = dT * -0.06
	end
	local newTop = timerCrawl + height
	if(newTop + contentHeight + height < height) then
		return top
	end
	return newTop
end
function setChapterBackground(id)
	chapter = math.max(0, Infinity_GetMaxChapterPage())
	chapterBackground = chapterBackgrounds[id]
	chapterTitle = chapterText()
	chapterID = id
end
function moveChapterTextArea() --BGEE.lua for reference
		isDreamSequence = false --misnomer, not about dreams but particular chapter graphics
		Infinity_SetArea('chapterIntroduction', 145, 258, 735, 310) --prologue, chapter 1 and 8
	if chapterID == 2 then Infinity_SetArea('chapterIntroduction', 661, 238, 332, 235) end
	if chapterID == 3 then Infinity_SetArea('chapterIntroduction', 298, 443, 696, 162) end
	if chapterID == 4 then Infinity_SetArea('chapterIntroduction', 741, 296, 271, 288) end
	if chapterID == 5 then Infinity_SetArea('chapterIntroduction', 127, 325, 539, 137) end
	if chapterID == 6 then Infinity_SetArea('chapterIntroduction', 33, 254, 457, 197) end
	if chapterID == 7 then Infinity_SetArea('chapterIntroduction', 45, 340, 338, 240) end
	if chapterID == 62 then Infinity_SetArea('chapterIntroduction', 449, 239, 544, 358) end --SoD start
	if chapterID == 8 then Infinity_SetArea('chapterIntroduction', 716, 270, 268, 290) end
	if chapterID == 9 then Infinity_SetArea('chapterIntroduction', 646, 228, 346, 250) end
	if chapterID == 10 then Infinity_SetArea('chapterIntroduction', 36, 334, 347, 246) end
	if chapterID == 11 then Infinity_SetArea('chapterIntroduction', 43, 341, 335, 237) end
	if chapterID == 12 then Infinity_SetArea('chapterIntroduction', 42, 256, 442, 191) end
	if chapterID == 13 then Infinity_SetArea('chapterIntroduction', 145, 258, 735, 310) end
	
	if chapterID> 21 and chapterID <60 or chapterID == 62 and Infinity_GetMaxChapterPage() < 6  then --fix for improved Ulgoth's Beard from SCS
		Infinity_SetArea('chapterIntroduction', 130,452, 732, 232) 
		isDreamSequence = true
	end
	
	local x,y,w,h = Infinity_GetArea('chapterIntroduction')	
	Infinity_SetArea('text_CHAPTERSCROLL',x, y, w, h)
	Infinity_SetArea('chapterSplit', nil, nil, w-40, -1)
end
function getChapterTitle()
	if chapterID >21 and chapterID<60 or chapterID == 62 and Infinity_GetMaxChapterPage() < 6  then return nil
	elseif chapterID == 13 then return JFStrings.Chapter_Epilogue
	else return chapterTitle end
end
`
menu
{
	name 'CHAPTER'
	align center center
	ignoreEsc
	onOpen
	"
		moveChapterTextArea()
		computeSplitPosition(text_CHAPTERSCROLL, 'chapterSplit')
		Infinity_SetBackground('BACKGROUND')		
		TT_BuildTitleData(getChapterTitle(), 655, true)
		TT_CreateTitleChars(getChapterTitle(), 'TT_CHAPTER', 43, 'TEMPLATE_titlechar_CHAPTER')
	"
	onClose
	"
		Infinity_SetBackground(nil)
		TT_DestroyTitleChars(getChapterTitle(), 'TEMPLATE_titlechar_CHAPTER')
	"
	label
	{
		area 0 0 1024 768
		mosaic lua "chapterBackground"
	}
	template
    {
        label
        {
            enabled "true"
            ignoreEvents
            area 0 0 -1 -1
            bam "TTREALMS"
            sequence lua "TT_TitleData[getChapterTitle()][instanceId].seq"
            align center center
        }
        name "TEMPLATE_titlechar_CHAPTER"
    }
	label
    {
        name "TT_CHAPTER"
		area 180 58 655 43
		--text "getChapterTitle()"
		--text style "title"
    }
	label
	{
		name "chapterSplit"
		enabled "false"
		area 0 0 298 54
		text lua "text_CHAPTERSCROLL:sub(startPos, curPos)"
		text style normal
		text shadow 1
		scrollbar 'GUISCRC'
	}
	list
	{
		column
		{
			width 100
			label
			{
				enabled "rowNumber == 1"
				area 0 0 40 38
				bam INITIALS
				sequence lua "text_CHAPTERSCROLL:byte(startPos - 1) - 1"
			}
			label
			{
				enabled "rowNumber == 1"
				area 44 0 -1 -1
				text lua "text_CHAPTERSCROLL:sub(startPos, splitPos - 1)"
				text style normal
				text shadow 1
			}
			label
			{
				enabled "rowNumber == 2"
				area 0 0 -1 -1
				text lua "text_CHAPTERSCROLL:sub(splitPos + 1)"
				text style normal
				text shadow 1
			}
		}
		enabled "splitPos ~= -1"
		name "chapterIntroduction"
		rowheight dynamic
		hidehighlight
		table "makeTable(2)"
		area 45 340 338 240
		scrollbar 'GUISCRC'
		scrollbar func 'UpdateChapterScroll'
		scrollbar hide lua 'text_CHAPTERSCROLL_auto == 1'
		action
		"
			text_CHAPTERSCROLL_auto = 0
		"
	}
	text
	{
		enabled "splitPos == -1"
		name "text_CHAPTERSCROLL"
		area 142 258 738 310
		text lua "text_CHAPTERSCROLL"
		text style gamelog
		text shadow 1
		scrollbar 'GUISCRC'
		scrollbar func 'UpdateChapterScroll'
		scrollbar hide lua 'text_CHAPTERSCROLL_auto == 1'
		action
		"
			text_CHAPTERSCROLL_auto = 0
		"
	}
	button
	{
		on return
		enabled "isDreamSequence == false"
		area 542 672 200 47
		bam 'BIGBUTT'
		ScaleToClip		
		sequence 1
		text "DONE_BUTTON"
		text style "button"
		text shadow 1
		clickable lua "chapterScreen:IsDoneButtonClickable()"
		action
		"
			chapterScreen:OnDoneButtonClick()
		"
	}
	button
	{
		enabled "isDreamSequence == false"
		area 284 672 200 47
		bam 'BIGBUTT'
		ScaleToClip
		sequence 1
		text "REPLAY_BUTTON"
		text style "button"
		text shadow 1
		clickable lua "chapterScreen:IsReplayButtonClickable()"
		on R
		action
		"
			chapterScreen:OnReplayButtonClick()
		"
	}
	button
	{
		on return
		enabled "isDreamSequence == true"
		area 692 715 170 29
		bam 'GUIDRMC'
		ScaleToClip		
		sequence 1
		text "DONE_BUTTON"
		text style "button"
		text shadow 1
		clickable lua "chapterScreen:IsDoneButtonClickable()"
		action
		"
			chapterScreen:OnDoneButtonClick()
		"
	}
	button
	{
		enabled "isDreamSequence == true"
		area 484 715 170 29
		bam 'GUIDRMC'
		ScaleToClip
		sequence 0
		text "REPLAY_BUTTON"
		text style "button"
		text shadow 1
		clickable lua "chapterScreen:IsReplayButtonClickable()"
		on R
		action
		"
			chapterScreen:OnReplayButtonClick()
		"
	}
}
menu
{
	name 'CHAPTER_WAITING_FOR_PROVIDER'
	modal
	align center center

	label
	{
		area 0 0 380 140
		mosaic GUIERR
	}
	label --Title
	{
		area 30 30 323 69
		text "WAITING_FOR_OTHER_PLAYERS"
		text style	"normal"
	}
}
`
store = {}
storeGroupItemsVar = 0
storeItemsVar = 0
function getStoreSlotHighlight(highlight, valid)
	if(valid == 0) then 
		return 3
	elseif (highlight == 0) then
		return 0
	else 
		return 2
	end
end
function storeSplitStack(count)
	local idx = getIdx(store.storeItems, storeItemsVar)
	storeScreen:SelectStoreItem(idx-1, true);
	storeScreen:SetStoreItemCount(idx-1, count);
end
function groupSplitStack(count)
	storeScreen:SelectGroupItem(storeGroupItemsVar-1, true);
	storeScreen:SetGroupItemCount(storeGroupItemsVar-1, count);
end
function checkContainerText(normalStr, containerStr)
	if(storeScreen:IsContainer()) then
		return t(containerStr)
	else
		return t(normalStr)
	end
end
function canSteal()
	local nb = 0
	for _, v in pairs(filter(store.storeItems)) do
		if v.highlight == 1 then
			nb = nb + 1
		end
	end
	return nb > 0 and nb + #store.groupItems <= 16
end
function getStoreItemCount(row)
	local count = filter(store.storeItems)[rowNumber].item.count
	if(count ~= 0xFFFF)  then 
		return count
	else
		-- maxword, infinite count.
		return nil
	end
end

function getRandomSequence(num, x)
 if num ~=nil then math.randomseed(num)
 else math.randomseed(1) end
 
 local ret = math.random(0, x)
	  return ret
end

function getValue(value) --make bags have no value as nobody buys them
	if store.groupItems[rowNumber].item.isBag == 1 then
		return nil
	else
		return value
	end
end
StoreSearchString = ""
function filter(t)
	if(StoreSearchString == nil or StoreSearchString == "") then return t end --no search string, do nothing
	local out = {}
	for k, v in pairs(t) do
		local text = v.label
		if(string.find(string.lower(text),string.lower(StoreSearchString)) ~= nil) then
			table.insert(out, v)
		end
	end
	return out
end
function getIdx(t, i)
	local o = 0
	for k, v in pairs(t) do
		o = o + 1
		local text = v.label
		if(string.find(string.lower(text),string.lower(StoreSearchString)) ~= nil) then i = i - 1 end
		if i == 0 then break end
	end
	return o
end
function no_ones_pls(x)
	if x >1 then return x else return nil end
end
`
menu
{
	name 'STORE_BUYSELL'
	align center center
	ignoreEsc
	size 864 710
	onOpen 
	"
	storeScreen:UpdateBuySellPanel()
	 storeTitle = storeScreen:IsContainer() and 'CONTAINER_TITLE' or 'BUY_SELL_TITLE'
	TT_BuildTitleData(storeTitle, 309, true)
	TT_CreateTitleChars(storeTitle, 'TT_BUYSELL', 35, 'TEMPLATE_titlechar_BUYSELL')
	StoreSearchString = ''
	"
	onclose	"
	TT_DestroyTitleChars(storeTitle, 'TEMPLATE_titlechar_BUYSELL')
	"
	label
	{
		area 0 0 864 598
		mosaic GUISTBSC
	}
	template
    {
        label
        {
            enabled "true"
            ignoreEvents
            area 0 0 -1 -1
            bam "TTREALMS"
            sequence lua "TT_TitleData[storeTitle][instanceId].seq"
            align center center
        }
        name "TEMPLATE_titlechar_BUYSELL"
    }
	label
    {
        name "TT_BUYSELL"
		area 36 35 309 35
		--text lua "checkContainerText('BUY_SELL_TITLE','CONTAINER_TITLE')"
		--text style "title"
    }
	label
	{
		area 452 24 316 68 --shadow
		text lua "Infinity_FetchString(storeScreen:GetStoreName())"
		text style "label"
		text point 27
		text color 5
	}
	label
	{
		area 454 26 316 68
		text lua "Infinity_FetchString(storeScreen:GetStoreName())"
		text style "label"
		text point 27
	}
	label
	{
		area 603 104 236 43
		enabled "not storeScreen:IsContainer()"
		bam 'BG_UND'
		sequence 2
		ScaleToClip
	}
	label
	{
		area 726 112 106 30
		enabled "not storeScreen:IsContainer()"
		text lua "game:GetPartyGold()"
		text style "gold"
		align center center
	}
	label
	{
		area 72 442 218 32
		enabled "not storeScreen:IsContainer()"
		text "COST_LABEL"
		text style "label"
		align right center
	}
	label
	{
		area 302 442 107 32
		enabled "not storeScreen:IsContainer()"
		bam 'BG_UND'
		sequence 1
		ScaleToClip
		text lua "storeScreen:GetStoreCost()"
		text style "normal"
		align center center
	}
	label
	{
		area 512 442 194 32
		enabled "not storeScreen:IsContainer()"
		text "PRICE_LABEL"
		text style "label"
		align right center
	}
	label
	{
		area 719 442 113 32
		enabled "not storeScreen:IsContainer()"
		bam 'BG_UND'
		sequence 1
		ScaleToClip
		text lua "storeScreen:GetGroupCost()"
		text style "normal"
		align center center
	}
	
	label
	{
		area 26 156 370 26
		text lua "checkContainerText('STORE_LABEL',Infinity_FetchString(storeScreen:GetStoreName()))"
		text style "label"
		align right center
		text shadow 1
	}
	label
	{
		area	40 155 210 23
		fill 0 0 0 160
	}
	label
	{
		area	45 155 205 25
		enabled "StoreSearchString == nil or StoreSearchString == ''"
		text lua "t(JFStrings.Search) .. '...'"
		text style "normal_parchment"
		text color 'B'
		maxlines 1
		align left center
	}
	edit
	{
		area	45 155 205 25
		var StoreSearchString
		--placeholder '...'
		text style "normal_parchment"
		text color 'B'
		maxlines 1
		align left center
	}
	button
	{
		area 255 158 18 25
		enabled "StoreSearchString ~= ''"
		text "X"
		text style "normal_parchment"
		text color "R"
		action
		"
			StoreSearchString = ''
		"
	}
	button --select everything, left side
	{
		area 396 152 30 30
		enabled "storeScreen:IsContainer()"
		clickable lua "areThereValidItems(filter(store.storeItems)) and storeScreen:IsContainer()"
		bam "4CHECK"
		sequence 1
		scaleToClip
		action
		"
			for k,v in ipairs(filter(store.storeItems)) do
				if v.valid == 1 and v.highlight == 0 then
					local idx = getIdx(store.storeItems, k)
					storeScreen:SelectStoreItem(idx - 1, true)
					local maxCount = v.maxCount
					if maxCount > 1 then
						storeScreen:SetStoreItemCount(idx - 1, maxCount)
					end
					if not storeScreen:IsBuyItemButtonClickable() then
						storeScreen:SelectStoreItem(idx - 1, false)
						break
					end
				end
			end
		"
		actionalt
		"
			for k,v in ipairs(filter(store.storeItems)) do
				if v.valid == 1 and v.highlight == 1 then
				local idx = getIdx(store.storeItems, k)
					storeScreen:SelectStoreItem(idx - 1, false)
					local maxCount = v.maxCount
					if maxCount > 1 then
						storeScreen:SetStoreItemCount(idx - 1, maxCount)
					end
					if not storeScreen:IsBuyItemButtonClickable() then
						storeScreen:SelectStoreItem(idx - 1, false)
						break
					end
				end
			end
		"
		actionDbl
		"
			for k,v in ipairs(filter(store.storeItems)) do
				if v.valid == 1 and v.highlight == 0 then
					local idx = getIdx(store.storeItems, k)
					storeScreen:SelectStoreItem(idx - 1, true)
					local maxCount = v.maxCount
					if maxCount > 1 then
						storeScreen:SetStoreItemCount(idx - 1, maxCount)
					end
					if not storeScreen:IsBuyItemButtonClickable() then
						storeScreen:SelectStoreItem(idx - 1, false)
						break
					end
				end
			end
			storeScreen:OnBuyItemButtonClick()
		"
	}
	button --select everything, right side
	{
		area 440 152 30 30
		clickable lua "areThereValidItems(store.groupItems)"
		bam "4CHECK"
		sequence 1
		scaleToClip
		action
		"
			for k,v in ipairs(store.groupItems) do
				if v.valid == 1 and v.highlight == 0 then
					storeScreen:SelectGroupItem(k - 1, true)
					local count = v.item.count
					local stock = v.numInStock or 0
					if count > 1 then
						storeScreen:SetGroupItemCount(k - 1, count)
					elseif stock > 1 then
						storeScreen:SetGroupItemCount(k - 1, stock)
					end
					if not storeScreen:IsSellItemButtonClickable() then
						storeScreen:SelectGroupItem(k - 1, false)
						break
					end
				end
			end
		"
		actionalt
		"
			for k,v in ipairs(store.groupItems) do
				if v.valid == 1 and v.highlight == 1 then
					storeScreen:SelectGroupItem(k - 1, false)
					local count = v.item.count
					local stock = v.numInStock or 0
					if count > 1 then
						storeScreen:SetGroupItemCount(k - 1, count)
					elseif stock > 1 then
						storeScreen:SetGroupItemCount(k - 1, stock)
					end
					if not storeScreen:IsSellItemButtonClickable() then
						storeScreen:SelectGroupItem(k - 1, false)
						break
					end
				end
			end
		"
		actionDbl
		"
			for k,v in ipairs(store.groupItems) do
				if v.valid == 1 and v.highlight == 0 then
					storeScreen:SelectGroupItem(k - 1, true)
					local count = v.item.count
					local stock = v.numInStock or 0
					if count > 1 then
						storeScreen:SetGroupItemCount(k - 1, count)
					elseif stock > 1 then
						storeScreen:SetGroupItemCount(k - 1, stock)
					end
					if not storeScreen:IsSellItemButtonClickable() then
						storeScreen:SelectGroupItem(k - 1, false)
						break
					end
				end
			end
			storeScreen:OnSellItemButtonClick()
		"
	}
	list
	{
		column 
		{ 
			width 396
			label
			{
				area 0 0 52 52
				bam GUISTMSC
				sequenceonce lua "rowNumber %9"
				frame lua "ticksStartingTwo ~= 0 and rowSelected == rowNumber and filter(store.storeItems)[rowNumber].valid == 1 and 1 or getStoreSlotHighlight(filter(store.storeItems)[rowNumber].highlight, filter(store.storeItems)[rowNumber].valid)"
				--tint lua "filter(store.storeItems)[rowNumber].item.tint"
				align center center
			}
			label
			{
				area 5 5 42 42
				bam GUISTMSC
				tint lua "filter(store.storeItems)[rowNumber].item.tint"
				opacity  0
				align center center
			}
			label
			{
				enabled "ticksStartingTwo == 0 or rowSelected ~= rowNumber or filter(store.storeItems)[rowNumber].valid == 0"
				area 0 0 52 52
				icon lua "filter(store.storeItems)[rowNumber].item.icon"
				tint lua "filter(store.storeItems)[rowNumber].item.tint"
				usages lua "filter(store.storeItems)[rowNumber].amountSelected" --how many selected
				count lua "no_ones_pls(filter(store.storeItems)[rowNumber].item.stackSize)" --How many to a stack
				greyscale lua "filter(store.storeItems)[rowNumber].valid == 0 and filter(store.storeItems)[rowNumber].highlight == 0"
				align center center
			}
			label
			{
				enabled "ticksStartingTwo ~= 0 and rowSelected == rowNumber and filter(store.storeItems)[rowNumber].valid == 1"
				area 2 2 52 52
				icon lua "filter(store.storeItems)[rowNumber].item.icon"
				tint lua "filter(store.storeItems)[rowNumber].item.tint"
				usages lua "filter(store.storeItems)[rowNumber].amountSelected" --how many selected
				count lua "no_ones_pls(filter(store.storeItems)[rowNumber].item.stackSize)" --How many to a stack
				align center center
			}
			label
			{
				area 65 0 204 54
				text lua "string.gsub(filter(store.storeItems)[rowNumber].label,'%(1%)','')" --remove '(1)' from item of which count ==1 like in the original game
				text style "normal_parchment"
				text color 'B'
				text align left top
				pad 0 7 0 0
			}
			label
			{
				area 300 0 91 54
				enabled "not storeScreen:IsContainer()"
				text lua "filter(store.storeItems)[rowNumber].value"
				text style "gold"
				text font 'POSTANTI'
				text color 'B'
			}
			label
			{
				enabled "filter(store.storeItems)[rowNumber].valid == 0 and filter(store.storeItems)[rowNumber].highlight == 0"
				area 50 0 325 54
				fill 0 0 0 155
			}
		}
		area 26 182 398 256
		hidehighlight
		rowheight	54
		table		"filter(store.storeItems)"
		var			"storeItemsVar"
		rowbackground	 GUISTBK3
		scrollbar 'GUISTSCR'
		action
		"
			local idx = getIdx(store.storeItems, storeItemsVar)
			if store.storeItems[idx].clickable == 1 then
				if not storeScreen:IsContainer() then
					if not storeScreen:IsCloseBagButtonClickable() or store.storeItems[idx].valid == 1 then
						local highlight = true
						if(store.storeItems[idx].highlight == 1) then highlight = false end
						storeScreen:SelectStoreItem(idx - 1,  highlight)
					end
				elseif (store.storeItems[idx].highlight == 1) then
					storeScreen:SelectStoreItem(idx - 1,  false)
				else
					storeScreen:SelectStoreItem(idx - 1,  true)
					local count = store.storeItems[idx].item.count or 0
					local stock = store.storeItems[idx].numInStock or 0
					if (count > 1) then
						storeScreen:SetStoreItemCount(idx - 1, count)
					elseif (stock > 1) then
						storeScreen:SetStoreItemCount(idx - 1, stock)
					end
				end
			end
			ticksPassed = 0
			ticksStartingTwo = 0
		"
		actionalt
		"
			local idx = getIdx(store.storeItems, storeItemsVar)
			showItemDescription(store.storeItems[idx].item, 1)
			ticksStartingTwo = 0
		"
		actionDbl
		"
		local idx = getIdx(store.storeItems, storeItemsVar)
			if store.storeItems[idx].clickable == 1 then
				if not storeScreen:IsCloseBagButtonClickable() or store.storeItems[idx].valid == 1 then
					local maxCount = store.storeItems[idx].maxCount
					if(maxCount > 1) then
						popupRequester(maxCount, storeSplitStack, false, store.storeItems[idx].item.icon)
						storeScreen:SelectStoreItem(idx - 1, false)
					end
				end
			end
			ticksStartingTwo = 0
		"
		actionUpdate 
		"	
			ticksStartingTwo = ticksStarting + 1
			if ticksStartingTwo > 10 then
				ticksPassed = ticksPassed + 1
				if ticksPassed > 3 then
					ticksPassed = 0
				end
			end
		"
	}
		
	label
	{
		area 469 156 369 26
		text  lua "Infinity_GetSelectedCharacterName()"
		text style "label"
		align left center
		text shadow 1
	}
	list
	{
		column 
		{ 
			width 100
			label
			{
				area 0 0 52 52
				bam GUISTMSC
				sequenceonce lua "rowNumber %9"
				frame lua "ticksStarting ~= 0 and rowSelected == rowNumber and (store.groupItems[rowNumber].valid == 1 or store.groupItems[rowNumber].item.isBag == 1) and 1 or getStoreSlotHighlight(store.groupItems[rowNumber].highlight, store.groupItems[rowNumber].valid)"
				--tint lua "store.groupItems[rowNumber].item.tint"
				align center center
			}
			label
			{
				area 5 5 42 42
				bam GUISTMSC
				tint lua "store.groupItems[rowNumber].item.tint"
				opacity  0
				align center center
			}
			label
			{
				enabled "store.groupItems[rowNumber].valid == 0 and store.groupItems[rowNumber].item.isBag ~= 1 or ticksStarting == 0 or rowSelected ~= rowNumber "
				area 0 0 52 52
				icon lua "store.groupItems[rowNumber].item.icon"
				count lua "no_ones_pls(store.groupItems[rowNumber].count)"
				usages lua "store.groupItems[rowNumber].item.usages"
				greyscale lua "store.groupItems[rowNumber].valid == 0 and store.groupItems[rowNumber].item.isBag ~= 1"
				align center center
			}
			label
			{
				enabled "ticksStarting ~= 0 and rowSelected == rowNumber and (store.groupItems[rowNumber].valid == 1 or store.groupItems[rowNumber].item.isBag == 1)"
				area 2 2 52 52
				icon lua "store.groupItems[rowNumber].item.icon"
				count lua "no_ones_pls(store.groupItems[rowNumber].count)"
				usages lua "store.groupItems[rowNumber].item.usages"
				align center center
			}
			label
			{
				area 65 0 204 54
				text lua "string.gsub(store.groupItems[rowNumber].label,'%(1%)','')"
				text style "normal_parchment"
				text color 'B'
				text align left top
				pad 0 7 0 0
			}
			label
			{
				area 310 0 91 54
				enabled "not storeScreen:IsContainer()"
				text lua "getValue(store.groupItems[rowNumber].value)"
				text style "gold"
				text font 'POSTANTI'
				text color 'B'
			}
			label
			{
				--#21242 We don't grey out bags, even though they're not selectable, because we can open them.
				enabled "store.groupItems[rowNumber].valid == 0  and store.groupItems[rowNumber].item.isBag ~= 1"
				area 50 0 325 54
				fill 0 0 0 155
			}
		}
		area 443 182 398 256
		enabled "not storeScreen:IsCloseBagButtonClickable()"
		hidehighlight
		rowheight	54
		table		"store.groupItems"
		var			"storeGroupItemsVar"
		rowbackground	 GUISTBK2
		scrollbar 'GUISTSCR'
		action
		"
			if store.groupItems[storeGroupItemsVar].valid ~= 0 then
				if (store.groupItems[storeGroupItemsVar].highlight == 1) then
					storeScreen:SelectGroupItem(storeGroupItemsVar - 1,  false)
				else
					storeScreen:SelectGroupItem(storeGroupItemsVar - 1,  true)
					local count = store.groupItems[storeGroupItemsVar].item.count or 0
					local stock = store.groupItems[storeGroupItemsVar].numInStock or 0
					if (count > 1) then
						storeScreen:SetGroupItemCount(storeGroupItemsVar - 1, count)
					elseif (stock > 1) then
						storeScreen:SetGroupItemCount(storeGroupItemsVar - 1, stock)
					end
				end
			end
			ticksPassed = 0
			ticksStarting = 0
		"
		actionalt
		"
			showItemDescription(store.groupItems[storeGroupItemsVar].item, 1)
			ticksStarting = 0
		"
		actionDbl
		"
		if(store.groupItems[storeGroupItemsVar].item.isBag == 1) then
				showItemDescription(store.groupItems[storeGroupItemsVar].item, 1)
				itemDescLeftButtonAction()
			else
				if store.groupItems[storeGroupItemsVar].valid ~= 0 then
					local count = store.groupItems[storeGroupItemsVar].item.count or 0
					local stock = store.groupItems[storeGroupItemsVar].numInStock or 0
					if(count > 1) then
						popupRequester(count, groupSplitStack, false, store.groupItems[storeGroupItemsVar].item.icon)
					elseif stock > 1 then
						popupRequester(stock, groupSplitStack, false, store.groupItems[storeGroupItemsVar].item.icon)
					end
					storeScreen:SelectGroupItem(storeGroupItemsVar - 1, false)
				end
			end
			ticksStarting = 0
		"
		actionUpdate 
		"	
			ticksStarting = ticksStarting + 1
			if ticksStarting > 10 then
				ticksPassed = ticksPassed + 1
				if ticksPassed > 3 then
					ticksPassed = 0
				end
			end
			rowSelected = nil
		"
	}

	list
	{
		column 
		{ 
			width 100
			label
			{
				area 0 0 52 52
				bam GUISTMSC
				sequenceonce lua "rowNumber %9"
				frame lua "ticksStarting ~= 0 and rowSelected == rowNumber and store.groupItems[rowNumber].valid == 1 and 1 or getStoreSlotHighlight(store.groupItems[rowNumber].highlight, store.groupItems[rowNumber].valid )"
				--tint lua "store.groupItems[rowNumber].item.tint"
				align center center
			}
			label
			{
				area 5 5 42 42
				bam GUISTMSC
				tint lua "store.groupItems[rowNumber].item.tint"
				opacity  0
				align center center
			}
			label
			{
				enabled "ticksStarting == 0 or rowSelected ~= rowNumber or store.groupItems[rowNumber].valid == 0"
				area 0 0 52 52
				tint lua "store.groupItems[rowNumber].item.tint"
				icon lua "store.groupItems[rowNumber].item.icon"
				count lua "no_ones_pls(store.groupItems[rowNumber].item.count)"
				usages lua "store.groupItems[rowNumber].count"
				greyscale lua "store.groupItems[rowNumber].valid == 0"
				align center center
			}
			label
			{
				enabled "ticksStarting ~= 0 and rowSelected == rowNumber and store.groupItems[rowNumber].valid == 1"
				area 2 2 52 52
				tint lua "store.groupItems[rowNumber].item.tint"
				icon lua "store.groupItems[rowNumber].item.icon"
				count lua "no_ones_pls(store.groupItems[rowNumber].item.count)"
				usages lua "store.groupItems[rowNumber].count"
				align center center
			}
			label
			{
				area 65 0 204 54
				text lua "string.gsub(store.groupItems[rowNumber].label,'%(1%)','')"
				text style "normal_parchment"
				text color 'B'
				text align left top
				pad 0 7 0 0
			}
			label
			{
				area 310 0 91 54
				enabled "not storeScreen:IsContainer()"
				text lua "store.groupItems[rowNumber].value"
				text style "gold"
				text font 'POSTANTI'
				text color 'B'
			}
			label
			{
				enabled "store.groupItems[rowNumber].valid == 0"
				area 50 0 325 54
				fill 0 0 0 155
			}
		}
		area 443 182 396 256
		enabled "storeScreen:IsCloseBagButtonClickable()"
		hidehighlight
		rowheight	54
		table		"store.groupItems"
		var			"storeGroupItemsVar"
		rowbackground	 GUISTBK5
		scrollbar 'GUISTSCR'
		action
		"
			if store.groupItems[storeGroupItemsVar].valid ~= 0 then
				if (store.groupItems[storeGroupItemsVar].highlight == 1) then
					storeScreen:SelectGroupItem(storeGroupItemsVar - 1,  false)
				else
					storeScreen:SelectGroupItem(storeGroupItemsVar - 1,  true)
					local count = store.groupItems[storeGroupItemsVar].item.count or 0
					local stock = store.groupItems[storeGroupItemsVar].numInStock or 0
					if (count > 1) then
						storeScreen:SetGroupItemCount(storeGroupItemsVar - 1, count)
					elseif (stock > 1) then
						storeScreen:SetGroupItemCount(storeGroupItemsVar - 1, stock)
					end
				end
			end
			cellNumber = nil
			rowNumber = nil
			ticksPassed = 0
			ticksStarting = 0
		"
		actionalt
		"
			showItemDescription(store.groupItems[storeGroupItemsVar].item, 1)
			ticksStarting = 0
		"
		actionDbl
		"
			if store.groupItems[storeGroupItemsVar].valid ~= 0 then
				local count = store.groupItems[storeGroupItemsVar].item.count or 0
				local stock = store.groupItems[storeGroupItemsVar].numInStock or 0
				if(count > 1) then
					popupRequester(count, groupSplitStack, false, store.groupItems[storeGroupItemsVar].item.icon)
				elseif stock > 1 then
					popupRequester(stock, groupSplitStack, false, store.groupItems[storeGroupItemsVar].item.icon)
				end
				storeScreen:SelectGroupItem(storeGroupItemsVar - 1, false)
			end
			ticksStarting = 0
		"
		actionUpdate 
		"	
			ticksStarting = ticksStarting + 1
			if ticksStarting > 10 then
				ticksPassed = ticksPassed + 1
				if ticksPassed > 3 then
					ticksPassed = 0
				end
			end
			rowSelected = nil
		"
	}
	
	
	button
	{
		area 206 522 157 32
		bam			GUIWPKPC
		ScaleToClip
		sequence	1
		text lua "checkContainerText('BUY_BUTTON', 'TO_BACKPACK_BUTTON')"
		text style "button"
		text shadow 1
		clickable lua "storeScreen:IsBuyItemButtonClickable() and storeScreen:GetStoreCost() <= game:GetPartyGold()"
		on return
		action
		"
			storeScreen:OnBuyItemButtonClick()
		"
	}
	button
	{
		area 622 522 157 32
		bam			GUIWPKPC
		ScaleToClip
		sequence	1
		text lua "checkContainerText('SELL_BUTTON','TO_CONTAINER_BUTTON')"
		text style "button"
		text shadow 1
		clickable lua "storeScreen:IsSellItemButtonClickable()"
		on return
		action
		"
			storeScreen:OnSellItemButtonClick()
		"
	}
	label --under button thingy
	{
		area 400 507 194 69
		bam 'BG_UND'
		enabled "(not storeScreen:IsContainer()) and storeScreen:IsStealEnabled()"
	}
	button
	{
		area 415 522 157 32
		enabled "(not storeScreen:IsContainer()) and storeScreen:IsStealEnabled()"
		bam			GUIWPKPC
		ScaleToClip
		sequence	1
		text "STEAL_BUTTON"
		text style "button"
		text shadow 1
		clickable lua "canSteal()"
		action
		"
			local toSteal = {}
			for k, v in pairs(store.storeItems) do
				if v.highlight == 1 then
					table.insert(toSteal, v.label)
					storeScreen:SelectStoreItem(k - 1,  false)
				end
			end

			for _, label in pairs(toSteal) do
				local steal = 0
				for k, v in pairs(store.storeItems) do
					if v.highlight == 1 then
						steal = 0
						break
					end
					if v.label == label then
						steal = k
					end
				end

				if steal == 0 then
					break
				end

				storeScreen:SelectStoreItem(steal - 1,  true)
				storeScreen:OnStealItemButtonClick()
			end
		"
	}
	label --under button thingy
	{
		area 400 507 194 69
		bam 'BG_UND'
		enabled "storeScreen:IsCloseBagButtonClickable()"
	}
	button
	{
		area 415 522 157 32
		enabled "storeScreen:IsCloseBagButtonClickable()"
		bam			GUIWPKPC
		ScaleToClip
		sequence	1
		text "CLOSE_CONTAINER_BUTTON"
		text style "button"
		text shadow 1
		on E
		action
		"
			storeScreen:OnCloseBagButtonClick()
		"
	}
	button
	{
		area 20 493 90 95
		encumbrance
	}
	
	label
	{
		area 26 152 400 328
		enabled "storeScreen:IsSpriteOrderable() == false"
		rectangle 0
		rectangle opacity 200
		ignoreEvents
	}

	label
	{
		area 443 152 400 328
		enabled "storeScreen:IsSpriteOrderable() == false"
		rectangle 0
		rectangle opacity 200
		ignoreEvents
	}

}
`
function areThereValidItems(tab)
	local out = {}
	for k, v in pairs(tab) do
		if v.valid == 1 then
			table.insert(out, v)
		end
	end
	
	if next(out) ~= nil then
		return true
	else return false
	end
	
end
`
menu
{
	name 'STORE_IDENTIFY'
	align center center
	ignoreEsc
	size 864 710
	onOpen
	"
		storeScreen:UpdateIdentifyPanel()
		store.identifyText = ''
		TT_BuildTitleData('IDENTIFY_TITLE', 309, true)
		TT_CreateTitleChars('IDENTIFY_TITLE', 'TT_IDENTIFY', 35, 'TEMPLATE_titlechar_IDENTIFY')
	"
	onclose	"TT_DestroyTitleChars('IDENTIFY_TITLE', 'TEMPLATE_titlechar_IDENTIFY')"
	label
	{
		area 0 0 864 598
		mosaic GUISTIDB
	}
	template
    {
        label
        {
            enabled "true"
            ignoreEvents
            area 0 0 -1 -1
            bam "TTREALMS"
            sequence lua "TT_TitleData['IDENTIFY_TITLE'][instanceId].seq"
            align center center
        }
        name "TEMPLATE_titlechar_IDENTIFY"
    }
	label
    {
        name "TT_IDENTIFY"
		area 36 35 309 35
		--text "IDENTIFY_TITLE"
		--text style "title"
    }
	label
	{
		area 452 24 316 68 --shadow
		text lua "Infinity_FetchString(storeScreen:GetStoreName())"
		text style "label"
		text point 27
		text color 5
	}
	label
	{
		area 454 26 316 68
		text lua "Infinity_FetchString(storeScreen:GetStoreName())"
		text style "label"
		text point 27
	}
	label
	{
		area 726 112 106 30
		text lua "game:GetPartyGold()"
		text style "gold"
		align center center
	}
	label
	{
		area 72 442 218 32
		text "COST_LABEL"
		text style "label"
		align right center
	}
	label
	{
		area 302 442 107 32
		bam 'BG_UND'
		sequence 1
		ScaleToClip
		text lua "storeScreen:GetIdentifyCost()"
		text style "normal"
		align center center
	}
	list
	{
		column 
		{ 
			width 100
			label
			{
				enabled "store.identifyItems[rowNumber].valid"
				area -14 0 200 54
				mosaic GUISTBK1
				respectClipping
			}
			label
			{
				enabled "store.identifyItems[rowNumber].valid"
				area 0 0 52 52
				bam GUISTMSC
				sequenceonce lua "rowNumber %9"
				frame lua "ticksStarting ~= 0 and rowSelected == rowNumber and 1 or getStoreSlotHighlight(store.identifyItems[rowNumber].highlight, store.identifyItems[rowNumber].valid)"
				align center center
			}
			label
			{
				enabled "store.identifyItems[rowNumber].valid"
				area 5 5 42 42
				bam GUISTMSC
				tint lua "store.identifyItems[rowNumber].item.tint"
				opacity  0
				align center center
			}
			label
			{
				enabled "store.identifyItems[rowNumber].valid == 1 and (ticksStarting == 0 or rowSelected ~= rowNumber)"
				area 0 0 52 52
				icon lua "store.identifyItems[rowNumber].item.icon"
				align center center
			}
			label
			{
				enabled "store.identifyItems[rowNumber].valid == 1 and (ticksStarting ~= 0 and rowSelected == rowNumber)"
				area 2 2 52 52
				icon lua "store.identifyItems[rowNumber].item.icon"
				align center center
			}
			label
			{
				enabled "store.identifyItems[rowNumber].valid"
				area 70 0 200 54
				text lua "string.gsub(store.identifyItems[rowNumber].label,'%(1%)','')"
				text style "normal_parchment"
				text color 'B'
				text align left top
				pad 0 7 0 0
			}
		}
		area 66 165 356 268
		hidehighlight
		rowheight	dynamic
		table		"store.identifyItems"
		var			"identifyItemsVar"
		scrollbar 'GUISTSCR'
		action
		"
			local highlight = store.identifyItems[identifyItemsVar].highlight ~= 1
			storeScreen:SelectIdentifyItem(identifyItemsVar - 1, highlight)
			ticksPassed = 0
			ticksStarting = 0
		"
		actionalt
		"
			showItemDescription(store.identifyItems[identifyItemsVar].item, 1)
			ticksStarting = 0
		"
		actionUpdate 
		"	
			ticksStarting = ticksStarting + 1
			if ticksStarting > 10 then
				ticksPassed = ticksPassed + 1
				if ticksPassed > 3 then
					ticksPassed = 0
				end
			end
			rowSelected = nil
		"
	}
	button
	{
		area 80 442 32 32
		enabled "areThereValidItems(store.identifyItems)"
		bam "4CHECK"
		sequence 1
		scaleToClip
		action
		"
			for k,v in ipairs(store.identifyItems) do
				if v.valid == 1 and v.highlight == 0 then
					storeScreen:SelectIdentifyItem(k - 1, true)
					if not storeScreen:IsIdentifyItemButtonClickable() then
						storeScreen:SelectIdentifyItem(k - 1, false)
						break
					end
				end
			end
		"
		actionalt
		"
			for k,v in ipairs(store.identifyItems) do
				if v.valid == 1 and v.highlight == 1 then
					storeScreen:SelectIdentifyItem(k - 1, false)
				end
			end
		"
	}
	button
	{
		area 162 524 157 32
		bam			GUIWPKPC
		ScaleToClip
		sequence	1
		text "IDENTIFY_BUTTON"
		text style "button"
		text shadow 1
		clickable lua "storeScreen:IsIdentifyItemButtonClickable() and storeScreen:GetIdentifyCost() <= game:GetPartyGold()"
		action
		"
			local keys = {}
			for k,v in pairs(store.identifyItems) do
				if v.highlight == 1 then
					table.insert(keys, k)
				end
			end
			storeScreen:OnIdentifyItemButtonClick()
			for k,v in pairs(keys) do
				local item = store.identifyItems[v].item
				local str = '^0xFF000080' .. item.name .. '^-\n' .. item.description
				identifyText = trim(identifyText .. '\n\n' .. str)
			end
			Infinity_PlaySound('GAM_44')		
			"
	}
	text
	{
		area 526 192 278 348
		text lua "identifyText"
		text style "normal_parchment"
		scrollbar 'GUIKNSBR'
	}
}
`
function getDonationFrame()
	if(store.hasDonated ~= nil and store.hasDonated == 1) then
		return 17
	else
		return 0
	end
end
storeDonateAmountEdit = 0 --no longer used in ui, but the engine needs it.
function changeDonationAmount(amount)
	if (amt == nil) then
		amt = 0
	end
	amt = amt + amount

	if (amt > 0) then
		storeDonateAmountEdit = tostring(amt)
	else
		storeDonateAmountEdit = '0'
		amt = 0
	end
end

function buildrepCheatSheet()
	repCheatSheet = {}

	local rep_ = {"---", 5000, 2500, 2000, 1500, 1000, 800, 500, 300, 200, 100 ,150, 300, 500, 600, 1000, 1200, 1500}
	table.insert(repCheatSheet, {1, Infinity_FetchString(9465), t(JFStrings.Required_Donation)})
	for i=1,18 do
		table.insert(repCheatSheet, {2, 19-i, rep_[i]})
	end
end
`
menu
{
	name 'STORE_DONATE'
	align center center
	ignoreEsc
	size 864 710
	onOpen 
	"
		storeScreen:UpdateDonatePanel()
		store.donateText = ''
		buildrepCheatSheet()
		toggleRepCheatSheet = 0
		TT_BuildTitleData('DONATE_TITLE', 309, true)
		TT_CreateTitleChars('DONATE_TITLE', 'TT_DONATE', 35, 'TEMPLATE_titlechar_DONATE')
	"
	onclose	"TT_DestroyTitleChars('DONATE_TITLE', 'TEMPLATE_titlechar_DONATE'); storeDonateAmountEdit=0"

	label
	{
		area 0 0 864 598
		mosaic GUISTDOB
	}
	template
    {
        label
        {
            enabled "true"
            ignoreEvents
            area 0 0 -1 -1
            bam "TTREALMS"
            sequence lua "TT_TitleData['DONATE_TITLE'][instanceId].seq"
            align center center
        }
        name "TEMPLATE_titlechar_DONATE"
    }
	label
    {
        name "TT_DONATE"
		area 36 35 309 35
		--text "DONATE_TITLE"
		--text style "title"
    }
	label
	{
		area 452 24 316 68 --shadow
		text lua "Infinity_FetchString(storeScreen:GetStoreName())"
		text style "label"
		text point 27
		text color 5
	}
	label
	{
		area 454 26 316 68
		text lua "Infinity_FetchString(storeScreen:GetStoreName())"
		text style "label"
		text point 27
	}
	label
	{
		enabled "checkIfBaseGame()"
		area 108 178 284 187
		bam "DONATE"
		ScaleToClip
		frame lua "getDonationFrame()"
	}
	label
	{
		area 82 418 310 36
		text "ENTER_DONATION_LABEL"
		text style "label"
		text point 18
		text shadow 1
		text align left center
	}
	edit
	{
		name		"storeDonateAmountEditArea"
		area	242 464 96 26
		var			storeDonateAmountEdit
		text style	"edit"
		text align center center
		maxlines	1
		fill            112 111 111 64
	}
	button
	{
		bam GUIOSW
		area 345 460 34 34
		sequence 0
		ScaleToClip
		clickable lua "tonumber(storeDonateAmountEdit) < tonumber(game:GetPartyGold())"
		action
		"
			changeDonationAmount(1)
		"
		actionHold
		"
			changeDonationAmount(1)
		"
		actionAlt
		"
			changeDonationAmount(100)
		"
	}
	button
	{
		bam GUIOSW
		area 379 460 34 34
		sequence 1
		ScaleToClip
		clickable lua "tonumber(storeDonateAmountEdit) > 0"
		action
		"
			changeDonationAmount(-1)
		"
		actionHold
		"
			changeDonationAmount(-1)
		"
		actionAlt
		"
			changeDonationAmount(-100)
		"
	}
	--HIDDEN STUFF START
	button
	{
		bam GUIOSW
		area 730 152 121 94
		sequence 3
		toggle toggleRepCheatSheet
		action "Infinity_PlaySound('GAM_05')"
	}
	list
	{
		column
		{
			width 100						
			label
			{
				area		0 0 140 25
				--mosaic		INVSEP3
				enabled		"repCheatSheet[rowNumber][1] == 1"
				text		lua "repCheatSheet[rowNumber][2]"
				text style  'bold_parchment'
				text point 14
				text align center center
				text useFontZoom 0
			}
			label
			{
				area		120 0 140 25
				enabled		"repCheatSheet[rowNumber][1] == 1"
				text		lua "repCheatSheet[rowNumber][3]"
				text style  'bold_parchment'
				text point 14
				text align left center
				text useFontZoom 0
			}
			label
			{
				area		0 0 140 18
				enabled		"repCheatSheet[rowNumber][1] == 2"
				text		lua "repCheatSheet[rowNumber][2]"
				text style 'normal_parchment'
				text point 12
				text align center center
			}
			label
			{
				area		120 0 140 18
				enabled		"repCheatSheet[rowNumber][1] == 2"
				text		lua "repCheatSheet[rowNumber][3]"
				text style 'normal_parchment'
				text point 10
				text align left center
			}
		}
		enabled toggleRepCheatSheet
		area 492 204 282 356
		rowheight dynamic
		table "repCheatSheet"
		hidehighlight
		scrollbar 'GUIKNSBR'
	}
	label
	{
		enabled toggleRepCheatSheet
		area 492 183 282 32
		text lua "Infinity_FetchString(characters[currentID].proficiencies.reputation.strRef) .. ': ' ..  characters[currentID].proficiencies.reputation.current"
		text style "label"
		text point 14
		text color 	'L'
		align center top
	}
	
	--HIDDEN STUFF END
	button
	{
		area 68 538 157 32
		bam			GUIWPKPC
		ScaleToClip
		sequence	1
		text "DONATE_BUTTON"
		text style "button"
		text shadow 1
		clickable lua "storeScreen:IsDonateButtonClickable()"
		action
		"
			storeScreen:OnDonateButtonClick()
			toggleRepCheatSheet = 0
			if not checkIfBaseGame() then Infinity_PlayMovie('donate', 'donatemovie' ) end
		"
	}
	label
	{
		area 726 112 106 30
		text lua "game:GetPartyGold()"
		text style "gold"
		align center center
	}
	
	text
	{
		enabled "toggleRepCheatSheet== 0"
		area 524 192 278 354
		text lua "store.donateText"
		text style "normal_parchment"
		scrollbar 'GUIKNSBR'
	}
	movie
	{
		name "donatemovie"
		area 108 178 284 187
	}
}
`
	function storeRest()
		storeScreen:RestParty()
	end
`
menu
{
	name 'STORE_ROOMS'
	align center center
	size 864 710
	onOpen 
	"
		storeScreen:SetRoomType(0)
		storeScreen:UpdateRentRoomPanel()
	TT_BuildTitleData('ROOMS_TITLE', 309, true)
	TT_CreateTitleChars('ROOMS_TITLE', 'TT_ROOMS', 35, 'TEMPLATE_titlechar_ROOMS')
	"
	onclose	"TT_DestroyTitleChars('ROOMS_TITLE', 'TEMPLATE_titlechar_ROOMS')"
	ignoreEsc
	label
	{
		area 0 0 864 598
		mosaic GUISTROB
	}
	template
    {
        label
        {
            enabled "true"
            ignoreEvents
            area 0 0 -1 -1
            bam "TTREALMS"
            sequence lua "TT_TitleData['ROOMS_TITLE'][instanceId].seq"
            align center center
        }
        name "TEMPLATE_titlechar_ROOMS"
    }
	label
    {
        name "TT_ROOMS"
		area 36 35 309 35
		--text "ROOMS_TITLE"
		--text style "title"
    }
	label
	{
		area 452 24 316 68 --shadow
		text lua "Infinity_FetchString(storeScreen:GetStoreName())"
		text style "label"
		text point 27
		text color 5
	}
	label
	{
		area 454 26 316 68
		text lua "Infinity_FetchString(storeScreen:GetStoreName())"
		text style "label"
		text point 27
	}
	label
	{
		area 726 112 106 30
		text lua "game:GetPartyGold()"
		text style "gold"
		align center center
	}
	
	button
	{
		area 24 167 245 161
		bam "INNROOMS"
		sequence 0
		clickable lua "storeScreen:IsRoomTypeClickable(1)"
		action
		"
			storeScreen:SetRoomType(1)
			selectedRoom = Infinity_FindUIItemByName('BUTTON_room_peasant')
		"
		actionDbl
		"
			storeScreen:SetRoomType(1)
			storeScreen:OnRentRoomButtonClick()
		"
	}
	button
	{
		name "BUTTON_room_peasant"
		area 24 334 245 29
		bam GUISTROC
		ScaleToClip
		sequenceonce lua "Infinity_RandomNumber(0, 3)"
		text "PEASANT_BUTTON"
		text style "button"
		text shadow 1
		frame lua "storeScreen:GetRoomType() == 1 and 2 or 0"
		clickable lua "storeScreen:IsRoomTypeClickable(1)"
		action
		"
			storeScreen:SetRoomType(1)
		"
	}
	
	button
	{
		area 298 167 245 161
		bam "INNROOMS"
		sequence 1
		clickable lua "storeScreen:IsRoomTypeClickable(2)"
		action
		"
			storeScreen:SetRoomType(2)
			selectedRoom = Infinity_FindUIItemByName('BUTTON_room_merchant')
		"
		actionDbl
		"
			storeScreen:SetRoomType(2)
			storeScreen:OnRentRoomButtonClick()
		"
	}
	button
	{
		name "BUTTON_room_merchant"
		area 298 334 245 29
		bam GUISTROC
		ScaleToClip
		sequenceonce lua "Infinity_RandomNumber(0, 3)"
		text "MERCHANT_BUTTON"
		text style "button"
		text shadow 1
		frame lua "storeScreen:GetRoomType() == 2 and 2 or 0"
		clickable lua "storeScreen:IsRoomTypeClickable(2)"
		action
		"
			storeScreen:SetRoomType(2)
		"
	}
	
	button
	{
		area 24 380 245 161
		bam "INNROOMS"
		sequence 2
		clickable lua "storeScreen:IsRoomTypeClickable(3)"
		frame 0
		action
		"
			storeScreen:SetRoomType(3)
			selectedRoom = Infinity_FindUIItemByName('BUTTON_room_noble')
		"
		actionDbl
		"
			storeScreen:SetRoomType(3)
			storeScreen:OnRentRoomButtonClick()
		"
	}
	button
	{
		name "BUTTON_room_noble"
		area 24 547 245 29
		bam GUISTROC
		ScaleToClip
		sequenceonce lua "Infinity_RandomNumber(0, 3)"
		text "NOBLE_BUTTON"
		text style "button"
		text shadow 1
		frame lua "storeScreen:GetRoomType() == 3 and 2 or 0"
		clickable lua "storeScreen:IsRoomTypeClickable(3)"
		action
		"
			storeScreen:SetRoomType(3)
		"
	}
	
	button
	{
		area 298 380 245 161
		bam "INNROOMS"
		sequence 3
		clickable lua "storeScreen:IsRoomTypeClickable(4)"
		action
		"
			storeScreen:SetRoomType(4)
			selectedRoom = Infinity_FindUIItemByName('BUTTON_room_royal')
		"
		actionDbl
		"
			storeScreen:SetRoomType(4)
			storeScreen:OnRentRoomButtonClick()
		"
	}
	button
	{
		name "BUTTON_room_royal"
		area 298 547 245 29
		bam GUISTROC
		ScaleToClip
		sequenceonce lua "Infinity_RandomNumber(0, 3)"
		text "ROYAL_BUTTON"
		text style "button"
		text shadow 1
		frame lua "storeScreen:GetRoomType() == 4 and 2 or 0"
		clickable lua "storeScreen:IsRoomTypeClickable(4)"
		action
		"
			storeScreen:SetRoomType(4)
		"

	}
	label
	{
		area 596 474 92 29
		text "COST_LABEL"
		text style "label"
	}
	text
	{
		area 606 180 196 240
		text lua "store.roomText"
		text style "normal_parchment"
		scrollbar 'GUIKNSBR'
	}
	label
	{
		area 694 474 133 28
		text lua "storeScreen:GetRoomCost()"
		text style "gold"
	}
	button
	{
		area 652 524 157 32
		bam			GUIWPKPC
		ScaleToClip
		sequence	1
		text "RENT_BUTTON"
		text style "button"
		text shadow 1
		clickable lua "storeScreen:GetRoomCost() <= game:GetPartyGold()"
		action
		"
			storeScreen:OnRentRoomButtonClick()
		"
	}
}
menu
{
	name 'STORE_HEALING'
	align center center
	ignoreEsc
	size 864 710
	onOpen 
	"
	storeScreen:UpdateBuySpellPanel()
	TT_BuildTitleData('HEALING_TITLE', 309, true)
	TT_CreateTitleChars('HEALING_TITLE', 'TT_HEALING', 35, 'TEMPLATE_titlechar_HEALING')
	"
	onclose	"TT_DestroyTitleChars('HEALING_TITLE', 'TEMPLATE_titlechar_HEALING')"
	label
	{
		area 0 0 864 598
		mosaic GUISTIDB
	}
	template
    {
        label
        {
            enabled "true"
            ignoreEvents
            area 0 0 -1 -1
            bam "TTREALMS"
            sequence lua "TT_TitleData['HEALING_TITLE'][instanceId].seq"
            align center center
        }
        name "TEMPLATE_titlechar_HEALING"
    }
	label
    {
        name "TT_HEALING"
		area 36 35 309 35
		--text "HEALING_TITLE"
		--text style "title"
    }
	label
	{
		area 452 24 316 68 --shadow
		text lua "Infinity_FetchString(storeScreen:GetStoreName())"
		text style "label"
		text point 27
		text color 5
	}
	label
	{
		area 454 26 316 68
		text lua "Infinity_FetchString(storeScreen:GetStoreName())"
		text style "label"
		text point 27
	}
	label
	{
		area 726 112 106 30
		text lua "game:GetPartyGold()"
		text style "gold"
		align center center
	}
	label
	{
		area 72 442 218 32
		text "COST_LABEL"
		text style "label"
		align right center
	}
	label
	{
		area 302 442 107 32
		bam 'BG_UND'
		sequence 1
		ScaleToClip
		text lua "storeScreen:GetSpellCost()"
		text style "normal"
		align center center
	}
	list
	{
		column 
		{ 
			width 100
			label
			{
				area 0 0 52 52
				bam GUISTMSC
				sequenceonce lua "rowNumber %9"
				frame lua "ticksStarting ~= 0 and rowSelected == rowNumber and store.healingSpells[rowNumber].valid == 1 and 1 or getStoreSlotHighlight(store.healingSpells[rowNumber].highlight, store.healingSpells[rowNumber].valid)"
				--tint lua "store.healingSpells[rowNumber].tint"
				align center center
			}
			label
			{
				area 5 5 42 42
				bam GUISTMSC
				tint lua "store.healingSpells[rowNumber].tint"
				opacity  0
				align center center
			}
			label
			{
				enabled "ticksStarting == 0 or rowSelected ~= rowNumber or store.healingSpells[rowNumber].valid == 0"
				area 0 0 52 52
				icon lua "store.healingSpells[rowNumber].icon"
				greyscale lua "store.healingSpells[rowNumber].valid == 0"
				align center center
			}
			label
			{
				enabled "ticksStarting ~= 0 and rowSelected == rowNumber and store.healingSpells[rowNumber].valid == 1"
				area 2 2 52 52
				icon lua "store.healingSpells[rowNumber].icon"
				align center center
			}
			label
			{
				area 70 0 200 54
				text lua "Infinity_FetchString(store.healingSpells[rowNumber].name)"
				text style "normal_parchment"
				text color 'B'
				text align left center
			}
			label
			{
				area 270 0 60 54
				text style "gold"
				text font 'POSTANTI'
				text color 'B'
				text lua "store.healingSpells[rowNumber].value"
			}
			label
			{
				enabled "store.healingSpells[rowNumber].valid == 0"
				area  54 0 280 54
				fill 0 0 0 155
			}
		}
		area 66 165 356 268
		hidehighlight
		rowheight	54
		table		"store.healingSpells"
		var			"healingSpellsVar"
		rowbackground	 GUISTBK1
		scrollbar 'GUISTSCR'
		action
		"
			local highlight = true
			if(store.healingSpells[healingSpellsVar].highlight == 1) then highlight = false end
			if(highlight == true and store.healingSpells[healingSpellsVar].valid == 0) then return end
			storeScreen:SelectSpellItem( healingSpellsVar - 1,  highlight)
			ticksPassed = 0
			ticksStarting = 0
		"
		actionAlt
		"
			local spell = store.healingSpells[healingSpellsVar]
			popupDetails(16189, spell.name, spell.description,spell.icon)
			ticksStarting = 0
		"
		actionDbl
		"
			if storeScreen:GetSpellCost() <= game:GetPartyGold() then storeScreen:OnBuySpellButtonClick() end
			ticksPassed = 0
			ticksStarting = 0
		"
		actionUpdate 
		"	
			ticksStarting = ticksStarting + 1
			if ticksStarting > 10 then
				ticksPassed = ticksPassed + 1
				if ticksPassed > 3 then
					ticksPassed = 0
				end
			end
			rowSelected = nil
		"
	}
	button
	{
		area 162 524 157 32
		bam			GUIWPKPC
		ScaleToClip
		sequence	1
		text "BUY_BUTTON"
		text style "button"
		text shadow 1
		clickable lua "storeScreen:GetSpellCost() > 0 and storeScreen:GetSpellCost() <= game:GetPartyGold()"
		action
		"
			storeScreen:OnBuySpellButtonClick()
			store.spellText = ''
		"
	}
	text
	{
		area 526 192 278 348
		text lua "store.spellText"
		text style "normal_parchment"
		scrollbar 'GUIKNSBR'
	}
}
`
function onDrinkOptionClick()
	if storeDrinksVar ~= nil and storeDrinksVar ~= 0 then
				storeScreen:OnBuyDrinkButtonClick(storeDrinksVar - 1)
				storeDrinksVar = nil
		end
	storeDrinksVar = nil
end
`
menu
{
	name 'STORE_DRINKS'
	align center center
	size 864 710
	ignoreEsc
	onOpen 
	"
		storeScreen:UpdateBuyDrinksPanel()
		computeSplitPosition(t('RUMORS_LABEL'), 'rumorsLabelSplit')
		store.drinkText = ''
		TT_BuildTitleData('DRINKS_TITLE', 309, true)
		TT_CreateTitleChars('DRINKS_TITLE', 'TT_DRINKS', 35, 'TEMPLATE_titlechar_DRINKS')
	"
	onclose	"TT_DestroyTitleChars('DRINKS_TITLE', 'TEMPLATE_titlechar_DRINKS')"
	
	label
	{
		area 0 0 864 598
		mosaic GUISTIDD
	}
	template
    {
        label
        {
            enabled "true"
            ignoreEvents
            area 0 0 -1 -1
            bam "TTREALMS"
            sequence lua "TT_TitleData['DRINKS_TITLE'][instanceId].seq"
            align center center
        }
        name "TEMPLATE_titlechar_DRINKS"
    }
	label
    {
        name "TT_DRINKS"
		area 36 35 309 35
		--text "DRINKS_TITLE"
		--text style "title"
    }
	label
	{
		area 452 24 316 68 --shadow
		text lua "Infinity_FetchString(storeScreen:GetStoreName())"
		text style "label"
		text point 27
		text color 5
	}
	label
	{
		area 454 26 316 68
		text lua "Infinity_FetchString(storeScreen:GetStoreName())"
		text style "label"
		text point 27
	}
	label
	{
		area 726 112 106 30
		text lua "game:GetPartyGold()"
		text style "gold"
		align center center
	}
	label
	{
		area 82 174 194 28
		text "DRINK_LABEL"
		text style "label"
		text align left center
		text shadow 1
	}
	label
	{
		area 326 174 94 28
		text "COST_LABEL"
		text style "label"
		text align center center
		text shadow 1
	}
	list
	{
		column 
		{ 
			width 100
			button
			{
				area 5 0 263 71
				bam GUISTDRC
				ScaleToClip
				sequenceonce lua "rowNumber % 4"
				frame lua "storeDrinksVar == rowNumber and 1 or 0"
				clickable lua "store.drinks[rowNumber].value <= game:GetPartyGold()"
			}
			button
			{
				enabled "store.drinks[rowNumber].valid == 1 and storeDrinksVar ~= rowNumber"
				area 5 0 263 71
				clickable lua "store.drinks[rowNumber].value <= game:GetPartyGold()"
				text lua "store.drinks[rowNumber].name"
				text style "label"
				text align center center
				text shadow 1
			}
			button
			{
				enabled "store.drinks[rowNumber].valid == 1 and storeDrinksVar == rowNumber"
				area 7 2 263 71
				clickable lua "store.drinks[rowNumber].value <= game:GetPartyGold()"
				text lua "store.drinks[rowNumber].name"
				text style "label"
				text align center center
				text shadow 1
			}
			label
			{
				
				area 270 0 68 71
				text lua "store.drinks[rowNumber].value"
				text style "gold"
				text color "B"
				text align center center
				text shadow 1
			}
		}
		area 74 202 346 358
		rowheight	71
		table		"store.drinks"
		var			"storeDrinksVar"
		hideHighlight
		scrollbar clunkyScroll 71
		scrollbar 'GUISTSCR'
		action
		"
			onDrinkOptionClick()
		"
		actionUpdate "cellNumber = nil"
	}
	label
	{
		name "rumorsLabelSplit"
		enabled "false"
		area 0 0 134 18
		text lua "t('RUMORS_LABEL'):sub(startPos, curPos)"
		text style "label_parchment"
		scrollbar 'GUIKNSBR'
	}
	list
	{
		column
		{
			width 100
			label
			{
				enabled "rowNumber == 1"
				area 0 0 60 57
				bam INITIALS
				ScaleToClip
				sequence lua "t('RUMORS_LABEL'):byte(startPos - 1) - 1"
			}
			label
			{
				enabled "rowNumber == 1"
				area 60 0 -1 -1
				text lua "t('RUMORS_LABEL'):sub(startPos, splitPos - 1)"
				text style "label_parchment"
				text align left top
				pad 4 8 0 0
				text point 14
				text color 'L'
			}
			label
			{
				enabled "rowNumber == 2"
				area 0 0 -1 -1
				text lua "t('RUMORS_LABEL'):sub(splitPos + 1)"
				text style "label_parchment"
				text point 14
				text color 'L'
			}
		}
		enabled "splitPos ~= -1"
		rowheight dynamic
		hidehighlight
		table "makeTable(2)"
		area 554 192 154 90
		scrollbar 'GUIKNSBR'
	}
	text
	{
		enabled "splitPos == -1"
		area 524 184 184 80
		text lua "t('RUMORS_LABEL')"
		scrollbar 'GUIKNSBR'
		text style "label_parchment"
		text color 'L'
	}
	label
	{
		area 708 184 94 80
		bam lua "store.qualityIcon"
	}
	text
	{
		area 524 264 278 280
		text lua "store.drinkText"
		text style "normal_parchment"
		scrollbar 'GUIKNSBR'
	}
}
`
	storePanelButtonHighlightGroup = nil
	function setStoreMainPanel(buttonId)
		local oldMenu  = storeScreen:GetMenuName(storeCurMenuId)
		Infinity_PopMenu(oldMenu)
		storeCurMenuId = storeScreen:GetPanelButtonPanelId(buttonId)
		Infinity_PushMenu(storeScreen:GetMenuName(storeCurMenuId))
	end
	function getBuySellTooltip()
		if(storeScreen:IsContainer()) then
			return t('TRANSFER_ITEMS_TOOLTIP')
		else
			return Infinity_FetchString(storeScreen:GetPanelButtonToolTip(0))
		end
	end
`
menu
{
	name 'STORE_CHOOSER'
	align center center
	size 864 710

	onOpen
	"
		identifyText = ''
		local menuName = storeScreen:GetMenuName(storeCurMenuId)
		Infinity_PushMenu(menuName)
		pushSidebars()
		local buttonId = storeScreen:GetPanelButtonId(storeCurMenuId)
		storePanelButtonHighlightGroup = Infinity_FindUIItemByName('BUTTON_storechooser_' .. buttonId)
	"
	onClose 
	"
		local menuName = storeScreen:GetMenuName(storeCurMenuId)
		Infinity_PopMenu(menuName)
		popSidebars()
	"
	ignoreEsc
	
	label
	{
		area 0 598 864 112
		mosaic GUISTBBB
	}
	label
	{
		area 16 604 112 98
		bam lua "store.icon"
		ScaleToClip
	}
	button
	{
		area 622 652 200 32
		bam			GUIWPKPC
		ScaleToClip
		sequence	1
		text "DONE_BUTTON"
		text style "button"
		text shadow 1
		on escape
		action
		"
			storeScreen:OnMainDoneButtonClick()
		"
	}
	button
	{
		name 'BUTTON_storechooser_0'
		area 139 604 96 102
		enabled "storeScreen:GetPanelButtonEnabled(0)"
		bam GUISTBBC
		ScaleToClip
		highlightgroup storePanelButtonHighlightGroup
		sequence lua "storeScreen:GetPanelButtonSequence(0)"
		tooltip lua "getBuySellTooltip()"
		on Q
		action
		"
			setStoreMainPanel(0)
		"
	}
	button
	{
		name 'BUTTON_storechooser_1'
		area 240 604 96 102
		enabled "storeScreen:GetPanelButtonEnabled(1)"
		bam GUISTBBC
		ScaleToClip
		highlightgroup storePanelButtonHighlightGroup
		sequence lua "storeScreen:GetPanelButtonSequence(1)"
		tooltip lua "Infinity_FetchString(storeScreen:GetPanelButtonToolTip(1))"
		on W
		action
		"
			setStoreMainPanel(1)
		"
	}
	button
	{
		name 'BUTTON_storechooser_2'
		area 341 604 96 102
		enabled "storeScreen:GetPanelButtonEnabled(2)"
		bam GUISTBBC
		ScaleToClip
		highlightgroup storePanelButtonHighlightGroup
		sequence lua "storeScreen:GetPanelButtonSequence(2)"
		tooltip lua "Infinity_FetchString(storeScreen:GetPanelButtonToolTip(2))"
		on E
		action
		"
			setStoreMainPanel(2)
		"
	}
	button
	{
		name 'BUTTON_storechooser_3'
		area 442 604 96 102
		enabled "storeScreen:GetPanelButtonEnabled(3)"
		bam GUISTBBC
		ScaleToClip
		highlightgroup storePanelButtonHighlightGroup
		sequence lua "storeScreen:GetPanelButtonSequence(3)"
		tooltip lua "Infinity_FetchString(storeScreen:GetPanelButtonToolTip(3))"
		on R
		action
		"
			setStoreMainPanel(3)
		"
	}
}

`
	function worldDeathLoadClickable()
		if(e:IsMultiplayer() and not e:IsHosting()) then
			return false
		end
		return not worldScreen:GetHardPaused()
	end
	function worldDeathQuitClickable()
		return not worldScreen:GetHardPaused()
	end
	function worldDeathText()
		if(e:IsMultiplayer()) then
			if(e:IsHosting()) then
				return Infinity_FetchString(19377)
			else
				return Infinity_FetchString(11331)
			end
		else
			if(worldDeathStr == nil) then
				return Infinity_FetchString(16498)
			else
				return Infinity_FetchString(worldDeathStr)
			end
		end
	end
	function worldDeathQuitText()
		if(e:IsMultiplayer()) then
			return t('LOGOUT_BUTTON')
		else
			return t('QUIT_BUTTON')
		end
	end
	groundItemsButtonToggle = 0
	highlightButtonToggle = 0
	worldChatEdit = ""
`
menu
{
	name "WORLD_DEATH"
	align center center
	ignoreEsc
	modal
	label
	{
		area 0 0 792 215
		mosaic GUIDEATH
	}
	label
	{
		area 204 8 384 126
		text lua "worldDeathText()"
		text style	"label"
		text point 18
		text shadow 1
		text align center center
	}
	button
	{
		area 213 150 162 30
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text "LOAD_BUTTON"
		text style	"button"
		text shadow 1
		clickable lua "worldDeathLoadClickable()"
		action 
		"
			Infinity_PopMenu()
			worldScreen:OnDeathLoad()
		"
	}
	button
	{
		area 416 150 162 30
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text style	"button"
		text shadow 1
		text lua "worldDeathQuitText()"
		clickable lua "worldDeathQuitClickable()"
		action 
		"
			Infinity_PopMenu()
			worldScreen:OnDeathQuit()
		"
	}
}
`
	actionBarTooltip = {}
`
menu
{
	name "WORLD_ACTIONBAR"
	align center bottom
	offset 0 3
	onOpen 
	"
		toolbarTop = 50
		Infinity_PushMenu('WORLD_MESSAGES')
		if(groundItemsButtonToggle == 1) then
			worldScreen:StartGroundItems()
		end
		worldScreen:SetHighlightEnabled(highlightButtonToggle == 1)
	"
	onClose 
	"
		Infinity_PopMenu('WORLD_QUICKLOOT');
		Infinity_PopMenu('WORLD_MESSAGES');
	"
	ignoreEsc
	label
	{
		area 0 0 794 66
		mosaic GUWBTP10
	}
	button
	{
		area 20 5 52 52
		bam LOOT
		scaleToClip
		toggle groundItemsButtonToggle
		tooltip lua "Infinity_FetchString(32217)"
		action
		"
			if(groundItemsButtonToggle == 1) then
				worldScreen:StartGroundItems()
			else
				worldScreen:StopGroundItems()
			end
		"
		actionAlt
		"
			if(groundItemsButtonToggle == 1) then
				worldScreen:StartGroundItems()
			else
				worldScreen:StopGroundItems()
			end
		"
	}
	button
	{
		area 101 5 52 52
		actionBar 0
		enabled "buttonArray:GetButtonEnabled(0)"
		tooltip lua "actionBarTooltip[0]"
		action "buttonArray:OnLButtonPressed(0)"
		actionAlt "buttonArray:OnRButtonPressed(0)"
	}
	button
	{
		area 153 5 52 52
		actionBar 1
		enabled "buttonArray:GetButtonEnabled(1)"
		tooltip lua "actionBarTooltip[1]"
		action "buttonArray:OnLButtonPressed(1)"
		actionAlt "buttonArray:OnRButtonPressed(1)"
	}
	button
	{
		area 205 5 52 52
		actionBar 2
		enabled "buttonArray:GetButtonEnabled(2)"
		tooltip lua "actionBarTooltip[2]"
		action "buttonArray:OnLButtonPressed(2)"
		actionAlt "buttonArray:OnRButtonPressed(2)"
	}
	button
	{
		area 257 5 52 52
		actionBar 3
		enabled "buttonArray:GetButtonEnabled(3)"
		tooltip lua "actionBarTooltip[3]"
		action "buttonArray:OnLButtonPressed(3)"
		actionAlt "buttonArray:OnRButtonPressed(3)"
	}
	button
	{
		area 309 5 52 52
		actionBar 4
		enabled "buttonArray:GetButtonEnabled(4)"
		tooltip lua "actionBarTooltip[4]"
		action "buttonArray:OnLButtonPressed(4)"
		actionAlt "buttonArray:OnRButtonPressed(4)"
	}
	button
	{
		area 361 5 52 52
		actionBar 5
		enabled "buttonArray:GetButtonEnabled(5)"
		tooltip lua "actionBarTooltip[5]"
		action "buttonArray:OnLButtonPressed(5)"
		actionAlt "buttonArray:OnRButtonPressed(5)"
	}
	button
	{
		area 413 5 52 52
		actionBar 6
		enabled "buttonArray:GetButtonEnabled(6)"
		tooltip lua "actionBarTooltip[6]"
		action "buttonArray:OnLButtonPressed(6)"
		actionAlt "buttonArray:OnRButtonPressed(6)"
	}
	button
	{
		area 465 5 52 52
		actionBar 7
		enabled "buttonArray:GetButtonEnabled(7)"
		tooltip lua "actionBarTooltip[7]"
		action "buttonArray:OnLButtonPressed(7)"
		actionAlt "buttonArray:OnRButtonPressed(7)"
	}
	
	button
	{
		area 517 5 52 52
		actionBar 8
		enabled "buttonArray:GetButtonEnabled(8)"
		tooltip lua "actionBarTooltip[8]"
		action "buttonArray:OnLButtonPressed(8)"
		actionAlt "buttonArray:OnRButtonPressed(8)"
	}
	button
	{
		area 569 5 52 52
		actionBar 9
		enabled "buttonArray:GetButtonEnabled(9)"
		tooltip lua "actionBarTooltip[9]"
		action "buttonArray:OnLButtonPressed(9)"
		actionAlt "buttonArray:OnRButtonPressed(9)"
	}
	button
	{
		area 621 5 52 52
		bam STONSLOT
		sequence 2
		actionBar 10
		enabled "buttonArray:GetButtonEnabled(10)"
		tooltip lua "actionBarTooltip[10]"
		action "buttonArray:OnLButtonPressed(10)"
		actionAlt "buttonArray:OnRButtonPressed(10)"
	}
	button
	{
		area 673 5 52 52
		actionBar 11
		enabled "buttonArray:GetButtonEnabled(11)"
		tooltip lua "actionBarTooltip[11]"
		action "buttonArray:OnLButtonPressed(11)"
		actionAlt "buttonArray:OnRButtonPressed(11)"
	}
}
`
	loot = 
	{
		containerItems = {},
		groupItems = {},
		groundItems = {}
	}	
	containerBigMode = 0
	function getContainerItemProperty(index, property)
		local idxScrolled = index + worldScreen:GetTopContainerItem()
		if(loot.containerItems[idxScrolled] == nil or loot.containerItems[idxScrolled].item == nil) then
			return nil
		end
		return loot.containerItems[idxScrolled].item[property]
	end
	function getGroupItemProperty(index, property)
		local idxScrolled = index + worldScreen:GetTopGroupItem()
		if(loot.groupItems[idxScrolled] == nil or loot.groupItems[idxScrolled].item == nil) then
			return nil
		end
		return loot.groupItems[idxScrolled].item[property]
	end
	function scrollContainerItems()
		if scrollDirection > 0 then
			if worldScreen:ContainerScrollEnabled(-1) then
				worldScreen:OnContainerScroll(-1)
				if containerBigMode == 1 then worldScreen:OnContainerScroll(-1); worldScreen:OnContainerScroll(-1) end
			end
		elseif scrollDirection < 0 then
			if worldScreen:ContainerScrollEnabled(1) then
				worldScreen:OnContainerScroll(1)
				if containerBigMode == 1 then worldScreen:OnContainerScroll(1); worldScreen:OnContainerScroll(1) end
			end
		end
	end
	function scrollGroupItems()
		if scrollDirection > 0 then
			if worldScreen:GroupScrollEnabled(-1)  then
				worldScreen:OnGroupScroll(-1)
			end
		elseif scrollDirection < 0 then
			if worldScreen:GroupScrollEnabled(1) then
				worldScreen:OnGroupScroll(1)
			end
		end
	end
	function showContainerItemDescription(index)
		local idxScrolled = index + worldScreen:GetTopContainerItem()
		if(loot.containerItems[idxScrolled] == nil or loot.containerItems[idxScrolled].item == nil) then
			return nil
		end
		Infinity_GetContainerItemDescription(idxScrolled)
		showItemDescription(loot.containerItems[idxScrolled].item, 2)
	end
	function showGroupItemDescription(index)
		local idxScrolled = index + worldScreen:GetTopGroupItem()
		if(loot.groupItems[idxScrolled] == nil or loot.groupItems[idxScrolled].item == nil) then
			return nil
		end
		Infinity_GetGroupItemDescription(idxScrolled)
		showItemDescription(loot.groupItems[idxScrolled].item, 2)
	end
`
menu
{
	name "WORLD_CONTAINER"
	align center bottom
	offset 160 0
	ignoreesc
	onOpen 
	"
	if Infinity_GetScreenSize() < 1030 then containerBigMode = 0
	if containerBigMode = 0 then Infinity_SetOffset('WORLD_CONTAINER', 160, nil) else Infinity_SetOffset('WORLD_CONTAINER', 0, nil) end
	"
	label
	{
		enabled "containerBigMode == 0"
		area 0 0 653 130
		mosaic gmpwmsg0
	}
	button
	{
		enabled "containerBigMode == 0 and getMovingFrame('containerIcon')==0"
		area 4 14 100 100
		bam lua "loot.containerIcon"
		ScaleToClip
		clickable lua "getContainerItemProperty(0,'icon') ~=nil or worldScreen:ContainerScrollEnabled(-1)"
		tooltip lua 'JFStrings.takeAll or "[E]"'
		tooltip force top
		useOverlayTint "getContainerItemProperty(0,'icon') ==nil"
		overlayTint 180 180 180
		action
		"
			getClick(Infinity_GetFrameCounter(), 'containerIcon')
			worldScreen:TakeAllFromContainer()
		"
	}
	button
	{
		enabled "containerBigMode == 0 and getMovingFrame('containerIcon')==1"
		area 6 16 100 100
		bam lua "loot.containerIcon"
		ScaleToClip
		useOverlayTint "getContainerItemProperty(0,'icon') ==nil"
		overlayTint 180 180 180
	}
	label 
	{
		enabled "containerBigMode == 0"
		on E action
		"
			Infinity_PlaySound('GAM_09')
			worldScreen:TakeAllFromContainer()
		"
	}
	button
	{
		enabled "containerBigMode == 0"
		area 104 0 196 118
		actionScroll "scrollContainerItems()"
	}
	button
	{
		enabled "containerBigMode == 0"
		area 108 8 52 52
		bam STONSL10
		tooltip lua	"getContainerItemProperty(0,'name')"
		tint lua	"getContainerItemProperty(0,'tint')"
		icon lua	"getContainerItemProperty(0,'icon')"
		count lua	"getContainerItemProperty(0,'count')"
		usages lua	"getContainerItemProperty(0,'usages')"
		action		"worldScreen:OnContainerButtonClick(0)"
		actionAlt	"showContainerItemDescription(0)"
		actionScroll "scrollContainerItems()"
	}
	button
	{
		enabled "containerBigMode == 0"
		area 162 8 52 52
		bam STONSL10
		tooltip lua	"getContainerItemProperty(1,'name')"
		tint lua	"getContainerItemProperty(1,'tint')"
		icon lua	"getContainerItemProperty(1,'icon')"
		count lua	"getContainerItemProperty(1,'count')"
		usages lua	"getContainerItemProperty(1,'usages')"
		action		"worldScreen:OnContainerButtonClick(1)"
		actionAlt	"showContainerItemDescription(1)"
		actionScroll "scrollContainerItems()"
	}
	button
	{
		enabled "containerBigMode == 0"
		area 216 8 52 52
		bam STONSL10
		tooltip lua	"getContainerItemProperty(2,'name')"
		tint lua	"getContainerItemProperty(2,'tint')"
		icon lua	"getContainerItemProperty(2,'icon')"
		count lua	"getContainerItemProperty(2,'count')"
		usages lua	"getContainerItemProperty(2,'usages')"
		action		"worldScreen:OnContainerButtonClick(2)"
		actionAlt	"showContainerItemDescription(2)"
		actionScroll "scrollContainerItems()"
	}
	button
	{
		enabled "containerBigMode == 0"
		area 108 62 52 52
		bam STONSL10
		tooltip lua	"getContainerItemProperty(3,'name')"
		tint lua	"getContainerItemProperty(3,'tint')"
		icon lua	"getContainerItemProperty(3,'icon')"
		count lua	"getContainerItemProperty(3,'count')"
		usages lua	"getContainerItemProperty(3,'usages')"
		action		"worldScreen:OnContainerButtonClick(3)"
		actionAlt	"showContainerItemDescription(3)"
		actionScroll "scrollContainerItems()"
	}
	button
	{
		enabled "containerBigMode == 0"
		area 162 62 52 52
		bam STONSL10
		tooltip lua	"getContainerItemProperty(4,'name')"
		tint lua	"getContainerItemProperty(4,'tint')"
		icon lua	"getContainerItemProperty(4,'icon')"
		count lua	"getContainerItemProperty(4,'count')"
		usages lua	"getContainerItemProperty(4,'usages')"
		action		"worldScreen:OnContainerButtonClick(4)"
		actionAlt	"showContainerItemDescription(4)"
		actionScroll "scrollContainerItems()"
	}
	button
	{
		enabled "containerBigMode == 0"
		area 216 62 52 52
		bam STONSL10
		tooltip lua	"getContainerItemProperty(5,'name')"
		tint lua	"getContainerItemProperty(5,'tint')"
		icon lua	"getContainerItemProperty(5,'icon')"
		count lua	"getContainerItemProperty(5,'count')"
		usages lua	"getContainerItemProperty(5,'usages')"
		action		"worldScreen:OnContainerButtonClick(5)"
		actionAlt	"showContainerItemDescription(5)"
		actionScroll "scrollContainerItems()"
	}
	button
	{
		enabled "containerBigMode == 0"
		area 272 22 33 33
		enabled "worldScreen:ContainerScrollEnabled(-1)"
		bam guisv10
		sequence 0
		scaleToClip
		action
		"
			worldScreen:OnContainerScroll(-1)
		"
		actionScroll "scrollContainerItems()"
	}
	button
	{
		enabled "containerBigMode == 0"
		area 272 66 33 33
		enabled "worldScreen:ContainerScrollEnabled(1)"
		bam guisv10
		sequence 1
		scaleToClip
		action
		"
			worldScreen:OnContainerScroll(1)
		"
		actionScroll "scrollContainerItems()"
	}
	label
	{
		enabled "containerBigMode == 0"
		area 332 18 68 100
		encumbrance
	}
	button
	{
		enabled "containerBigMode == 0"
		area 390 2 162 116
		actionScroll "scrollGroupItems()"
	}
	button
	{
		enabled "containerBigMode == 0"
		area 415 8 52 52
		bam STONSL10
		tooltip lua	"getGroupItemProperty(0,'name')"
		tint lua	"getGroupItemProperty(0,'tint')"
		icon lua	"getGroupItemProperty(0,'icon')"
		count lua	"getGroupItemProperty(0,'count')"
		usages lua	"getGroupItemProperty(0,'usages')"
		action		"worldScreen:OnContainerButtonClick(10)"
		actionAlt	"showGroupItemDescription(0)"
		actionScroll "scrollGroupItems()"
	}
	button
	{
		enabled "containerBigMode == 0"
		area 469 8 52 52
		bam STONSL10
		tooltip lua	"getGroupItemProperty(1,'name')"
		tint lua	"getGroupItemProperty(1,'tint')"
		icon lua	"getGroupItemProperty(1,'icon')"
		count lua	"getGroupItemProperty(1,'count')"
		usages lua	"getGroupItemProperty(1,'usages')"
		action		"worldScreen:OnContainerButtonClick(11)"
		actionAlt	"showGroupItemDescription(1)"
		actionScroll "scrollGroupItems()"
	}
	button
	{
		enabled "containerBigMode == 0"
		area 415 62 52 52
		bam STONSL10
		tooltip lua	"getGroupItemProperty(2,'name')"
		tint lua	"getGroupItemProperty(2,'tint')"
		icon lua	"getGroupItemProperty(2,'icon')"
		count lua	"getGroupItemProperty(2,'count')"
		usages lua	"getGroupItemProperty(2,'usages')"
		action		"worldScreen:OnContainerButtonClick(12)"
		actionAlt	"showGroupItemDescription(2)"
		actionScroll "scrollGroupItems()"
	}
	button
	{
		enabled "containerBigMode == 0"
		area 469 62 52 52
		bam STONSL10
		tooltip lua	"getGroupItemProperty(3,'name')"
		tint lua	"getGroupItemProperty(3,'tint')"
		icon lua	"getGroupItemProperty(3,'icon')"
		count lua	"getGroupItemProperty(3,'count')"
		usages lua	"getGroupItemProperty(3,'usages')"
		action		"worldScreen:OnContainerButtonClick(13)"
		actionAlt	"showGroupItemDescription(3)"
		actionScroll "scrollGroupItems()"
	}
	button
	{
		enabled "worldScreen:GroupScrollEnabled(-1) and containerBigMode == 0"
		area 520 22 33 33
		bam guisv10
		scaleToClip
		sequence 0
		action
		"
			worldScreen:OnGroupScroll(-1)
		"
		actionScroll "scrollGroupItems()"
	}
	button
	{
		enabled "worldScreen:GroupScrollEnabled(1) and containerBigMode == 0"
		area 520 66 33 33
		bam guisv10
		sequence 1
		scaleToClip
		action
		"
			worldScreen:OnGroupScroll(1)
		"
	}
	label
	{
		enabled "containerBigMode == 0"
		area 558 88 86 30
		text lua "game:GetPartyGold()"
		text style "gold"
	}
	button
	{
		enabled "containerBigMode == 0 and Infinity_GetScreenSize() > 1030"
		area 613 8 28 26
		bam GUIOSW
		ScaleToClip
		sequence 2
		toggle containerBigMode
		action "
		containerBigMode = 1
		Infinity_SetOffset('WORLD_CONTAINER', 0, nil)
		repeat 
			worldScreen:OnGroupScroll(-1)
			worldScreen:OnContainerScroll(-1)
		until (worldScreen:GroupScrollEnabled(-1) == false)
		"
		actionAlt""
	}
	label
	{
		enabled "containerBigMode == 1"
		area 0 0 1020 130
		mosaic gmpwmsg1
	}
	button
	{
		enabled "containerBigMode == 1 and getMovingFrame('containerIcon')==0"
		area 4 14 100 100
		bam lua "loot.containerIcon"
		ScaleToClip
		clickable lua "getContainerItemProperty(0,'icon') ~=nil or worldScreen:ContainerScrollEnabled(-1)"
		tooltip lua 'JFStrings.takeAll'
		tooltip force top
		useOverlayTint "getContainerItemProperty(0,'icon') ==nil"
		overlayTint 180 180 180
		action
		"
			getClick(Infinity_GetFrameCounter(), 'containerIcon')
			worldScreen:TakeAllFromContainer()
			repeat 
			worldScreen:OnGroupScroll(-1)
			worldScreen:OnContainerScroll(-1)
			until (worldScreen:GroupScrollEnabled(-1) == false)
		"
	}
	button
	{
		enabled "containerBigMode == 1 and getMovingFrame('containerIcon')==1"
		area 6 16 100 100
		bam lua "loot.containerIcon"
		ScaleToClip
		useOverlayTint "getContainerItemProperty(0,'icon') ==nil"
		overlayTint 180 180 180
	}
	label 
	{
		enabled "containerBigMode == 1"
		on E action
		"
			Infinity_PlaySound('GAM_09')
			worldScreen:TakeAllFromContainer()
			repeat 
			worldScreen:OnGroupScroll(-1)
			worldScreen:OnContainerScroll(-1)
			until (worldScreen:GroupScrollEnabled(-1) == false)
		"
	}
	button
	{
		enabled "containerBigMode == 1"
		area 104 2 308 116
		actionScroll "scrollContainerItems()"
	}
	button
	{
		enabled "containerBigMode == 1"
		area 103 8 52 52
		bam STONSL10
		tooltip lua	"getContainerItemProperty(0,'name')"
		tint lua	"getContainerItemProperty(0,'tint')"
		icon lua	"getContainerItemProperty(0,'icon')"
		count lua	"getContainerItemProperty(0,'count')"
		usages lua	"getContainerItemProperty(0,'usages')"
		action		"
		worldScreen:OnContainerButtonClick(0)
		repeat 
		worldScreen:OnGroupScroll(-1)
		until (worldScreen:GroupScrollEnabled(-1) == false)
		"
		actionAlt	"showContainerItemDescription(0)"
		actionScroll "scrollContainerItems()"
	}
	button
	{
		enabled "containerBigMode == 1"
		area 157 8 52 52
		bam STONSL10
		tooltip lua	"getContainerItemProperty(1,'name')"
		tint lua	"getContainerItemProperty(1,'tint')"
		icon lua	"getContainerItemProperty(1,'icon')"
		count lua	"getContainerItemProperty(1,'count')"
		usages lua	"getContainerItemProperty(1,'usages')"
		action		"
		worldScreen:OnContainerButtonClick(1)
		repeat 
		worldScreen:OnGroupScroll(-1)
		until (worldScreen:GroupScrollEnabled(-1) == false)
		"
		actionAlt	"showContainerItemDescription(1)"
		actionScroll "scrollContainerItems()"
	}
	button
	{
		enabled "containerBigMode == 1"
		area 211 8 52 52
		bam STONSL10
		tooltip lua	"getContainerItemProperty(2,'name')"
		tint lua	"getContainerItemProperty(2,'tint')"
		icon lua	"getContainerItemProperty(2,'icon')"
		count lua	"getContainerItemProperty(2,'count')"
		usages lua	"getContainerItemProperty(2,'usages')"
		action		"
		worldScreen:OnContainerButtonClick(2)
		repeat 
		worldScreen:OnGroupScroll(-1)
		until (worldScreen:GroupScrollEnabled(-1) == false)
		"
		actionAlt	"showContainerItemDescription(2)"
		actionScroll "scrollContainerItems()"
	}
	button
	{
		enabled "containerBigMode == 1"
		area 265 8 52 52
		bam STONSL10
		tooltip lua	"getContainerItemProperty(3,'name')"
		tint lua	"getContainerItemProperty(3,'tint')"
		icon lua	"getContainerItemProperty(3,'icon')"
		count lua	"getContainerItemProperty(3,'count')"
		usages lua	"getContainerItemProperty(3,'usages')"
		action		"
		worldScreen:OnContainerButtonClick(3)
		repeat 
		worldScreen:OnGroupScroll(-1)
		until (worldScreen:GroupScrollEnabled(-1) == false)
		"
		actionAlt	"showContainerItemDescription(3)"
		actionScroll "scrollContainerItems()"
	}
	button
	{
		enabled "containerBigMode == 1"
		area 319 8 52 52
		bam STONSL10
		tooltip lua	"getContainerItemProperty(4,'name')"
		tint lua	"getContainerItemProperty(4,'tint')"
		icon lua	"getContainerItemProperty(4,'icon')"
		count lua	"getContainerItemProperty(4,'count')"
		usages lua	"getContainerItemProperty(4,'usages')"
		action		"
		worldScreen:OnContainerButtonClick(4)
		repeat 
		worldScreen:OnGroupScroll(-1)
		until (worldScreen:GroupScrollEnabled(-1) == false)
		"
		actionAlt	"showContainerItemDescription(4)"
		actionScroll "scrollContainerItems()"
	}
	button
	{
		enabled "containerBigMode == 1"
		area 103 62 52 52
		bam STONSL10
		tooltip lua	"getContainerItemProperty(5,'name')"
		tint lua	"getContainerItemProperty(5,'tint')"
		icon lua	"getContainerItemProperty(5,'icon')"
		count lua	"getContainerItemProperty(5,'count')"
		usages lua	"getContainerItemProperty(5,'usages')"
		action		"
		worldScreen:OnContainerButtonClick(5)
		repeat 
		worldScreen:OnGroupScroll(-1)
		until (worldScreen:GroupScrollEnabled(-1) == false)
		"
		actionAlt	"showContainerItemDescription(5)"
		actionScroll "scrollContainerItems()"
	}
	button
	{
		enabled "containerBigMode == 1"
		area 157 62 52 52
		bam STONSL10
		tooltip lua	"getContainerItemProperty(6,'name')"
		tint lua	"getContainerItemProperty(6,'tint')"
		icon lua	"getContainerItemProperty(6,'icon')"
		count lua	"getContainerItemProperty(6,'count')"
		usages lua	"getContainerItemProperty(6,'usages')"
		action		"
		if (getContainerItemProperty(6,'icon') ~= nil) then
		worldScreen:OnContainerScroll(2)
		worldScreen:OnContainerButtonClick(0)
		worldScreen:OnContainerScroll(-2)
		repeat 
		worldScreen:OnGroupScroll(-1)
		until (worldScreen:GroupScrollEnabled(-1) == false)
		end
		"
		actionAlt	"showContainerItemDescription(6)"
		actionScroll "scrollContainerItems()"
	}
	button
	{
		enabled "containerBigMode == 1"
		area 211 62 52 52
		bam STONSL10
		tooltip lua	"getContainerItemProperty(7,'name')"
		tint lua	"getContainerItemProperty(7,'tint')"
		icon lua	"getContainerItemProperty(7,'icon')"
		count lua	"getContainerItemProperty(7,'count')"
		usages lua	"getContainerItemProperty(7,'usages')"
		action		"
		if (getContainerItemProperty(7,'icon') ~= nil) then
		worldScreen:OnContainerScroll(2)
		worldScreen:OnContainerButtonClick(1)
		worldScreen:OnContainerScroll(-2)
		repeat 
		worldScreen:OnGroupScroll(-1)
		until (worldScreen:GroupScrollEnabled(-1) == false)
		end
		"
		actionAlt	"showContainerItemDescription(7)"
		actionScroll "scrollContainerItems()"
	}
	button
	{
		enabled "containerBigMode == 1"
		area 265 62 52 52
		bam STONSL10
		tooltip lua	"getContainerItemProperty(8,'name')"
		tint lua	"getContainerItemProperty(8,'tint')"
		icon lua	"getContainerItemProperty(8,'icon')"
		count lua	"getContainerItemProperty(8,'count')"
		usages lua	"getContainerItemProperty(8,'usages')"
		action		"
		if (getContainerItemProperty(8,'icon') ~= nil) then
		worldScreen:OnContainerScroll(2)
		worldScreen:OnContainerButtonClick(2)
		worldScreen:OnContainerScroll(-2)
		repeat 
			worldScreen:OnGroupScroll(-1)
		until (worldScreen:GroupScrollEnabled(-1) == false)
		end
		"
		actionAlt	"showContainerItemDescription(8)"
		actionScroll "scrollContainerItems()"
	}
	button
	{
		enabled "containerBigMode == 1"
		area 319 62 52 52
		bam STONSL10
		tooltip lua	"getContainerItemProperty(9,'name')"
		tint lua	"getContainerItemProperty(9,'tint')"
		icon lua	"getContainerItemProperty(9,'icon')"
		count lua	"getContainerItemProperty(9,'count')"
		usages lua	"getContainerItemProperty(9,'usages')"
		action		"
			if (getContainerItemProperty(9,'icon') ~= nil) then
			worldScreen:OnContainerScroll(2)
			worldScreen:OnContainerButtonClick(3)
			worldScreen:OnContainerScroll(-2)
		repeat 
			worldScreen:OnGroupScroll(-1)
		until (worldScreen:GroupScrollEnabled(-1) == false)
		end
		"
		actionAlt	"showContainerItemDescription(9)"
		actionScroll "scrollContainerItems()"
	}
	button
	{
		area 373 22 33 33
		enabled "worldScreen:ContainerScrollEnabled(-1) and containerBigMode == 1"
		bam guisv10
		sequence 0
		scaleToClip
		action
		"
			worldScreen:OnContainerScroll(-1)
			worldScreen:OnContainerScroll(-1)
			worldScreen:OnContainerScroll(-1)
		"
		actionhold "worldScreen:OnContainerScroll(-1)"
		actionScroll "scrollContainerItems()"
	}
	button
	{
		area 373 66 33 33
		enabled "worldScreen:ContainerScrollEnabled(1) and containerBigMode == 1 and getContainerItemProperty(9,'icon') ~=nil"
		bam guisv10
		sequence 1
		scaleToClip
		action
		"
			worldScreen:OnContainerScroll(1)
			worldScreen:OnContainerScroll(1)
			worldScreen:OnContainerScroll(1)
		"
		actionhold "worldScreen:OnContainerScroll(1)"
		actionScroll "scrollContainerItems()"
	}
	button
	{
		enabled "containerBigMode == 1"
		area 421 12 68 100
		encumbrance
	}
	button
	{
		enabled "containerBigMode == 1"
		area 495 8 52 52
		bam STONSL10
		tint lua	"getGroupItemProperty(0,'tint')"
		icon lua	"getGroupItemProperty(0,'icon')"
		count lua	"getGroupItemProperty(0,'count')"
		usages lua	"getGroupItemProperty(0,'usages')"
		tooltip lua	"getGroupItemProperty(0,'name')"
		action		"worldScreen:OnContainerButtonClick(10)"
		actionAlt	"showGroupItemDescription(0)"
		
	}
	button
	{
		enabled "containerBigMode == 1"
		area 549 8 52 52
		bam STONSL10
		tint lua	"getGroupItemProperty(2,'tint')"
		icon lua	"getGroupItemProperty(2,'icon')"
		count lua	"getGroupItemProperty(2,'count')"
		usages lua	"getGroupItemProperty(2,'usages')"
		tooltip lua	"getGroupItemProperty(2,'name')"
		action		"worldScreen:OnContainerButtonClick(12)"
		actionAlt	"showGroupItemDescription(2)"
		
	}
	button
	{
		enabled "containerBigMode == 1"
		area 603 8 52 52
		bam STONSL10
		tint lua	"getGroupItemProperty(4,'tint')"
		icon lua	"getGroupItemProperty(4,'icon')"
		count lua	"getGroupItemProperty(4,'count')"
		usages lua	"getGroupItemProperty(4,'usages')"
		tooltip lua	"getGroupItemProperty(4,'name')"
		action		"
		worldScreen:OnGroupScroll(2)
		worldScreen:OnContainerButtonClick(10)
		worldScreen:OnGroupScroll(-2)
		"
		actionAlt	"showGroupItemDescription(4)"
		
	}
	button
	{
		enabled "containerBigMode == 1"
		area 657 8 52 52
		bam STONSL10
		tint lua	"getGroupItemProperty(6,'tint')"
		icon lua	"getGroupItemProperty(6,'icon')"
		count lua	"getGroupItemProperty(6,'count')"
		usages lua	"getGroupItemProperty(6,'usages')"
		tooltip lua	"getGroupItemProperty(6,'name')"
		action		"
		worldScreen:OnGroupScroll(3)
		worldScreen:OnContainerButtonClick(10)
		worldScreen:OnGroupScroll(-3)
		"
		actionAlt	"showGroupItemDescription(6)"
		
	}
	button
	{
		enabled "containerBigMode == 1"
		area 711 8 52 52
		bam STONSL10
		tint lua	"getGroupItemProperty(8,'tint')"
		icon lua	"getGroupItemProperty(8,'icon')"
		count lua	"getGroupItemProperty(8,'count')"
		usages lua	"getGroupItemProperty(8,'usages')"
		tooltip lua	"getGroupItemProperty(8,'name')"
		action		"
		worldScreen:OnGroupScroll(4)
		worldScreen:OnContainerButtonClick(10)
		worldScreen:OnGroupScroll(-4)
		"
		actionAlt	"showGroupItemDescription(8)"
	}
	button
	{
		enabled "containerBigMode == 1"
		area 765 8 52 52
		bam STONSL10
		tint lua	"getGroupItemProperty(10,'tint')"
		icon lua	"getGroupItemProperty(10,'icon')"
		count lua	"getGroupItemProperty(10,'count')"
		usages lua	"getGroupItemProperty(10,'usages')"
		tooltip lua	"getGroupItemProperty(10,'name')"
		action		"
		worldScreen:OnGroupScroll(5)
		worldScreen:OnContainerButtonClick(10)
		worldScreen:OnGroupScroll(-5)
		"
		actionAlt	"showGroupItemDescription(10)"	
	}
	button
	{
		enabled "containerBigMode == 1"
		area 819 8 52 52
		bam STONSL10
		tint lua	"getGroupItemProperty(12,'tint')"
		icon lua	"getGroupItemProperty(12,'icon')"
		count lua	"getGroupItemProperty(12,'count')"
		usages lua	"getGroupItemProperty(12,'usages')"
		tooltip lua	"getGroupItemProperty(12,'name')"
		action		"
		worldScreen:OnGroupScroll(6)
		worldScreen:OnContainerButtonClick(10)
		worldScreen:OnGroupScroll(-6)
		"
		actionAlt	"showGroupItemDescription(12)"
	}
	button
	{
		enabled "containerBigMode == 1"
		area 873 8 52 52
		bam STONSL10
		tint lua	"getGroupItemProperty(14,'tint')"
		icon lua	"getGroupItemProperty(14,'icon')"
		count lua	"getGroupItemProperty(14,'count')"
		usages lua	"getGroupItemProperty(14,'usages')"
		tooltip lua	"getGroupItemProperty(14,'name')"
		action		"
		worldScreen:OnGroupScroll(7)
		worldScreen:OnContainerButtonClick(10)
		worldScreen:OnGroupScroll(-7)
		"
		actionAlt	"showGroupItemDescription(14)"
	}
	button
	{
		enabled "containerBigMode == 1"
		area 495 62 52 52
		bam STONSL10
		tint lua	"getGroupItemProperty(1,'tint')"
		icon lua	"getGroupItemProperty(1,'icon')"
		count lua	"getGroupItemProperty(1,'count')"
		usages lua	"getGroupItemProperty(1,'usages')"
		tooltip lua	"getGroupItemProperty(1,'name')"
		action		"worldScreen:OnContainerButtonClick(11)"
		actionAlt	"showGroupItemDescription(1)"
		
	}
	button
	{
		enabled "containerBigMode == 1"
		area 549 62 52 52
		bam STONSL10
		tint lua	"getGroupItemProperty(3,'tint')"
		icon lua	"getGroupItemProperty(3,'icon')"
		count lua	"getGroupItemProperty(3,'count')"
		usages lua	"getGroupItemProperty(3,'usages')"
		tooltip lua	"getGroupItemProperty(3,'name')"
		action		"worldScreen:OnContainerButtonClick(13)"
		actionAlt	"showGroupItemDescription(3)"
	}
	button
	{
		enabled "containerBigMode == 1"
		area 603 62 52 52
		bam STONSL10
		tint lua	"getGroupItemProperty(5,'tint')"
		icon lua	"getGroupItemProperty(5,'icon')"
		count lua	"getGroupItemProperty(5,'count')"
		usages lua	"getGroupItemProperty(5,'usages')"
		tooltip lua	"getGroupItemProperty(5,'name')"
		action		"
		worldScreen:OnGroupScroll(2)
		worldScreen:OnContainerButtonClick(11)
		worldScreen:OnGroupScroll(-2)
		"
		actionAlt	"showGroupItemDescription(5)"
	}
	button
	{
		enabled "containerBigMode == 1"
		area 657 62 52 52
		bam STONSL10
		tint lua	"getGroupItemProperty(7,'tint')"
		icon lua	"getGroupItemProperty(7,'icon')"
		count lua	"getGroupItemProperty(7,'count')"
		usages lua	"getGroupItemProperty(7,'usages')"
		tooltip lua	"getGroupItemProperty(7,'name')"
		action		"
		worldScreen:OnGroupScroll(3)
		worldScreen:OnContainerButtonClick(11)
		worldScreen:OnGroupScroll(-3)
		"
		actionAlt	"showGroupItemDescription(7)"
	}
	button
	{
		enabled "containerBigMode == 1"
		area 711 62 52 52
		bam STONSL10
		tint lua	"getGroupItemProperty(9,'tint')"
		icon lua	"getGroupItemProperty(9,'icon')"
		count lua	"getGroupItemProperty(9,'count')"
		usages lua	"getGroupItemProperty(9,'usages')"
		tooltip lua	"getGroupItemProperty(9,'name')"
		action		"
		worldScreen:OnGroupScroll(4)
		worldScreen:OnContainerButtonClick(11)
		worldScreen:OnGroupScroll(-4)
		"
		actionAlt	"showGroupItemDescription(9)"
	}
	button
	{
		enabled "containerBigMode == 1"
		area 765 62 52 52
		bam STONSL10
		tint lua	"getGroupItemProperty(11,'tint')"
		icon lua	"getGroupItemProperty(11,'icon')"
		count lua	"getGroupItemProperty(11,'count')"
		usages lua	"getGroupItemProperty(11,'usages')"
		tooltip lua	"getGroupItemProperty(11,'name')"
		action		"
		worldScreen:OnGroupScroll(5)
		worldScreen:OnContainerButtonClick(11)
		worldScreen:OnGroupScroll(-5)
		"
		actionAlt	"showGroupItemDescription(11)"
	}
	button
	{
		enabled "containerBigMode == 1"
		area 819 62 52 52
		bam STONSL10
		tint lua	"getGroupItemProperty(13,'tint')"
		icon lua	"getGroupItemProperty(13,'icon')"
		count lua	"getGroupItemProperty(13,'count')"
		usages lua	"getGroupItemProperty(13,'usages')"
		tooltip lua	"getGroupItemProperty(13,'name')"
		action		"
		worldScreen:OnGroupScroll(6)
		worldScreen:OnContainerButtonClick(11)
		worldScreen:OnGroupScroll(-6)
		"
		actionAlt	"showGroupItemDescription(13)"
	}
	button
	{
		enabled "containerBigMode == 1"
		area 873 62 52 52
		bam STONSL10
		tint lua	"getGroupItemProperty(15,'tint')"
		icon lua	"getGroupItemProperty(15,'icon')"
		count lua	"getGroupItemProperty(15,'count')"
		usages lua	"getGroupItemProperty(15,'usages')"
		tooltip lua	"getGroupItemProperty(15,'name')"
		action		"
		worldScreen:OnGroupScroll(7)
		worldScreen:OnContainerButtonClick(11)
		worldScreen:OnGroupScroll(-7)
		"
		actionAlt	"showGroupItemDescription(15)"
	}
	label
	{
		enabled "containerBigMode == 1"
		area 930 88 82 30
		text lua "game:GetPartyGold()"
		text style "gold"
	}
	button
	{
		enabled "containerBigMode == 1"
		area 985 8 28 26
		bam GUIOSW
		ScaleToClip
		sequence 2
		toggle containerBigMode
		action "
		containerBigMode = 0
		Infinity_SetOffset('WORLD_CONTAINER', 160, nil)
		repeat 
			worldScreen:OnGroupScroll(-1)
			worldScreen:OnContainerScroll(-1)
		until (worldScreen:GroupScrollEnabled(-1) == false)
		"
		actionAlt""
	}
}
`
	function getSlotContainerId(index)
		local idxScrolled = index + worldScreen:GetTopGroundItem()
		if(loot.groundItems[idxScrolled] == nil) then
			return nil
		end
		return loot.groundItems[idxScrolled].containerId
	end
	function getGroundItemProperty(index, property)
		local idxScrolled = index + worldScreen:GetTopGroundItem()
		if(loot.groundItems[idxScrolled] == nil or loot.groundItems[idxScrolled].item == nil) then
			return nil
		end
		return loot.groundItems[idxScrolled].item[property]
	end
	
	function groundItemClick(slotId)
		local slot = loot.groundItems[slotId + worldScreen:GetTopGroundItem()]
			if(slot and slot.item) then
				worldScreen:OnGroundButtonClick(slot.slotId, slot.containerId, slot.item.res)
		end
	end
	
	function showGroundItemDescription(slotId)
		local slot = loot.groundItems[slotId + worldScreen:GetTopGroundItem()]
			if(slot and slot.item) then
				Infinity_GetGroundItemDescription(slotId + worldScreen:GetTopGroundItem(), slot.slotId, slot.containerId)
				showItemDescription(slot.item, 2)
		end
	end
	
	function setQuickLootOffset()
	local x,y,w,h = Infinity_GetArea('messagesRect')
	local offset = h + 71
	Infinity_SetOffset('WORLD_QUICKLOOT', 0, -offset)
end
`
menu
{
	enabled "showJournal == 0"
	name 'WORLD_QUICKLOOT'
	align center bottom
	offset 5 -66
	ignoreEsc
	onOpen
	"
		setQuickLootOffset()
	"
	label
	{
		enabled "getGroundItemProperty(0,'icon') ~= nil"
		area 0 -2 794 54
		mosaic GUWBTP40
	}
	button
	{
		area 5 0 52 52
		bam GUIBTACT
		frame lua "getMovingFrame('LootLeftArrow')==1 and 65 or 64"
		--enabled "worldScreen:GroundScrollEnabled(-1) or worldScreen:GroundScrollEnabled(1)"
		enabled "getGroundItemProperty(0,'icon') ~= nil and worldScreen:GroundScrollEnabled(-1) or getMovingFrame('LootLeftArrow')==1"
		action
		"
			worldScreen:OnGroundScroll(-1)
		"
	}
	label
	{
		enabled "getGroundItemProperty(0,'icon') ~= nil and worldScreen:GroundScrollEnabled(-1)"
		on A
		action
		"
			Infinity_PlaySound('GAM_09')
			worldScreen:OnGroundScroll(-1)			
			getClick(Infinity_GetFrameCounter(), 'LootLeftArrow')
		"
	}
	button
	{
		area 733 0 52 52
		bam GUIBTACT
		frame lua "getMovingFrame('LootRightArrow')==1 and 67 or 66"
		--enabled "worldScreen:GroundScrollEnabled(-1) or worldScreen:GroundScrollEnabled(1)"
		enabled "getGroundItemProperty(12,'icon') ~= nil or getMovingFrame('LootRightArrow')==1"
		action
		"
			worldScreen:OnGroundScroll(1)
		"
	}
	label
	{
		enabled "getGroundItemProperty(12,'icon') ~= nil"
		on D
		action
		"
			Infinity_PlaySound('GAM_09')
			worldScreen:OnGroundScroll(1)
			getClick(Infinity_GetFrameCounter(), 'LootRightArrow')
		"
	}
	button
	{
		area 57 0 52 52
		bam STONSL10
		enabled "getGroundItemProperty(0,'icon') ~= nil"
		tooltip lua	"getGroundItemProperty(0,'name')"
		tint lua	"getGroundItemProperty(0,'tint')"
		icon lua	"getGroundItemProperty(0,'icon')"
		count lua	"getGroundItemProperty(0,'count')"
		usages lua	"getGroundItemProperty(0,'usages')"
		action "groundItemClick(0)"
		actionAlt "showGroundItemDescription(0)"
		actionEnter "mouseOverQuicklootContainer = getSlotContainerId(0,'containerId')"
		actionExit "mouseOverQuicklootContainer = nil"
	}
	button
	{
		area 109 0 52 52
		bam STONSL10
		enabled "getGroundItemProperty(0,'icon') ~= nil"
		tooltip lua	"getGroundItemProperty(1,'name')"
		tint lua	"getGroundItemProperty(1,'tint')"
		icon lua	"getGroundItemProperty(1,'icon')"
		count lua	"getGroundItemProperty(1,'count')"
		usages lua	"getGroundItemProperty(1,'usages')"
		action "groundItemClick(1)"
		actionAlt "showGroundItemDescription(1)"
		actionEnter "mouseOverQuicklootContainer = getSlotContainerId(1,'containerId')"
		actionExit "mouseOverQuicklootContainer = nil"
	}
	button
	{
		area 161 0 52 52
		bam STONSL10
		enabled "getGroundItemProperty(0,'icon') ~= nil"
		tooltip lua	"getGroundItemProperty(2,'name')"
		tint lua	"getGroundItemProperty(2,'tint')"
		icon lua	"getGroundItemProperty(2,'icon')"
		count lua	"getGroundItemProperty(2,'count')"
		usages lua	"getGroundItemProperty(2,'usages')"
		action "groundItemClick(2)"
		actionAlt "showGroundItemDescription(2)"
		actionEnter "mouseOverQuicklootContainer = getSlotContainerId(2,'containerId')"
		actionExit "mouseOverQuicklootContainer = nil"
	}
	button
	{
		area 213 0 52 52
		bam STONSL10
		enabled "getGroundItemProperty(0,'icon') ~= nil"
		tooltip lua	"getGroundItemProperty(3,'name')"
		tint lua	"getGroundItemProperty(3,'tint')"
		icon lua	"getGroundItemProperty(3,'icon')"
		count lua	"getGroundItemProperty(3,'count')"
		usages lua	"getGroundItemProperty(3,'usages')"
		action "groundItemClick(3)"
		actionAlt "showGroundItemDescription(3)"
		actionEnter "mouseOverQuicklootContainer = getSlotContainerId(3,'containerId')"
		actionExit "mouseOverQuicklootContainer = nil"
	}
	button
	{
		area 265 0 52 52
		bam STONSL10
		enabled "getGroundItemProperty(0,'icon') ~= nil"
		tooltip lua	"getGroundItemProperty(4,'name')"
		tint lua	"getGroundItemProperty(4,'tint')"
		icon lua	"getGroundItemProperty(4,'icon')"
		count lua	"getGroundItemProperty(4,'count')"
		usages lua	"getGroundItemProperty(4,'usages')"
		action "groundItemClick(4)"
		actionAlt "showGroundItemDescription(4)"
		actionEnter "mouseOverQuicklootContainer = getSlotContainerId(4,'containerId')"
		actionExit "mouseOverQuicklootContainer = nil"
	}
	button
	{
		area 317 0 52 52
		bam STONSL10
		enabled "getGroundItemProperty(0,'icon') ~= nil"
		tooltip lua	"getGroundItemProperty(5,'name')"
		tint lua	"getGroundItemProperty(5,'tint')"
		icon lua	"getGroundItemProperty(5,'icon')"
		count lua	"getGroundItemProperty(5,'count')"
		usages lua	"getGroundItemProperty(5,'usages')"
		action "groundItemClick(5)"
		actionAlt "showGroundItemDescription(5)"
		actionEnter "mouseOverQuicklootContainer = getSlotContainerId(5,'containerId')"
		actionExit "mouseOverQuicklootContainer = nil"
	}
	button
	{
		area 369 0 52 52
		bam STONSL10
		enabled "getGroundItemProperty(0,'icon') ~= nil"
		tooltip lua	"getGroundItemProperty(6,'name')"
		tint lua	"getGroundItemProperty(6,'tint')"
		icon lua	"getGroundItemProperty(6,'icon')"
		count lua	"getGroundItemProperty(6,'count')"
		usages lua	"getGroundItemProperty(6,'usages')"
		action "groundItemClick(6)"
		actionAlt "showGroundItemDescription(6)"
		actionEnter "mouseOverQuicklootContainer = getSlotContainerId(6,'containerId')"
		actionExit "mouseOverQuicklootContainer = nil"
	}
	button
	{
		area 421 0 52 52
		bam STONSL10
		enabled "getGroundItemProperty(0,'icon') ~= nil"
		tooltip lua	"getGroundItemProperty(7,'name')"
		tint lua	"getGroundItemProperty(7,'tint')"
		icon lua	"getGroundItemProperty(7,'icon')"
		count lua	"getGroundItemProperty(7,'count')"
		usages lua	"getGroundItemProperty(7,'usages')"
		action "groundItemClick(7)"
		actionAlt "showGroundItemDescription(7)"
		actionEnter "mouseOverQuicklootContainer = getSlotContainerId(7,'containerId')"
		actionExit "mouseOverQuicklootContainer = nil"
	}
	button
	{
		area 473 0 52 52
		bam STONSL10
		enabled "getGroundItemProperty(0,'icon') ~= nil"
		tooltip lua	"getGroundItemProperty(8,'name')"
		tint lua	"getGroundItemProperty(8,'tint')"
		icon lua	"getGroundItemProperty(8,'icon')"
		count lua	"getGroundItemProperty(8,'count')"
		usages lua	"getGroundItemProperty(8,'usages')"
		action "groundItemClick(8)"
		actionAlt "showGroundItemDescription(8)"
		actionEnter "mouseOverQuicklootContainer = getSlotContainerId(8,'containerId')"
		actionExit "mouseOverQuicklootContainer = nil"
	}
	button
	{
		area 525 0 52 52
		bam STONSL10
		enabled "getGroundItemProperty(0,'icon') ~= nil"
		tooltip lua	"getGroundItemProperty(9,'name')"
		tint lua	"getGroundItemProperty(9,'tint')"
		icon lua	"getGroundItemProperty(9,'icon')"
		count lua	"getGroundItemProperty(9,'count')"
		usages lua	"getGroundItemProperty(9,'usages')"
		action "groundItemClick(9)"
		actionAlt "showGroundItemDescription(9)"
		actionEnter "mouseOverQuicklootContainer = getSlotContainerId(9,'containerId')"
		actionExit "mouseOverQuicklootContainer = nil"
	}	
	button
	{
		area 577 0 52 52
		bam STONSL10
		enabled "getGroundItemProperty(0,'icon') ~= nil"
		tooltip lua	"getGroundItemProperty(10,'name')"
		tint lua	"getGroundItemProperty(10,'tint')"
		icon lua	"getGroundItemProperty(10,'icon')"
		count lua	"getGroundItemProperty(10,'count')"
		usages lua	"getGroundItemProperty(10,'usages')"
		action "groundItemClick(10)"
		actionAlt "showGroundItemDescription(10)"
		actionEnter "mouseOverQuicklootContainer = getSlotContainerId(10,'containerId')"
		actionExit "mouseOverQuicklootContainer = nil"
	}
	button
	{
		area 629 0 52 52
		bam STONSL10
		enabled "getGroundItemProperty(0,'icon') ~= nil"
		tooltip lua	"getGroundItemProperty(11,'name')"
		tint lua	"getGroundItemProperty(11,'tint')"
		icon lua	"getGroundItemProperty(11,'icon')"
		count lua	"getGroundItemProperty(11,'count')"
		usages lua	"getGroundItemProperty(11,'usages')"
		action "groundItemClick(11)"
		actionAlt "showGroundItemDescription(11)"
		actionEnter "mouseOverQuicklootContainer = getSlotContainerId(11,'containerId')"
		actionExit "mouseOverQuicklootContainer = nil"
	}
	button
	{
		area 681 0 52 52
		bam STONSL10
		enabled "getGroundItemProperty(0,'icon') ~= nil"
		tooltip lua	"getGroundItemProperty(12,'name')"
		tint lua	"getGroundItemProperty(12,'tint')"
		icon lua	"getGroundItemProperty(12,'icon')"
		count lua	"getGroundItemProperty(12,'count')"
		usages lua	"getGroundItemProperty(12,'usages')"
		action "groundItemClick(12)"
		actionAlt "showGroundItemDescription(12)"
		actionEnter "mouseOverQuicklootContainer = getSlotContainerId(12,'containerId')"
		actionExit "mouseOverQuicklootContainer = nil"
	}			
}
`
function getMovingFrameReformParty(object, num)
		local val = Infinity_GetINIValue('Program Options','Maximum Frame Rate','30')/60
		if clickedFrame +10*val > Infinity_GetFrameCounter() then --(5-10 range)
			if clickedObject == object then
			return 1 end
		else
			if worldScreen:GetPickPartyCharacterId(num) == worldScreen:GetPickPartyRemoveCharacterId() and worldScreen:IsPickPartyRemoveButtonClickable() then 
				return 2
			else 
				clickedObject = nil --click done, reset
				return 0 
			end
		end
	end
`
menu
{
	name 'WORLD_PICKPARTY'
	modal
	align center bottom
	ignoreEsc
	label
	{
		area 0 0 765 160
		mosaic GUWPKPC0
	}
	label
	{
		area 12 10 326 26
		text "REMOVE_MEMBERS_LABEL"
		text style "label"
		text shadow 1
		align left center
	}
	label
	{
		area 10 39 81 108
		frame lua "getMovingFrameReformParty('portrait0_reform', 0)"
		bam GUIRSP10
		ScaleToClip
		enabled "worldScreen:GetPickPartyPortrait(0) ~= ''"
	}
	button
	{
		enabled "worldScreen:GetPickPartyPortrait(0) ~= '' and getMovingFrame('portrait0_reform')==0"
		area 21 47 61 91
		clickable lua "worldScreen:GetPickPartyPortrait(0) ~= ''"
		bitmap lua "worldScreen:GetPickPartyPortrait(0)"
		action
		"
			worldScreen:OnPickPartyPortraitButtonClick(0)
			getClick(Infinity_GetFrameCounter(), 'portrait0_reform')
		"
	}
	button
	{
		enabled "worldScreen:GetPickPartyPortrait(0) ~= '' and getMovingFrame('portrait0_reform')==1"
		area 23 49 61 91
		clickable lua "worldScreen:GetPickPartyPortrait(0) ~= ''"
		bitmap lua "worldScreen:GetPickPartyPortrait(0)"
	}
	label
	{
		area 89 40 81 108
		frame lua "getMovingFrameReformParty('portrait1_reform', 1)"
		bam GUIRSP10
		ScaleToClip
		enabled "worldScreen:GetPickPartyPortrait(1) ~= ''"
	}
	button
	{
		enabled "worldScreen:GetPickPartyPortrait(1) ~= '' and getMovingFrame('portrait1_reform')==0"
		area 100 47 61 91
		clickable lua "worldScreen:GetPickPartyPortrait(1) ~= ''"
		bitmap lua "worldScreen:GetPickPartyPortrait(1)"
		action
		"
			worldScreen:OnPickPartyPortraitButtonClick(1)
			getClick(Infinity_GetFrameCounter(), 'portrait1_reform')
		"
	}
	button
	{
		enabled "worldScreen:GetPickPartyPortrait(1) ~= '' and getMovingFrame('portrait1_reform')==1"
		area 102 49 61 91
		clickable lua "worldScreen:GetPickPartyPortrait(1) ~= ''"
		bitmap lua "worldScreen:GetPickPartyPortrait(1)"
	}
	label
	{
		area 168 40 81 108
		frame lua "getMovingFrameReformParty('portrait2_reform', 2)"
		bam GUIRSP10
		ScaleToClip
		enabled "worldScreen:GetPickPartyPortrait(2) ~= ''"
	}
	button
	{
		enabled "worldScreen:GetPickPartyPortrait(2) ~= '' and getMovingFrame('portrait2_reform')==0"
		area 179 47 61 91
		name "portrait2_reform"
		clickable lua "worldScreen:GetPickPartyPortrait(2) ~= ''"
		bitmap lua "worldScreen:GetPickPartyPortrait(2)"
		action
		"
			worldScreen:OnPickPartyPortraitButtonClick(2)
			getClick(Infinity_GetFrameCounter(), 'portrait2_reform')
		"
	}
	button
	{
		enabled "worldScreen:GetPickPartyPortrait(2) ~= '' and getMovingFrame('portrait2_reform')==1"
		area 181 49 61 91
		clickable lua "worldScreen:GetPickPartyPortrait(2) ~= ''"
		bitmap lua "worldScreen:GetPickPartyPortrait(2)"
	}
	label
	{
		area 247 40 81 108
		frame lua "getMovingFrameReformParty('portrait3_reform', 3)"
		bam GUIRSP10
		ScaleToClip
		enabled "worldScreen:GetPickPartyPortrait(3) ~= ''"
	}
	button
	{
		enabled "worldScreen:GetPickPartyPortrait(3) ~= '' and getMovingFrame('portrait3_reform')==0"
		area 258 47 61 91
		clickable lua "worldScreen:GetPickPartyPortrait(3) ~= ''"
		bitmap lua "worldScreen:GetPickPartyPortrait(3)"
		action
		"
			worldScreen:OnPickPartyPortraitButtonClick(3)
			getClick(Infinity_GetFrameCounter(), 'portrait3_reform')
		"
	}
	button
	{
		enabled "worldScreen:GetPickPartyPortrait(3) ~= '' and getMovingFrame('portrait3_reform')==1"
		area 260 49 61 91
		clickable lua "worldScreen:GetPickPartyPortrait(3) ~= ''"
		bitmap lua "worldScreen:GetPickPartyPortrait(3)"
	}
	label
	{
		area 326 40 81 108
		frame lua "getMovingFrameReformParty('portrait4_reform', 4)"
		bam GUIRSP10
		ScaleToClip
		enabled "worldScreen:GetPickPartyPortrait(4) ~= ''"
	}
	button
	{
		enabled "worldScreen:GetPickPartyPortrait(4) ~= '' and getMovingFrame('portrait4_reform')==0"
		area 337 47 61 91
		clickable lua "worldScreen:GetPickPartyPortrait(4) ~= ''"
		bitmap lua "worldScreen:GetPickPartyPortrait(4)"
		action
		"
			worldScreen:OnPickPartyPortraitButtonClick(4)
			getClick(Infinity_GetFrameCounter(), 'portrait4_reform')
		"
	}
	button
	{
		enabled "worldScreen:GetPickPartyPortrait(4) ~= '' and getMovingFrame('portrait4_reform')==1"
		area 339 49 61 91
		clickable lua "worldScreen:GetPickPartyPortrait(4) ~= ''"
		bitmap lua "worldScreen:GetPickPartyPortrait(4)"
	}
	label
	{
		area 405 40 81 108
		frame lua "getMovingFrameReformParty('portrait5_reform', 5)"
		bam GUIRSP10
		ScaleToClip
		enabled "worldScreen:GetPickPartyPortrait(5) ~= ''"
	}
	button
	{
		enabled "worldScreen:GetPickPartyPortrait(5) ~= '' and getMovingFrame('portrait5_reform')==0"
		area 416 47 61 91
		clickable lua "worldScreen:GetPickPartyPortrait(5) ~= ''"
		bitmap lua "worldScreen:GetPickPartyPortrait(5)"
		action
		"
			worldScreen:OnPickPartyPortraitButtonClick(5)
			getClick(Infinity_GetFrameCounter(), 'portrait5_reform')
		"
	}
	button
	{
		enabled "worldScreen:GetPickPartyPortrait(5) ~= '' and getMovingFrame('portrait5_reform')==1"
		area 418 49 61 91
		clickable lua "worldScreen:GetPickPartyPortrait(5) ~= ''"
		bitmap lua "worldScreen:GetPickPartyPortrait(5)"
	}
	label
	{
		area 484 40 81 108
		frame lua "getMovingFrameReformParty('portrait6_reform', 6)"
		bam GUIRSP10
		ScaleToClip
		enabled "worldScreen:GetPickPartyPortrait(6) ~= ''"
	}
	button
	{
		enabled "worldScreen:GetPickPartyPortrait(6) ~= '' and getMovingFrame('portrait6_reform')==0"
		area 495 47 61 91
		clickable lua "worldScreen:GetPickPartyPortrait(6) ~= ''"
		bitmap lua "worldScreen:GetPickPartyPortrait(6)"
		action
		"
			worldScreen:OnPickPartyPortraitButtonClick(6)
			getClick(Infinity_GetFrameCounter(), 'portrait6_reform')
		"
	}
	button
	{
		enabled "worldScreen:GetPickPartyPortrait(6) ~= '' and getMovingFrame('portrait6_reform')==1"
		area 497 49 61 91
		clickable lua "worldScreen:GetPickPartyPortrait(6) ~= ''"
		bitmap lua "worldScreen:GetPickPartyPortrait(6)"
	}
	label
	{
		area 716 10 37 30
		text lua "game:GetCharacterOverflowCount()"
		bam 'BG_UND'
		sequence 1
		ScaleToClip
		text style "normal"
		align center center
	}
	button
	{
		area 577 52 174 31
		bam GUIWPKPC
		sequence 1
		ScaleToClip
		text "REMOVE_BUTTON"
		text style "button"
		text shadow 1
		clickable lua "worldScreen:IsPickPartyRemoveButtonClickable()"
		action
		"
			popup2ButtonReformParty(17518, 'REMOVE_BUTTON', function() worldScreen:RemoveCharacterFromParty() end)
		"
		actionHold
		"
			worldScreen:RemoveCharacterFromParty()
		"
		actionAlt
		"
			for i=0, 6 do
				worldScreen:OnPickPartyPortraitButtonClick(0)
				worldScreen:RemoveCharacterFromParty()
			end
		"
	}
	button
	{
		area 592 96 149 32
		bam GUIWPKPC
		sequence 1
		ScaleToClip
		text "DONE_BUTTON"
		text style "button"
		text shadow 1
		clickable lua "worldScreen:IsPickPartyDoneButtonClickable()"
		on esc
		action
		"
			worldScreen:OnPickPartyDoneButtonClick()
		"
	}
}
`
currentSave = 0
function getSaveBackground(row)
	if(row == currentSave) then
		return "GUISAVEC"
	else
		return "GUISAVEB"
	end
end
function getLoadMenuTitle()
	if (gameSaves.isImporting~=1) then
		return t('LOAD_TITLE')
	end
	return t('IMPORT_TITLE')
end
`

menu
{
	name 'LOAD'
	align center center
	ignoreEsc
	onOpen
	"
		if gameSaves.isImporting == 1 and e:IsIOS() and (gameSaves.files == nil or #(gameSaves.files) == 0) then
			popupInfo(Infinity_FetchString(71373))
		end
	TT_BuildTitleData(getLoadMenuTitle(), 354, true)
	TT_CreateTitleChars(getLoadMenuTitle(), 'TT_LOAD', 40, 'TEMPLATE_titlechar_LOAD')
	"
	onclose	"TT_DestroyTitleChars(getLoadMenuTitle(), 'TEMPLATE_titlechar_LOAD')"
	button
	{
		area	0 0 1024 768
		mosaic	GUISMBM --GUISRSVB
		action 
		"
			currentSave = nil
		"
	}
	template
    {
        label
        {
            enabled "true"
            ignoreEvents
            area 0 0 -1 -1
            bam "TTREALMS"
            sequence lua "TT_TitleData[getLoadMenuTitle()][instanceId].seq"
            align center center
        }
        name "TEMPLATE_titlechar_LOAD"
    }
	label
    {
        name "TT_LOAD"
		area 38 38 354 40
		--text lua "getLoadMenuTitle()"
		--text style "title"
    }
	list
	{
		column 
		{ 
			width	100
			label
			{
				area 		0,0,854,-1
				mosaic lua	'getSaveBackground(rowNumber)'
				respectClipping 
				align		center center
			}
			button
			{
				enabled		"gameSaves.files[rowNumber].hasScreenShot"
				area		0 5 60 60
				bitmap res 	"gameSaves.files[rowNumber].screenshot"
				bitmap area	16 11 147 110 
				align		center center
			}

			label
			{
				area	190 17 300 40
				text	lua "gameSaves.files[rowNumber].slotName"
				text style "normal"
				text useFontZoom 0
				align	left top
			}
	
			label
			{
				area	190 55 300 30
				text	lua "gameSaves.files[rowNumber].chapter .. ' ' .. gameSaves.files[rowNumber].time"
				text style "label"
				text shadow 1
				align	left top
				pad		0 0 -200 0				
			}
			button
			{
				enabled		 "gameSaves.files[rowNumber].hasPortrait0"
				area	373 82 60 60
				bitmap res "gameSaves.files[rowNumber].portrait0"
				bitmap area	0 0 28 45
				align	center center
			}
			button
			{
				enabled		 "gameSaves.files[rowNumber].hasPortrait1"
				area	414 85 60 60
				bitmap res "gameSaves.files[rowNumber].portrait1"
				bitmap area	0 0 26 42
				align	center center
			}
			button
			{
				enabled		 "gameSaves.files[rowNumber].hasPortrait2"
				area	452 85 60 60
				bitmap res "gameSaves.files[rowNumber].portrait2"
				bitmap area	0 0 26 42
				align	center center
			}
			button
			{
				enabled		 "gameSaves.files[rowNumber].hasPortrait3"
				area	491 85 60 60
				bitmap res "gameSaves.files[rowNumber].portrait3"
				bitmap area	0 0 26 42
				align	center center
			}
			button
			{
				enabled		 "gameSaves.files[rowNumber].hasPortrait4"
				area	529 85 60 60
				bitmap res "gameSaves.files[rowNumber].portrait4"
				bitmap area	0 0 26 42
				align	center center
			}
			button
			{
				enabled		 "gameSaves.files[rowNumber].hasPortrait5"
				area	567 85 60 60
				bitmap res "gameSaves.files[rowNumber].portrait5"
				bitmap area	0 0 26 42
				align	center center
			}
			label
			{
				area	602 0 252 139
				text	lua "gameSaves.files[rowNumber].sName "
				text style "label"
				text shadow 1
				align	center center
			}
		}

		actionDbl
		"
			Infinity_PlaySound('GAM_09')
			loadScreen:LoadGame(gameSaves.files[currentSave].fileName)
		"
		
		area 60 116 958 564
		rowheight	139
		hidehighlight
		table		"gameSaves.files"
		var		currentSave
		scrollbar	'GUISTSCR'
	}
	label --under button thingy
	{
		area 784 688 194 69
		bam 'BG_UND'
	}
	button
	{
		area		795 705 162 30
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		clickable	lua	"currentSave"		
		text		"LOAD_BUTTON"
		text style	"button"
		text shadow 1
		action
		"
			loadScreen:LoadGame(gameSaves.files[currentSave].fileName)
		"
	}
	button
	{
		enabled 	"gameSaves.isImporting ~= 1"
		area		509 705 162 30
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		clickable	lua	"currentSave"		
		text		"DELETE_BUTTON"
		text style	"button"
		text shadow 1
		action
		"
			popup2Button(15305, 'DELETE_BUTTON',
			 function() loadScreen:DeleteGame(gameSaves.files[currentSave].slotIndex) end)
		"
	}
	button
	{
		area		220 705 162 30
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text		"BACK_BUTTON"
		text style	"button"
		text shadow 1
		on escape
		action
		"
				loadScreen:OnMainCancelButtonClick()
		"
	}
}
`
	function compareSaves(s1,s2)
		--return true if s1 comes before s2
		--show the most recent saves first
		return s1.fileTime > s2.fileTime
	end
	function sortSaves()
		table.sort(gameSaves.files,compareSaves)
	end
`
menu
{
	name 'SAVE'
	align center center
	ignoreEsc
	onOpen
	"
	TT_BuildTitleData('SAVE_TITLE', 354, true)
	TT_CreateTitleChars('SAVE_TITLE', 'TT_SAVE', 40, 'TEMPLATE_titlechar_SAVE')
	"
	onclose	"TT_DestroyTitleChars('SAVE_TITLE', 'TEMPLATE_titlechar_SAVE')"
	label
	{
		area	0 0 1024 768
		mosaic	GUISMBM --GUISRSVB
		action 
		"
			currentSave = nil
		"
	}
	template
    {
        label
        {
            enabled "true"
            ignoreEvents
            area 0 0 -1 -1
            bam "TTREALMS"
            sequence lua "TT_TitleData['SAVE_TITLE'][instanceId].seq"
            align center center
        }
        name "TEMPLATE_titlechar_SAVE"
    }
	label
    {
        name "TT_SAVE"
		area 38 38 354 40
		--text "SAVE_TITLE"
		--text style "title"
    }
	list
{
		column 
		{ 
			width	65
			label
			{
				area 		0,0,922,-1
				mosaic lua	'getSaveBackground(rowNumber)'
				respectClipping 
				align		center center
			}
			button
			{
				enabled		"gameSaves.files[rowNumber].hasScreenShot"
				area		0 5 60 60
				bitmap res 	"gameSaves.files[rowNumber].screenshot"
				bitmap area	16 11 147 110 
				align		center center
			}

			label
			{
				area	190 17 300 30
				text	lua "gameSaves.files[rowNumber].slotName"
				text style "normal"
				text useFontZoom  0
				align	left top
			}
	
			label
			{
				area	190 55 300 30
				text	lua "gameSaves.files[rowNumber].chapter .. ' ' .. gameSaves.files[rowNumber].time"
				text style "label"
				text shadow 1
				align	left top
				pad		0 0 -200 0				
			}
			button
			{
				enabled		 "gameSaves.files[rowNumber].hasPortrait0"
				area	373 82 60 60
				bitmap res "gameSaves.files[rowNumber].portrait0"
				bitmap area	0 0 28 45
				align	center center
			}
			button
			{
				enabled		 "gameSaves.files[rowNumber].hasPortrait1"
				area	414 85 60 60
				bitmap res "gameSaves.files[rowNumber].portrait1"
				bitmap area	0 0 26 42
				align	center center
			}
			button
			{
				enabled		 "gameSaves.files[rowNumber].hasPortrait2"
				area	452 85 60 60
				bitmap res "gameSaves.files[rowNumber].portrait2"
				bitmap area	0 0 26 42
				align	center center
			}
			button
			{
				enabled		 "gameSaves.files[rowNumber].hasPortrait3"
				area	491 85 60 60
				bitmap res "gameSaves.files[rowNumber].portrait3"
				bitmap area	0 0 26 42
				align	center center
			}
			button
			{
				enabled		 "gameSaves.files[rowNumber].hasPortrait4"
				area	529 85 60 60
				bitmap res "gameSaves.files[rowNumber].portrait4"
				bitmap area	0 0 26 42
				align	center center
			}
			button
			{
				enabled		 "gameSaves.files[rowNumber].hasPortrait5"
				area	567 85 60 60
				bitmap res "gameSaves.files[rowNumber].portrait5"
				bitmap area	0 0 26 42
				align	center center
			}
		}	
		column 
		{ 
			width	35
			label
			{
				area 		-612,0,928,-1
				mosaic lua	'getSaveBackground(rowNumber)'
				respectClipping
				align		center center
			}
			label
			{
				area	0 10 240 90
				text	lua "gameSaves.files[rowNumber].sName "
				text style "label"
				text shadow 1
				align	center center
			}
			button
			{
				area	25 80 182 34
				bam GUIWPKPC
				ScaleToClip
				sequence 1
				frame lua 	"ticksStarting ~= 0 and rowSelected == rowNumber and cellNumber == 2 and 1 or currentCellCheck(2)"
				--text		"SAVE_BUTTON"
				--text style	"button"
				--text shadow 1
				align	center center
			}
			button
			{
				enabled "not (ticksStarting ~= 0 and rowSelected == rowNumber and cellNumber == 2)"
				area	25 80 182 34
				text		"SAVE_BUTTON"
				text style	"button"
				text shadow 1
				align	center center
			}
			button
			{
				enabled "ticksStarting ~= 0 and rowSelected == rowNumber and cellNumber == 2"
				area	27 82 182 34
				text		"SAVE_BUTTON"
				text style	"button"
				text shadow 1
				align	center center
			}
		}
		action 
		"
			if cellNumber == 1 then
				cellNumber = nil
			elseif cellNumber == 2 then
				cellNumber = nil
				Infinity_PlaySound('GAM_09')
				Infinity_PushMenu( 'SAVE_NEWSAVE' );
			end
			ticksPassed = 0
			ticksStarting = 0
		"
		actionUpdate 
		"	
			ticksStarting = ticksStarting + 1
			if ticksStarting > 10 then
				ticksPassed = ticksPassed + 1
				if ticksPassed > 3 then
					ticksPassed = 0
				end
			end
		"
		actionDbl
		"
			Infinity_PlaySound('GAM_09')
			Infinity_PushMenu( 'SAVE_NEWSAVE' );
		"
		
		area 60 255 958 417
		rowheight	139
		table		"gameSaves.files"
		hidehighlight
		var		currentSave
		scrollbar	'GUISTSCR'
}

	button 
	{
		area 60 116 922 139
		mosaic		GUISAVEB
	}
	label
	{
		area	248 130 300 24
		text	'NEW_SAVE_LABEL'
		text style "normal"
		text align left center
	}
	button
	{
		area	684 182 206 47
		bam GUISTDRC
		sequenceonce lua "Infinity_RandomNumber(0, 3)"
		ScaleToClip
		text		"SAVE_BUTTON"
		text style	"button"
		text shadow 1
		action
		"
			--saveScreen:SaveGame(#saveFiles, 'Test Save ' .. #saveFiles)
			currentSave = 0
			Infinity_PushMenu( 'SAVE_NEWSAVE' );
		"
	}

	button
	{
		on escape
		area		220 705 162 30
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text		"BACK_BUTTON"
		text style	"button"
		text shadow 1
		action
		"
			saveScreen:OnMainCancelButtonClick()
		"
	}
	button
	{
		area		509 705 162 30
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		clickable	lua	"currentSave"		
		text		"DELETE_BUTTON"
		text style	"button"
		text shadow 1
		action
		"
			popup2Button(15305, 'DELETE_BUTTON',
			 function() saveScreen:DeleteGame(gameSaves.files[currentSave].slotIndex) end)
		"
	}
}
`
	newSaveName = ''
	function completeSave()
		Infinity_Log('not overwrite')
		Infinity_PopMenu('SAVE_NEWSAVE')
		saveScreen:SaveGame(#gameSaves.files, newSaveName)
	end
	function completeOverwrite()
		Infinity_Log('overwrite')
		Infinity_PopMenu('SAVE_NEWSAVE')
		saveScreen:SaveGame(gameSaves.files[currentSave].slotIndex,newSaveName)
	end

`
menu
{
	name 'SAVE_NEWSAVE'
	align center center
	modal
	offset 100 0
	onOpen
	"
		bitmapbools = 
		{
			hasScreenShot = 0,
			hasPortrait0 = 0,
			hasPortrait1 = 0,
			hasPortrait2 = 0,
			hasPortrait3 = 0,
			hasPortrait4 = 0,
			hasPortrait5 = 0,
		}
		newSaveName = ''
		if currentSave ~= 0 then
			newSaveName = gameSaves.files[currentSave].slotName
			bitmapbools = 
			{
			hasScreenShot = gameSaves.files[currentSave].hasScreenShot,
			hasPortrait0 = gameSaves.files[currentSave].hasPortrait0,
			hasPortrait1 = gameSaves.files[currentSave].hasPortrait1,
			hasPortrait2 = gameSaves.files[currentSave].hasPortrait2,
			hasPortrait3 = gameSaves.files[currentSave].hasPortrait3,
			hasPortrait4 = gameSaves.files[currentSave].hasPortrait4,
			hasPortrait5 = gameSaves.files[currentSave].hasPortrait5,
			}
		end
		Infinity_FocusTextEdit('newSaveNameArea')
	"
	label
	{
		area 0 0 600 225
		mosaic	GUISRRQB
	}
	label
	{
		area 22 4 722 24
		text	"ENTER_SAVE_LABEL"
		text style "label"
		text point 22
		text align left center
		text shadow 1
	}
	edit
	{
		name        "newSaveNameArea"
		area	192 36 365 20
		var			newSaveName	
		text style	"edit"
		maxlines	1
		fill        112 111 111 64
		action
		"
			--On return pressed
			if (key_pressed == 13) then
				if(currentSave ~= 0) then
					completeOverwrite()
				else
					completeSave()
				end
				Infinity_FocusTextEdit('')
				return -1
			end
			return 1
		"
	}
	label
	{
		area 198 62 359 28
		text	lua "gameSaves.currentGameInfo.chapter .. ' ' .. gameSaves.currentGameInfo.time"
		text style "label"
		text shadow 1
		text align left center
	}
	button
	{
		enabled		 "bitmapbools.hasScreenShot"
		area 42 36 134 100
		bitmap res "gameSaves.files[currentSave].screenshot"
		align	center center
	}
	button
	{
		enabled		 "bitmapbools.hasPortrait0"
		area 360 96 26 41
		bitmap res "gameSaves.files[currentSave].portrait0"
		align	center center
	}
	button
	{
		enabled		 "bitmapbools.hasPortrait1"
		area 397 98 24 38
		bitmap res "gameSaves.files[currentSave].portrait1"
		align	center center
	}
	button
	{
		enabled		 "bitmapbools.hasPortrait2"
		area 431 98 24 38
		bitmap res "gameSaves.files[currentSave].portrait2"	
		align	center center
	}
	button
	{
		enabled		 "bitmapbools.hasPortrait3"
		area 464 98 24 38
		bitmap res "gameSaves.files[currentSave].portrait3"
		align	center center
	}
	button
	{
		enabled		 "bitmapbools.hasPortrait4"
		area 498 98 24 38
		bitmap res "gameSaves.files[currentSave].portrait4"
		align	center center
	}
	button
	{
		enabled		 "bitmapbools.hasPortrait5"
		area 531 98 24 38
		bitmap res "gameSaves.files[currentSave].portrait5"
		align	center center
	}
	button
	{
		on return
		area 186 168 215 28
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text	"SAVE_BUTTON"
		text style "button"
		text shadow 1
		action
		"
			completeSave()
		"
	}
	button
	{
		on return
		enabled	currentSave
		area 186 168 215 28
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text	"OVERWRITE_BUTTON"
		text style "button"
		text shadow 1
		action
		"
			completeOverwrite()
		"
	}
	button
	{
		on escape
		area 433 168 143 28
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text	"CANCEL_BUTTON"
		text style "button"
		text shadow 1
		action
		"
			Infinity_PopMenu('SAVE_NEWSAVE')			
		"
	}
}
`
 worldMessageBoxText = ""
 worldMessageBoxLines = 0
 worldMessageBoxClickedOnce = 0
 function dragMessagesY(newY)
	setMessagesY(newY)
	worldMessageBoxClickedOnce = 1
	setQuickLootOffset()
	--chatboxScrollToBottom = 1
 end
function clampMessageBoxHeight(hNew, hOld)
		if(hNew <= 64) then
			--lower bound on height, sliced rects can't get too small and we don't want to make the message box invisible.
			return hOld - 64
		end
		if(hNew >= 500) then
			--also don't go too high because it looks bad.
			return hOld - 500
		end
		return hOld - hNew
end
 function setMessagesY(newY)
		local x,y,w,hOld = Infinity_GetArea('messagesRect')
		h = hOld - newY
		newY = clampMessageBoxHeight(h,hOld)
		
		adjustItemGroup({"messagesHandleY"},0,newY,0,0)
		adjustItemGroup({"messagesRect","worldMessageBox"},0,newY,0,-newY)
		
		toolbarTop = toolbarTop - newY
		Infinity_SetOffset('WORLD_QUICKLOOT',0, -toolbarTop)
		
		chatboxScrollToBottom = 1
		worldMessageBoxTop = y + newY
 end
 
   function markBackstab(str)
		local x = string.find(str, "Backstab")
		if x == nil then return str
		else
			local a = string.sub(str, 1, x-1)
			local y = string.sub(str, x, string.len(str))
			return a .. '^0xFFFF00FF' .. y .. '^-'
		end
 end
`
menu
{
	name 'WORLD_MESSAGES'
	align center bottom
	offset 0 -63
	ignoreEsc
	onOpen
	"
		--Infinity_SetOffset('WORLD_MESSAGES', 5, -toolbarTop)
		local x,y,w,h = Infinity_GetArea('messagesRect')
		toolbarTop = toolbarTop + h
		setMessagesY(worldMessageBoxTop - y)
	"
	onClose
	"
		local x,y,w,h = Infinity_GetArea('messagesRect')
		toolbarTop = toolbarTop - h
	"
	label
	{
		name 'messagesRect'
		area 0 76 794 64
		mosaic box5
	}
	label
	{
		area 0 140 794 7
		mosaic box5B
	}
	list
	{
		column
		{
			width 100
			label
			{
				area 0 0 -1 -1
				text lua "markBackstab(combatLog[rowNumber])"
				text style "gamelog"
				text shadow 1
			}	
		}
		name "worldMessageBox"
		area 20 90 735 51
		rowheight dynamic
		table "combatLog"
		hideHighlight
		scrollbar 'GUISCRC'
		scrollbar func "chatboxScroll"
		--scrollbar hide lua 'h <= 40'
		scrollbar skipReset
	}
	handle
	{
		name 'messagesHandleY'
		area 0 74 794 22
		pulse lua "worldMessageBoxClickedOnce == 0"
		actionDrag
		"
			dragMessagesY(motionY)
		"
	}
	button 
	{ 
		enabled "h <= 450"
		area 766 88 22 22
		bam GUISV10
		scaleToClip
		sequence 0
		on pageup
		action 
		" 
			dragMessagesY(-2000) 
		" 
	}
	button 
	{ 
		enabled "h >= 70"
		area 766 118 22 22
		bam GUISV10 
		scaleToClip
		sequence 1		
		on pagedown
		action 
		" 
			dragMessagesY(2000)
		" 
	}
}
`
step = 1
worldNPCDialogText = ""
worldPlayerDialogChoices = {}

function dialogEntryGreyed()
	return not worldScreen:GetInControlOfDialog()
end

function getDialogPaddingText()
	local x,y,w,h = Infinity_GetArea("worldPlayerDialogChoicesList")
	local zoom = tonumber(Infinity_GetINIValue('Fonts','Zoom','100'))
	local dialogHeight = Infinity_GetContentHeight(styles.normal.font, w, getDialogText(2), styles.normal.point * zoom / 100, 0, styles.normal.useFontZoom) + 12
	local i = 1
	while i <= #worldPlayerDialogChoices do
		dialogHeight = dialogHeight + Infinity_GetContentHeight(styles.normal.font, w, worldPlayerDialogChoices[i].text, styles.normal.point * zoom / 100, 0, styles.normal.useFontZoom)
		i = i + 1
	end
	local text = ""
	local lineHeight = Infinity_GetContentHeight(styles.normal.font, w, text, styles.normal.point * zoom / 100, 0, styles.normal.useFontZoom)
	while dialogHeight + lineHeight < h do
		text = text .. "\n"
		lineHeight = Infinity_GetContentHeight(styles.normal.font, w, text, styles.normal.point * zoom / 100, 0, styles.normal.useFontZoom)
	end
	return text
end

function resizeDialog()
	buildResponsesList()
	step = 1
end

function dialogScroll(top, height, contentHeight)
	if worldNPCDialogText == '' then
		return nil
	end
	
	if step == 1 then
		step = 2
		return -contentHeight
	end

	return nil
end

function dragDialogMessagesY(newY)
	local x,y,w,hOld = Infinity_GetArea("worldDialogBackground")
	h = hOld - newY
	if h < 100 then
		newY = hOld - 100
	elseif h > 500 then
		newY = hOld - 500
	end

	adjustItemGroup({"dialogHandleY","worldDialogPortraitArea"},0,newY,0,0)
	adjustItemGroup({"worldDialogBackground","worldPlayerDialogChoicesList"},0,newY,0,-newY)
end

function getDialogEntryText(row)
	local text = worldPlayerDialogChoices[row - 2].text
	if (row == worldPlayerDialogSelection) then
		--Color the text white when selected
		text = string.gsub(text, "%^0xff212eff", "^0xFFFFFFFF")
	end
	return text
end

function getDialogText(row)
	local idx1 = worldMessageBoxText:len()
	local idx2 = worldNPCDialogText:len()

	while idx2 > 0 do
		local c1 = worldMessageBoxText:byte(idx1)
		local c2 = worldNPCDialogText:byte(idx2)

		if c1 ~= c2 then
			if c1 == 58 and worldMessageBoxText:byte(idx1 - 1) == c2 then
				idx1 = idx1 - 1
				c1 = worldMessageBoxText:byte(idx1)
			elseif c2 == 10 and worldNPCDialogText:byte(idx2 - 1) == c1 then
				idx2 = idx2 - 1
				c2 = worldNPCDialogText:byte(idx2)
			elseif c1 == 32 and c2 == 10 and worldMessageBoxText:byte(idx1 - 1) == 58 then
				idx1 = idx1 - 1
				c1 = 10
			end
		end

		if c1 ~= c2 then
			break
		end

		idx1 = idx1 - 1
		idx2 = idx2 - 1
	end

	return trim(row == 1 and worldMessageBoxText:sub(1, idx1) or worldMessageBoxText:sub(idx1 + 1))
end

function makeDialogTable()
	if step == 1 then
		return makeBlankTable(1)
	end
	return makeBlankTable(#worldPlayerDialogChoices + 3)
end
`
menu
{
	name 'WORLD_DIALOG'
	offset 0 3
	align center bottom
	ignoreEsc
	onOpen
	"
		Infinity_PushMenu('WORLD_DIALOG_CONFIRM')
		if(isTouchActionbar() and not dialogViewMode) then
			Infinity_PushMenu('WORLD_DIALOG_LEFT')
			Infinity_PushMenu('WORLD_DIALOG_RIGHT')
		end
		greySidebars()
	"
	onClose
	"
		Infinity_PopMenu('WORLD_DIALOG_CONFIRM')
		Infinity_PopMenu('WORLD_DIALOG_LEFT')
		Infinity_PopMenu('WORLD_DIALOG_RIGHT')
		ungreySidebars()
	"
	label
	{
		name 'worldDialogBackground'
		area 0 -12 794 212
		mosaic box5
	}
	label
	{
		area 0 200 794 7
		mosaic box5B
	}
	label
	{
		area 0 207 794 63
		mosaic GUWBTP10
	}
	button 
	{ 
		enabled "h <= 450"
		area 766 148 22 22
		bam GUISV10
		scaleToClip
		sequence 0
		on pageup
		action 
		" 
			dragDialogMessagesY(-1000) 
		" 
	}
	button 
	{ 
		enabled "h >= 70"
		area 766 178 22 22
		bam GUISV10 
		scaleToClip
		sequence 1		
		on pagedown
		action 
		" 
			dragDialogMessagesY(300)
		" 
	}
	label
	{
		name "worldDialogPortraitArea"
		area 20 8 54 84
		bitmap lua "worldNPCDialogPortrait"
	}
	handle
	{
		name "dialogHandleY"
		area 0 -12 794 20
		actionDrag
		"
			dragDialogMessagesY(motionY)
		"
	}
	list
	{
		column
		{
			width 100
			text
			{
				enabled "rowNumber == 1"
				opacity lua "step == 1 and 0 or 255"
				area 0 0 -1 -1
				text lua "getDialogText(1)"
				text style "normal"
			}
			text
			{
				enabled "rowNumber == 2"
				area 0 0 -1 -1
				pad 0 0 0 12
				text lua "getDialogText(2)"
				text style "normal"
			}
			label
			{
				area 0 0 -1 -1
				enabled "rowNumber > 2 and rowNumber < #worldPlayerDialogChoices + 3 and dialogEntryGreyed()"
				fill 0 0 0 100
			}
			text
			{
				enabled "rowNumber > 2 and rowNumber < #worldPlayerDialogChoices + 3"
				area 0 0 -1 -1
				text lua "getDialogEntryText(rowNumber)"
				text style "normal"
			}
			text
			{
				enabled "rowNumber == #worldPlayerDialogChoices + 3"
				area 0 0 -1 -1
				text lua "getDialogPaddingText()"
				text style "normal"
			}
		}
		name "worldPlayerDialogChoicesList"
		area 80 8 673 192
		rowheight dynamic
		hideHighlight
		table "makeDialogTable()"
		var "worldPlayerDialogSelection"
		scrollbar	'GUISCRC'
		scrollbar func "dialogScroll"
		actionEnter
		"
			if(gameOptions.m_bConfirmDialog == true) then return end
			glowTest = mouseoverRow
			worldPlayerDialogSelection = mouseoverRow
		"
		actionExit
		"
			if(gameOptions.m_bConfirmDialog == true) then return end
			glowTest = nil
			worldPlayerDialogSelection = 0
		"
		action
		"
			--In confirm mode, just highlight the choice.
			if(gameOptions.m_bConfirmDialog == true) then return end
			if(worldPlayerDialogChoices[worldPlayerDialogSelection - 2] == nil) then return end
			worldScreen:OnDialogReplyClick(worldPlayerDialogChoices[worldPlayerDialogSelection - 2].marker)
			worldPlayerDialogSelection = 0
		"
	}
}
`
function getDialogButtonEnabled()
	if(gameOptions.m_bConfirmDialog == true) then
		return true
	else
		return (#worldPlayerDialogChoices == 0)
	end
end

function getDialogButtonClickable()
	if(gameOptions.m_bConfirmDialog == true) then
		return (#worldPlayerDialogChoices == 0) or (worldPlayerDialogSelection and worldPlayerDialogSelection > 2) --no choices, or we've selected a choice.
	else
		return true
	end
end
`
menu
{
	name 'WORLD_DIALOG_CONFIRM'
	align center bottom
	ignoreEsc
	offset 0 -10
	button
	{
		area 0 0 450 40
		bam CLIK2CON
		ScaleToClip
		text lua "dialogButtonText"
		enabled "getDialogButtonEnabled()"
		clickable lua "getDialogButtonClickable()"
		text style "button"
		text shadow 1
		action
		"
			if(gameOptions.m_bConfirmDialog == true and (#worldPlayerDialogChoices > 0)) then
				-- if confirm dialog and choices available.
				worldScreen:OnDialogReplyClick(worldPlayerDialogChoices[worldPlayerDialogSelection - 2].marker)
				worldPlayerDialogSelection = 0
			else
				-- no choices, just step.
				worldScreen:StepDialog()
			end
		"
	}
}

menu
{
	name 'CHARACTER_SELECT'
	align center center
	ignoreesc
	onOpen 
	"
	selectedCharacter = 0
	TT_BuildTitleData('IMPORT_CHARACTER_NORMAL', 604, true)
	TT_CreateTitleChars('IMPORT_CHARACTER_NORMAL', 'TT_CHARGEN_CHARLIST', 42, 'TEMPLATE_titlechar_CHARGEN_CHARLIST')
	"
	onClose	"TT_DestroyTitleChars('IMPORT_CHARACTER_NORMAL', 'TEMPLATE_titlechar_CHARGEN_CHARLIST')"
	label
	{
		mosaic GUICGPR
		area 0 0 1024 768
	}
	template
    {
        label
        {
            enabled "true"
            ignoreEvents
            area 0 0 -1 -1
            bam "TTREALMS"
            sequence lua "TT_TitleData['IMPORT_CHARACTER_NORMAL'][instanceId].seq"
            align center center
        }
        name "TEMPLATE_titlechar_CHARGEN_CHARLIST"
    }
	label
    {
        name "TT_CHARGEN_CHARLIST"
		area 206 48 604 42
		--text "CHARGEN_TITLE"
		--text style "title"
    }
	list
	{
		column
		{
			width 8
			label
			{
				area 0 0 0 100 --hack to pad the portrait on the bottom by forcing a min rowheight
			}
			label
			{
				area 0 9 73 102
				bam GUIRSP10
				ScaleToClip
				frame lua "selectedCharacter == rowNumber and 2 or 0"
			}
			label
			{
				area 10 17 54 84
				bitmap lua "character_select[rowNumber].portrait"
			}
			
		}
		column
		{
			width 92
			label
			{
				area 0 0 0 120 --hack to pad the portrait on the bottom by forcing a min rowheight
			}
			label
			{
				enabled "rowNumber%2"
				area 10 0 895 -1
				bam 'BG_UND'
				ScaleToClip
				sequence 4
			}
			label
			{
				area 20 0 -1 -1
				text lua "'^S' .. character_select[rowNumber].name .. '^-' .. '\n' .. character_select[rowNumber].desc" 
				text style "normal"
				text shadow 1
				text align left center
			}
		}
		area 20 144 1000 526
		rowheight dynamic
		hidehighlight
		table "character_select"
		var selectedCharacter
		scrollbar GUISTSCR
		action "Infinity_PlaySound('GAM_09')"
		actionDbl 
		"
		if selectedCharacter ~= 0 then
		Infinity_OnCharacterImportItemSelect(selectedCharacter - 1)
		createCharScreen:OnDoneButtonClick() 
		Infinity_PopMenu('CHARACTER_SELECT')
		end
		"
	}
	button
	{
		area 560 698 160 28
		text "DONE_BUTTON" 
		text style "button"
		text shadow 1
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		clickable lua "selectedCharacter ~= 0"
		action 
		"
			Infinity_OnCharacterImportItemSelect(selectedCharacter - 1)
			createCharScreen:OnDoneButtonClick() 
			Infinity_PopMenu('CHARACTER_SELECT')
		"
	}
	button
	{
		on escape
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		area 294 698 160 28
		text "BACK_BUTTON"
		text style "button"
		text shadow 1
		action 
		"
			createCharScreen:OnCancelButtonClick()
			Infinity_PopMenu('CHARACTER_SELECT')
		"
	}
}

`
chargen = {

	races = {},
	kits = {},

}
function chargenAcceptOrExport()
	if createCharScreen:GetEngineState() == 4 then
		return t("EXPORT_BUTTON")
	else
		return t("ACCEPT_BUTTON")

	end
end

`
menu
{
	name 'CHARGEN'
	align center center
	ignoreesc
	onOpen 
	"
	Infinity_PopMenu('JOURNAL')
	TT_BuildTitleData('CHARGEN_TITLE', 652, true)
	TT_CreateTitleChars('CHARGEN_TITLE', 'TT_CHARGEN', 44, 'TEMPLATE_titlechar_CHARGEN')
	"
	onclose	"TT_DestroyTitleChars('CHARGEN_TITLE', 'TEMPLATE_titlechar_CHARGEN')"
	label
	{
		area 0 0 1024 768
		mosaic 'GUICGB'
	}
	template
    {
        label
        {
            enabled "true"
            ignoreEvents
            area 0 0 -1 -1
            bam "TTREALMS"
            sequence lua "TT_TitleData['CHARGEN_TITLE'][instanceId].seq"
            align center center
        }
        name "TEMPLATE_titlechar_CHARGEN"
    }
	label
    {
        name "TT_CHARGEN"
		area 186 56 652 44
		--text "CHARGEN_TITLE"
		--text style "title"
    }
	text
	{
		area 362 238 306 438
		text lua "chargen.information"
		scrollbar 'GUIKNSBR'
		text style "normal_parchment"
	}
	label
	{
		area 794 223 178 279
		bitmap lua "chargen.portrait"
	}

	button
	{
		area 22 212 242 58
		bam GUICGC
		ScaleToClip
		sequenceonce lua "Infinity_RandomNumber(0, 6)"
		clickable lua "createCharScreen:GetCurrentStep() == 0"
		--glow lua "createCharScreen:GetCurrentStep() == 0"
		text "GENDER_BUTTON"
		text style "button"
		text shadow 1
		pad 8 2 8 2
		action "createCharScreen:OnMenuButtonClick()"
	}
	button
	{
		area 22 270 242 58
		bam GUICGC
		ScaleToClip
		sequenceonce lua "Infinity_RandomNumber(0, 6)"
		clickable lua "createCharScreen:GetCurrentStep() == 3"
		--glow lua "createCharScreen:GetCurrentStep() == 3"
		text "RACE_BUTTON"
		text style "button"
		text shadow 1
		pad 8 2 8 2
		action "createCharScreen:OnMenuButtonClick()"
	}
	button
	{
		area 22 328 242 58
		bam GUICGC
		ScaleToClip
		sequenceonce lua "Infinity_RandomNumber(0, 6)"
		clickable lua "createCharScreen:GetCurrentStep() == 4"
		--glow lua "createCharScreen:GetCurrentStep() == 4"
		text "CLASS_BUTTON"
		text style "button"
		text shadow 1
		pad 8 2 8 2
		action "createCharScreen:OnMenuButtonClick()"
	}
	button
	{
		area 22 386 242 58
		bam GUICGC
		ScaleToClip
		sequenceonce lua "Infinity_RandomNumber(0, 6)"
		clickable lua "createCharScreen:GetCurrentStep() == 7"
		--glow lua "createCharScreen:GetCurrentStep() == 7"
		text "ALIGNMENT_BUTTON"
		text style "button"
		text shadow 1
		pad 8 2 8 2
		action "createCharScreen:OnMenuButtonClick()"
	}

	button
	{
		area 22 444 242 58
		bam GUICGC
		ScaleToClip
		sequenceonce lua "Infinity_RandomNumber(0, 6)"
		clickable lua "createCharScreen:GetCurrentStep() == 8"
		--glow lua "createCharScreen:GetCurrentStep() == 8"
		text "ABILITIES_BUTTON"
		text style "button"
		text shadow 1
		pad 8 2 8 2
		action "createCharScreen:OnMenuButtonClick()"
	}
	button
	{
		area 22 502 242 58
		bam GUICGC
		ScaleToClip
		sequenceonce lua "Infinity_RandomNumber(0, 6)"
		clickable lua "createCharScreen:GetCurrentStep() == 9"
		--glow lua "createCharScreen:GetCurrentStep() == 9"
		text "SKILLS_BUTTON"
		text style "button"
		text shadow 1
		pad 8 2 8 2
		action "createCharScreen:OnMenuButtonClick()"
	}
	button
	{
		area 22 560 242 58
		bam GUICGC
		ScaleToClip
		sequenceonce lua "Infinity_RandomNumber(0, 6)"
		clickable lua "createCharScreen:GetCurrentStep() == 15"
		--glow lua "createCharScreen:GetCurrentStep() == 15"
		text "APPEARANCE_BUTTON"
		text style "button"
		text shadow 1
		pad 8 2 8 2
		action "createCharScreen:OnMenuButtonClick()"
	}
	button
	{
		area 22 618 242 58
		bam GUICGC
		ScaleToClip
		sequenceonce lua "Infinity_RandomNumber(0, 6)"
		clickable lua "createCharScreen:GetCurrentStep() == 17"
		--glow lua "createCharScreen:GetCurrentStep() == 17"
		text "NAME_BUTTON"
		text style "button"
		text shadow 1
		pad 8 2 8 2
		action "createCharScreen:OnMenuButtonClick()"
	}

	button
	{
		area 766 532 229 38
		text "IMPORT_BUTTON"
		text style "button"
		text shadow 1
		bam GUICGC
		ScaleToClip
		sequence 9
		action "createCharScreen:OnImportCharacterButtonClick()"
	}
	button
	{
		area 766 570 229 38
		text "BIOGRAPHY_BUTTON"
		text style "button"
		text shadow 1
		bam GUICGC
		ScaleToClip
		sequence 10
		clickable lua "createCharScreen:GetCurrentStep() >= 17"
		action "createCharScreen:OnBiographyButtonClick()"
	}
	button
	{
		on escape
		area 70 680 144 51
		--text "BACK_BUTTON"
		text style "button"
		text shadow 1
		bam GUICGC
		ScaleToClip
		sequence 8
		clickable lua "createCharScreen:IsMainBackButtonClickable()"
		action "createCharScreen:OnMainBackButtonClick()"
	}	
	button
	{
		area 778 651 203 48
		text lua "chargenAcceptOrExport()"
		text style "button"
		text shadow 1
		bam GUICGC
		ScaleToClip
		sequence 7
		clickable lua "createCharScreen:IsChargenComplete()"
		action "createCharScreen:AcceptCharacter(-1)"
	}
	button
	{
		on escape
		area 778 651 203 48
		text "CANCEL_BUTTON"
		text style "button"
		text shadow 1
		bam GUICGC
		ScaleToClip
		sequence 7
		enabled "not createCharScreen:IsMainBackButtonClickable()"
		action "createCharScreen:OnMainCancelButtonClick()"
	}
	button
	{
		area 766 168 229 38
		text "CREATE_PARTY_BUTTON"
		text style "button"
		text shadow 1
		bam GUICGC
		ScaleToClip
		sequence 10
		clickable lua "createCharScreen:IsAdvancedButtonClickable() == true"
		action "createCharScreen:OnAdvancedButtonClick()"
	}
}

`
createCharGenderHelp = 24313
`
menu
{
	name 'CHARGEN_GENDER'
	modal
	align center center
	ignoreesc
	offset 0 40
	onOpen "toggleMale = 0; toggleFemale = 0"
	
	label
	{
		area 0 0 310 478
		mosaic 'GUICGGEN'
	}
	label
	{
		area 20 12 278 44
		text "GENDER_TITLE"
		text style 'label'
		text align left center
		text point 22
		text shadow 1
	}
	label
	{
		area 26 140 258 134
		text lua "Infinity_FetchString(createCharGenderHelp)" 
		text style "normal"
		scrollbar 'GUISCRC'
	}
	button
	{
		area 58 60 100 63
		bam GUIGEND1
		sequence 0
		toggle toggleMale
		action "toggleFemale = 0; createCharScreen:OnGenderSelectButtonClick(1)"
		actionDbl "Infinity_PopMenu(); createCharScreen:OnDoneButtonClick()"
	}
	button
	{
		area 158 60 100 63
		bam GUIGEND1
		sequence 1
		toggle toggleFemale
		action "toggleMale = 0; createCharScreen:OnGenderSelectButtonClick(2)"
		actionDbl "Infinity_PopMenu(); createCharScreen:OnDoneButtonClick()"
	}
	button
	{
		on escape
		area 88 402 180 32
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text "BACK_BUTTON"
		text style "button"
		text shadow 1
		action "Infinity_PopMenu(); createCharScreen:OnCancelButtonClick()"
	}
	button
	{
		on return
		area 88 314 180 32
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text "DONE_BUTTON"
		text style "button"
		text shadow 1
		clickable lua "createCharScreen:IsDoneButtonClickable()"
		action "Infinity_PopMenu(); createCharScreen:OnDoneButtonClick()"
	}
}

menu
{
	name 'CHARGEN_PORTRAIT'
	modal
	align center center
	ignoreesc
	label
	{
		area 0 0 488 723
		mosaic 'GUICGAPP'
	}
	label
	{
		area 16 8 458 38
		text "APPEARANCE_TITLE"
		text style 'label'
		text align left center
		text point 22
		text shadow 1
	}
	button
	{
		area 8 274 60 99
		bam GUIAPC
		sequence 0
		action "createCharScreen:DecCurrentPortrait()"
	}
	button
	{
		area 414 274 60 99
		bam GUIAPC
		sequence 1
		action "createCharScreen:IncCurrentPortrait()"
	}

	label
	{
		area 74 56 338 531
		bitmap lua "createCharScreen:GetCurrentPortrait()"
	}

	button
	{
		area 62 600 356 34
		bam GUIRECC
		ScaleToClip		
		sequenceonce lua "Infinity_RandomNumber(0, 3)"
		text "CUSTOM_BUTTON"
		text style "button"
		text shadow 1
		enabled "not e:IsTouchUI()"
		action "
			TEXT_popup_big = 17188
			Infinity_PushMenu('POPUP_BIG')
			"
	}

	button
	{
		on escape
		area 76 654 170 30
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text "BACK_BUTTON"
		text style "button"
		text shadow 1
		action "Infinity_PopMenu(); createCharScreen:OnCancelButtonClick()"
	}
	button
	{
		on return
		area 284 654 170 30
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text "DONE_BUTTON"
		text style "button"
		text shadow 1
		clickable lua "createCharScreen:IsDoneButtonClickable()"
		action "Infinity_PopMenu(); createCharScreen:OnDoneButtonClick()"
	}

}

`
function raceOrGeneralHelp()
	race = chargen.races[currentChargenRace]
	if race then
		return Infinity_FetchString(race.desc)
	else
		return Infinity_FetchString(17237)
	end
end
function getChargenFrame()
	if cellNumber == cellNum and rowSelected == rowNumber then
		return 2
	elseif rowSelected == rowNumber then return 1
	else	return 0
	end
end
`
menu
{
	name 'CHARGEN_RACE'
	modal
	align center center
	ignoreesc
	onopen "currentChargenRace = nil; ticksPassed = 0; ticksStarting = 0"
	label
	{
		area 0 0 380 613
		mosaic GUICGWDC
	}
	label
	{
		area 22 12 336 38
		text "RACE_TITLE"
		text style 'label'
		text align left center
		text point 22
		text shadow 1
	}
	list
	{
		column
		{
			width 100
			label
			{
				area 0 0 336 35
				bam GUIRECC
				ScaleToClip
				frame lua "getChargenFrame()"
				sequenceonce lua "rowNumber % 4"
			}
			label
			{
				enabled "ticksStarting == 0 or rowSelected ~= rowNumber"
				area 0 0 336 35
				text lua "Infinity_FetchString(chargen.races[rowNumber].name)"
				text style "button"
				text shadow 1
				text align	center center				
			}
			label
			{
				enabled "ticksStarting ~= 0 and rowSelected == rowNumber"
				area 2 2 336 35
				text lua "Infinity_FetchString(chargen.races[rowNumber].name)"
				text style "button"
				text shadow 1
				text align	center center				
			}
		}
		action "
			if chargen.races[currentChargenRace] then
				createCharScreen:OnRaceSelectButtonClick(chargen.races[currentChargenRace].id)
			end
			cellNumber = nil
			rowNumber = nil
			ticksPassed = 0
			ticksStarting = 0
			"
		actionUpdate 
		"	
			ticksStarting = ticksStarting + 1
			if ticksStarting > 10 then
				ticksPassed = ticksPassed + 1
				if ticksPassed > 3 then
					ticksPassed = 0
				end
			end
		"
		actionDbl "Infinity_PopMenu(); createCharScreen:OnDoneButtonClick()"
		rowheight 35
		area 22 62 336 324
		table "chargen.races"
		var currentChargenRace
		hidehighlight
	}
	label --random option
	{
		on R
		action 
		"
			while (true) do
				local rand = Infinity_RandomNumber(1, length(chargen.races)) 	
				if currentChargenRace ~= rand then currentChargenRace = rand; break end --no doubles allowed
			end
		cellNumber = cellNum --needed for proper frame
		if chargen.races[currentChargenRace] then
				createCharScreen:OnRaceSelectButtonClick(chargen.races[currentChargenRace].id)
			end
			Infinity_PlaySound('GAM_03')
		"
	}
	text
	{
		area 26 400 332 122
		text lua "raceOrGeneralHelp()"
		text style "normal"
		scrollbar	'GUISCRC'
		action "		
			Infinity_PlaySound('GAM_09')
			TEXT_popup_big = chargen.races[currentChargenRace].desc
			Infinity_PushMenu('POPUP_BIG')
		"
	}
	button
	{
		on escape
		area 28 553 147 29
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text "BACK_BUTTON"
		text style "button"
		text shadow 1
		action "Infinity_PopMenu(); createCharScreen:OnCancelButtonClick()"
	}
	button
	{
		on return
		area 205 553 147 29
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text "DONE_BUTTON"
		text style "button"
		text shadow 1
		clickable lua "createCharScreen:IsDoneButtonClickable()"
		action "Infinity_PopMenu(); createCharScreen:OnDoneButtonClick()"
	}

}
`
function classOrGeneralHelp()
	class = chargen.class[currentChargenClass]
	if class then
		return Infinity_FetchString(class.desc)
	else
		--only bit that may need to change for dual class! :)
		return Infinity_FetchString(17242)
	end
end
`
menu
{
	name 'CHARGEN_CLASS'
	modal
	align center center
	ignoreesc
	onopen "currentChargenClass = nil; ticksPassed = 0; ticksStarting = 0"
	label
	{
		area 0 0 380 693
		mosaic GUICGWDE
	}
	label
	{
		area 22 12 336 38
		text "CLASS_TITLE"
		text style 'label'
		text align left center
		text point 22
		text shadow 1
	}
	list
	{
		column
		{
			width 100
			label
			{
				area 0 0 330 30
				bam GUIRECC
				ScaleToClip
				frame lua "getChargenFrame()"
				sequenceonce lua "rowNumber % 4"
			}
			label
			{
				enabled "ticksStarting == 0 or rowSelected ~= rowNumber"
				area 0 0 330 30
				text lua "Infinity_FetchString(chargen.class[rowNumber].name)"
				text style "button"
				text shadow 1
				text align	center center				
			}
			label
			{
				enabled "ticksStarting ~= 0 and rowSelected == rowNumber"
				area 2 2 330 30
				text lua "Infinity_FetchString(chargen.class[rowNumber].name)"
				text style "button"
				text shadow 1
				text align	center center				
			}
		}
		action "
			if chargen.class[currentChargenClass] then
				createCharScreen:OnClassSelectButtonClick(chargen.class[currentChargenClass].id)
			end
			cellNumber = nil
			rowNumber = nil
			ticksPassed = 0
			ticksStarting = 0
			"
		actionUpdate 
		"	
			ticksStarting = ticksStarting + 1
			if ticksStarting > 10 then
				ticksPassed = ticksPassed + 1
				if ticksPassed > 3 then
					ticksPassed = 0
				end
			end
		"
		actionDbl "Infinity_PopMenu(); createCharScreen:OnDoneButtonClick()"
		rowheight 30
		area 22 62 350 404
		table "chargen.class"
		var currentChargenClass
		scrollbar 'GUISTSCR'
		actionDbl "createCharScreen:OnDoneButtonClick(); Infinity_PopMenu('CHARGEN_CLASS'); "
	}
	label --random option
	{
		on R
		action 
		"
			while (true) do
				local rand = Infinity_RandomNumber(1, length(chargen.class)) 	
				if currentChargenClass ~= rand then currentChargenClass = rand; break end --no doubles allowed
			end
		cellNumber = cellNum --needed for proper frame
		if chargen.class[currentChargenClass] then
				createCharScreen:OnClassSelectButtonClick(chargen.class[currentChargenClass].id)
			end
			Infinity_PlaySound('GAM_03')
		"
	}
	text
	{
		area 26 480 332 122
		text lua "classOrGeneralHelp()"
		text style "normal"
		scrollbar	'GUISCRC'
		action "		
			Infinity_PlaySound('GAM_09')
			TEXT_popup_big = chargen.class[currentChargenClass].desc
			Infinity_PushMenu('POPUP_BIG')
		"
	}
	button
	{
		on escape
		area 28 633 147 29
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text "BACK_BUTTON"
		text style "button"
		text shadow 1
		clickable lua "createCharScreen:GetCurrentStep() ~= const.STEP_DUALCLASS_CLASS"
		action "createCharScreen:OnCancelButtonClick(); Infinity_PopMenu('CHARGEN_CLASS');"
	}
	button
	{
		on return
		area 205 633 147 29
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text "DONE_BUTTON"
		text style "button"
		text shadow 1
		clickable lua "createCharScreen:IsDoneButtonClickable()"
		action "createCharScreen:OnDoneButtonClick(); Infinity_PopMenu('CHARGEN_CLASS'); "
	}

}
`
function kitOrGeneralHelp()
	kit = chargen.kit[currentChargenKit]
	if kit then
		return Infinity_FetchString(kit.desc)
	else
		return Infinity_FetchString(17242)
	end
end
`
menu
{
	name 'CHARGEN_KIT'
	modal
	align center center
	ignoreesc
	onopen "currentChargenKit = nil; ticksPassed = 0; ticksStarting = 0"
	label
	{
		area 0 0 380 693
		mosaic GUICGWDE
	}
	label
	{
		area 22 12 336 38
		text "CLASS_KIT_TITLE"
		text style 'label'
		text align left center
		text point 22
		text shadow 1
	}
	list
	{
		column
		{
			width 100
			label
			{
				area 0 0 330 30
				bam GUIRECC
				ScaleToClip
				frame lua "getChargenFrame()"
				sequenceonce lua "rowNumber % 4"
			}
			label
			{
				enabled "ticksStarting == 0 or rowSelected ~= rowNumber"
				area 0 0 330 30
				text lua "Infinity_FetchString(chargen.kit[rowNumber].name)"
				text style "label"
				text shadow 1
				text align	center center				
			}
			label
			{
				enabled "ticksStarting ~= 0 and rowSelected == rowNumber"
				area 2 2 330 30
				text lua "Infinity_FetchString(chargen.kit[rowNumber].name)"
				text style "label"
				text shadow 1
				text align	center center				
			}
		}
		action "
			if chargen.kit[currentChargenKit] then
				createCharScreen:OnKitSelectButtonClick(chargen.kit[currentChargenKit].id)
			end
			cellNumber = nil
			rowNumber = nil
			ticksPassed = 0
			ticksStarting = 0
			"
		actionUpdate 
		"	
			ticksStarting = ticksStarting + 1
			if ticksStarting > 10 then
				ticksPassed = ticksPassed + 1
				if ticksPassed > 3 then
					ticksPassed = 0
				end
			end
		"
		actionDbl "Infinity_PopMenu(); createCharScreen:OnDoneButtonClick()"	
		rowheight 30
		area 22 62 350 404
		table "chargen.kit"
		var currentChargenKit	
		scrollbar 'GUISTSCR'
	}
	label --random option
	{
		on R
		action 
		"
			while (true) do
				local rand = Infinity_RandomNumber(1, length(chargen.kit)) 	
				if currentChargenKit ~= rand then currentChargenKit = rand; break end --no doubles allowed
			end
		cellNumber = cellNum --needed for proper frame
		if chargen.kit[currentChargenKit] then
				createCharScreen:OnKitSelectButtonClick(chargen.kit[currentChargenKit].id)
			end
			Infinity_PlaySound('GAM_03')
		"
	}
	text
	{
		area 26 480 332 122
		text lua "kitOrGeneralHelp()"
		text style "normal"
		scrollbar	'GUISCRC'
		action "		
			Infinity_PlaySound('GAM_09')
			TEXT_popup_big = chargen.kit[currentChargenKit].desc
			Infinity_PushMenu('POPUP_BIG')
		"
	}
	button
	{
		on escape
		area 28 633 147 29
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text "BACK_BUTTON"
		text style "button"
		text shadow 1
		action "Infinity_PopMenu(); createCharScreen:OnCancelButtonClick()"
	}
	button
	{
		on return
		area 205 633 147 29
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text "DONE_BUTTON"
		text style "button"
		text shadow 1
		clickable lua "createCharScreen:IsDoneButtonClickable()"
		action "Infinity_PopMenu(); createCharScreen:OnDoneButtonClick()"
	}

}
`
function alignmentOrGeneralHelp()
	alignment = chargen.alignment[currentChargenAlignment]
	if alignment then
		return Infinity_FetchString(alignment.desc)
	else
		return Infinity_FetchString(9602)
	end
end
`
menu
{
	name 'CHARGEN_ALIGNMENT'
	modal
	align center center
	ignoreesc
	onopen "currentChargenAlignment = nil; ticksPassed = 0; ticksStarting = 0"
	label
	{
		area 0 0 380 613
		mosaic GUICGWDC
	}
	label
	{
		area 22 12 336 38
		text "ALIGNMENT_TITLE"
		text style 'label'
		text align left center
		text point 22
		text shadow 1
	}
	list
	{
		column
		{
			width 100
			label
			{
				area 0 0 336 35
				bam GUIRECC
				ScaleToClip
				frame lua "getChargenFrame()"
				sequenceonce lua "rowNumber % 4"
			}
			label
			{
				enabled "ticksStarting == 0 or rowSelected ~= rowNumber"
				area 0 0 336 35
				text lua "Infinity_FetchString(chargen.alignment[rowNumber].name)"
				text style "label"
				text shadow 1
				text align	center center				
			}
			label
			{
				enabled "ticksStarting ~= 0 and rowSelected == rowNumber"
				area 2 2 336 35
				text lua "Infinity_FetchString(chargen.alignment[rowNumber].name)"
				text style "label"
				text shadow 1
				text align	center center				
			}
		}
		action "
			if chargen.alignment[currentChargenAlignment] then
				createCharScreen:OnAlignmentSelectButtonClick(chargen.alignment[currentChargenAlignment].id)
			end
			cellNumber = nil
			rowNumber = nil
			ticksPassed = 0
			ticksStarting = 0
			"
		actionUpdate 
		"	
			ticksStarting = ticksStarting + 1
			if ticksStarting > 10 then
				ticksPassed = ticksPassed + 1
				if ticksPassed > 3 then
					ticksPassed = 0
				end
			end
		"
		actionDbl "Infinity_PopMenu(); createCharScreen:OnDoneButtonClick()"	
		rowheight 35
		area 22 62 354 324
		table "chargen.alignment"
		var currentChargenAlignment
		scrollbar	'GUISCRC'
	}
	label --random option
	{
		on R
		action 
		"
			while (true) do
				local rand = Infinity_RandomNumber(1, length(chargen.alignment)) 	
				if currentChargenAlignment ~= rand then currentChargenAlignment = rand; break end --no doubles allowed
			end
		cellNumber = cellNum --needed for proper frame
		if chargen.alignment[currentChargenAlignment] then
				createCharScreen:OnAlignmentSelectButtonClick(chargen.alignment[currentChargenAlignment].id)
			end
			Infinity_PlaySound('GAM_03')
		"
	}
	text
	{
		area 26 400 332 122
		text lua "alignmentOrGeneralHelp()"
		text style "normal"
		scrollbar	'GUISCRC'
		action "		
			Infinity_PlaySound('GAM_09')
			TEXT_popup_big =chargen.alignment[currentChargenAlignment].desc
			Infinity_PushMenu('POPUP_BIG')
		"
	}
	button
	{
		on escape
		area 28 553 147 29
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text "BACK_BUTTON"
		text style "button"
		text shadow 1
		action "Infinity_PopMenu(); createCharScreen:OnCancelButtonClick()"
	}
	button
	{
		on return
		area 205 553 147 29
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text "DONE_BUTTON"
		text style "button"
		text shadow 1
		clickable lua "createCharScreen:IsDoneButtonClickable()"
		action "Infinity_PopMenu(); createCharScreen:OnDoneButtonClick()"
	}

}
`
chargen.ability = {
	{name = 'STRENGTH_LABEL', desc = 9582},
	{name = 'DEXTERITY_LABEL', desc = 9584},
	{name = 'CONSTITUTION_LABEL', desc = 9583},
	{name = 'INTELLIGENCE_LABEL', desc = 9585},
	{name = 'WISDOM_LABEL', desc = 9586},
	{name = 'CHARISMA_LABEL', desc = 9587},
}

function abilityOrGeneralHelp()
	ability = chargen.ability[currentChargenAbility]
	if ability and ability.desc ~= -1 then
		createCharScreen:SetAbilityHelpInfo(currentChargenAbility)
		return Infinity_FetchString(ability.desc)
	else
		return Infinity_FetchString(17247)
	end
end

function StoreRoll()
	storedTotalRoll = chargen.totalRoll
	chargen.ability[ 1 ].storedRoll = chargen.ability[ 1 ].roll
	chargen.ability[ 2 ].storedRoll = chargen.ability[ 2 ].roll
	chargen.ability[ 3 ].storedRoll = chargen.ability[ 3 ].roll
	chargen.ability[ 4 ].storedRoll = chargen.ability[ 4 ].roll
	chargen.ability[ 5 ].storedRoll = chargen.ability[ 5 ].roll
	chargen.ability[ 6 ].storedRoll = chargen.ability[ 6 ].roll
end
function getRecallText()
if storedTotalRoll == nil or not createCharScreen:IsAbilityRecallButtonClickable() then return t('RECALL_BUTTON') end
return t('RECALL_BUTTON') .. ' (' .. storedTotalRoll .. ')'
end
`

menu
{
	name 'CHARGEN_ABILITIES'
	modal
	align center center
	ignoreesc
	onopen "ticksPassed = 0; ticksStarting = 0"
	label
	{
		area 0 0 489 691
		mosaic GUICGROL
	}
	label
	{
		area 22 12 336 38
		text "ABILITIES_TITLE"
		text style 'label'
		text align left center
		text point 22
		text shadow 1
	}
	list
	{
		column
		{
			width 66
			label
			{
				area 0 0 -1 50
				text lua "t(chargen.ability[rowNumber].name)"
				text style "label"
				text shadow 1
				pad 0 0 7 0
				align right center
				
			}
		}
		column
		{
			width 19
			label
			{
				area 0 0 90 50
				text lua "chargen.ability[rowNumber].roll"
				text style "normal"
				text shadow 1
				align center center
			}
		}
		column
		{
			width 7
			label
			{
				area 0 8 34 34
				bam GUIOSW
				ScaleToClip
				frame lua "currentCellCheck(3)"
				sequence 0
			}
		}
		column
		{
			width 7
			label
			{
				area 0 8 34 34
				bam GUIOSW
				ScaleToClip
				frame lua "currentCellCheck(4)"
				sequence 1

			}
		}
		action 
		"
			if ticksStarting < 10 then 
				if cellNumber == 3 then
					createCharScreen:OnAbilityPlusMinusButtonClick(currentChargenAbility, true)
				elseif cellNumber == 4 then
					createCharScreen:OnAbilityPlusMinusButtonClick(currentChargenAbility, false)
				end
			end
			cellNumber = nil
			ticksPassed = 0
			ticksStarting = 0
		"
		actionUpdate 
		"
			ticksStarting = ticksStarting + 1
			if ticksStarting > 10 then
				ticksPassed = ticksPassed + 1
				if ticksPassed > 2 then
					if cellNumber == 3 then
						createCharScreen:OnAbilityPlusMinusButtonClick(currentChargenAbility, true)
					elseif cellNumber == 4 then
						createCharScreen:OnAbilityPlusMinusButtonClick(currentChargenAbility, false)
					end
					ticksPassed = 0
				end
			end
		"

		rowheight 50
		hidehighlight
		area 8 58 469 300
		table "chargen.ability"
		var currentChargenAbility
	}
	label
	{
		area 213 358 186 50
		text "TOTAL_ROLL_NORMAL"
		text style "label"
		text shadow 1
		text align right center
	}
	label
	{
		area 405 358 69 50
		text lua "chargen.totalRoll"
		text style "big_button"
		text shadow 1
		text align center center
	}
	label
	{
		area 408 24 62 32
		text lua "chargen.extraAbilityPoints"
		text style "normal"
		text shadow 1
		text align center center
	}


	text
	{
		area 32 474 430 124
		text lua "abilityOrGeneralHelp()"
		text style "normal"
		scrollbar	'GUISCRC'
	}

	button
	{
		area 320 411 151 54
		bam GUIABC
		ScaleToClip
		text "REROLL_BUTTON"
		text style "button"
		text shadow 1
		on R
		action "createCharScreen:OnAbilityReRollButtonClick()"
		actionAlt 
		"
		createCharScreen:OnAbilityReRollButtonClick()
			for i=1, 15 do createCharScreen:OnAbilityPlusMinusButtonClick( 6, false) end
			for i=1, 15 do createCharScreen:OnAbilityPlusMinusButtonClick( 5, false) end
			for i=1, 15 do createCharScreen:OnAbilityPlusMinusButtonClick( 4, false) end
		for i=0, chargen.extraAbilityPoints do
			createCharScreen:OnAbilityPlusMinusButtonClick( 1, true)
		end
		"
	}
	label
	{
		on P --Cheat for only rolls above or equal to 90
		action
		"
			createCharScreen:OnAbilityReRollButtonClick()
			while chargen.totalRoll < 90 do
				createCharScreen:OnAbilityReRollButtonClick()
			end
		"
	}
	button
	{
		area 169 411 151 54
		bam GUIABC
		ScaleToClip
		text "STORE_BUTTON"
		text style "button"
		text shadow 1
		on S
		action 
		"
		createCharScreen:OnAbilityStoreButtonClick()
		StoreRoll()
		"
	}
	button
	{
		area 18 411 151 54
		bam GUIABC		
		ScaleToClip
		text lua "getRecallText()"
		text style "button"
		text shadow 1
		on C
		clickable lua "createCharScreen:IsAbilityRecallButtonClickable()"
		action "createCharScreen:OnAbilityRecallButtonClick()"
	}

	button
	{
		on '8'
		action "createCharScreen:OnCheatyMcCheaterson()"
	}

	button
	{
		on escape
		area 133 631 147 29
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text "BACK_BUTTON"
		text style "button"
		text shadow 1
		action "Infinity_PopMenu(); createCharScreen:OnCancelButtonClick()"
	}
	button
	{
		on return
		area 313 631 147 29
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text "DONE_BUTTON"
		text style "button"
		text shadow 1
		clickable lua "createCharScreen:IsDoneButtonClickable()"
		action "Infinity_PopMenu(); createCharScreen:OnDoneButtonClick()"
	}

}

`
function proficiencyOrGeneralHelp()
	local prof = chargen.proficiency[currentChargenProficiency]
	local skill = chargen.thief_skill[currentChargenThiefSkill]
	if prof and prof.desc ~= -1 then
		return Infinity_FetchString(prof.desc)
	elseif skill and skill.desc ~= -1 then
		return Infinity_FetchString(skill.description)
	else
		if(chargen.levelingUp) then
			if(levelUpInfoToggle == 1) then
				return chargen.charInfo
			else
				return chargen.levelInfo
			end
		else
		return Infinity_FetchString(24315)
	end
	end
end

function getProficienciesTitle()
	if(chargen.levelingUp) then
		return t("LEVEL_UP_TITLE")
	else
		return t("PROFICIENCIES_LABEL")
	end
end

function isChargenProficienciesBackButtonClickable()
	return ((not chargen.levelingUp) and createCharScreen:GetCurrentStep() ~= const.STEP_DUALCLASS_PROFICIENCIES)
end

function getName()
	if string.len(characters[currentID].name) > 1 then return characters[currentID].name
	else return Infinity_FetchString(characters[currentID].gender) .. ' ' .. Infinity_FetchString(characters[currentID].race) end
end
`

menu
{
	name 'CHARGEN_PROFICIENCIES'
	modal
	align center center
	ignoreesc
	onopen "
	currentChargenProficiency = nil; currentChargenThiefSkill = nil; ticksPassed = 0; ticksStarting = 0
	TT_BuildTitleData(getProficienciesTitle(), 354, true)
	TT_CreateTitleChars(getProficienciesTitle(), 'TT_PROFICIENCIES', 42, 'TEMPLATE_titlechar_PROFICIENCIES')
	"
	onclose	"TT_DestroyTitleChars(getProficienciesTitle(), 'TEMPLATE_titlechar_PROFICIENCIES')"
	label
	{
		area 0 0 1024 768
		mosaic GUILUPB
	}
	template
    {
        label
        {
            enabled "true"
            ignoreEvents
            area 0 0 -1 -1
            bam "TTREALMS"
            sequence lua "TT_TitleData[getProficienciesTitle()][instanceId].seq"
            align center center
        }
        name "TEMPLATE_titlechar_PROFICIENCIES"
    }
	label
    {
        name "TT_PROFICIENCIES"
		area 42 38 354 42
		--text lua "getProficienciesTitle()"
		--text style "title"
    }
	label --shadow
	{
		area 516 25 402 49
		text lua "getName()"
		text style "label"
		text point 27
		text color 5
	}
	label
	{
		area 518 27 402 49
		text lua "getName()"
		text style "label"
		text point 27
	}
	label --shadow
	{
		area 520 74 394 38
		text lua "characters[currentID].class"
		text style "label"
		text point 18
		text color 5
	}
	label
	{
		area 522 76 394 38
		text lua "characters[currentID].class"
		text style "label"
		text point 18
	}
	label
	{
		area 82 159 374 33
		text "PROF_SLOTS_LABEL"
		text style "label"
		text point 20
		text shadow 1
		text align left center
	}
	label
	{
		area 464 159 64 33
		text lua "chargen.extraProficiencySlots"
		text style "label"
		text shadow 1
	}
	label
	{
		area 608 159 280 33
		text "SKILLS_LABEL"
		text style "label"
		text point 20
		text shadow 1
		text align left center
	}
	label
	{
		area 894 159 64 33
		text lua "chargen.extraSkillPoints"
		text style "label"
		text shadow 1
	}

	list
	{
		column
		{
			width 55
			label
			{
				area 0 0 230 -1
				text lua "Infinity_FetchString(chargen.proficiency[rowNumber].name)"
				text style "label"
				text shadow 1
				align right center
				
			}
			label
			{
				enabled "rowNumber == currentChargenProficiency"
				area 0 0 230 -1
				text lua "Infinity_FetchString(chargen.proficiency[rowNumber].name)"
				text style "label"
				text color S
				text shadow 1
				align right center
				
			}
		}
		column
		{
			width 6
			label
			{
				bam GUIPFC
				area 0 12 25 26
				ScaleToClip
				enabled "chargen.proficiency[rowNumber].value > 4"
			}
		}
		column
		{
			width 6
			label
			{
				bam GUIPFC
				area 0 12 25 26
				ScaleToClip
				enabled "chargen.proficiency[rowNumber].value > 3"
			}
		}
		column
		{
			width 6
			label
			{
				bam GUIPFC
				area 0 12 25 26
				ScaleToClip
				enabled "chargen.proficiency[rowNumber].value > 2"
			}
		}
		column
		{
			width 6
			label
			{
				bam GUIPFC
				area 0 12 25 26
				ScaleToClip
				enabled "chargen.proficiency[rowNumber].value > 1"
			}
		}
		column
		{
			width 6
			label
			{
				bam GUIPFC
				area 0 12 25 26
				ScaleToClip
				enabled "chargen.proficiency[rowNumber].value > 0"
			}
		}
		column
		{
			width 8
			label
			{
				area 3 10 33 30
				bam GUIOSW
				frame lua "getPlusFrame(7)"
				sequence 0
				ScaleToClip
			}
		}
		column
		{
			width 9
			label
			{
				area 0 10 33 30
				bam GUIOSW
				sequence 1
				ScaleToClip
				frame lua "getMinusFrame(8)"
			}
		}

		action 
		"
			currentChargenThiefSkill = nil
			if ticksStarting < 10 then
				if cellNumber == 7 and plusButtonClickable(currentChargenProficiency) then
					createCharScreen:OnProficiencyPlusMinusButtonClick(chargen.proficiency[currentChargenProficiency].id, true)
				elseif cellNumber == 8 and minusButtonClickable(currentChargenProficiency) then
					createCharScreen:OnProficiencyPlusMinusButtonClick(chargen.proficiency[currentChargenProficiency].id, false)
				end
			end
			cellNumber = nil
			ticksPassed = 0
			ticksStarting = 0
		"
		actionUpdate 
		"
			currentChargenThiefSkill = nil
			ticksStarting = ticksStarting + 1
			if ticksStarting > 10 then
				ticksPassed = ticksPassed + 1
				if ticksPassed > 7 then
					if cellNumber == 7 and plusButtonClickable(currentChargenProficiency) then
						createCharScreen:OnProficiencyPlusMinusButtonClick(chargen.proficiency[currentChargenProficiency].id, true)
					elseif cellNumber == 8 and minusButtonClickable(currentChargenProficiency) then
						createCharScreen:OnProficiencyPlusMinusButtonClick(chargen.proficiency[currentChargenProficiency].id, false)
					end
					ticksPassed = 0
				end
			end
		"
		rowheight 50
		area 64 200 478 400
		table "chargen.proficiency"
		var currentChargenProficiency
		scrollbar	'GUISTSCR'
		scrollbar clunkyScroll 50
		hidehighlight
	}
	list
	{
		column
		{
			width 65
			label
			{
				area 0 0 210 50
				text lua "Infinity_FetchString(chargen.thief_skill[rowNumber].name)"
				text style "label"
				text shadow 1
				text align right center
				
			}
			label
			{
				enabled "rowNumber == currentChargenThiefSkill"
				area 0 0 210 50
				text lua "Infinity_FetchString(chargen.thief_skill[rowNumber].name)"
				text style "label"				
				text color S
				text shadow 1
				text align right center
			}
		}
		column
		{
			width 15
			label
			{
				area 0 0 50 50
				text lua "chargen.thief_skill[rowNumber].value .. '%'"
				text style "label"
				text align center center

			}
		}
		column
		{
			width 10
			label
			{
				area 4 10 33 30
				bam GUIOSW
				enabled "createCharScreen:IsThiefSkillPlusMinusButtonClickable()"
				frame lua "currentCellCheck(3)"
				sequence 0
				ScaleToClip
			}
		}
		column
		{
			width 10
			label
			{
				area 1 10 33 30
				bam GUIOSW
				enabled "createCharScreen:IsThiefSkillPlusMinusButtonClickable()"
				frame lua "currentCellCheck(4)"
				sequence 1
				ScaleToClip
			}
		}

		action 
		"
			currentChargenProficiency = nil
			if ticksStarting < 10 then
				if createCharScreen:IsThiefSkillPlusMinusButtonClickable() then
					if cellNumber == 3 then
						createCharScreen:OnThiefSkillPlusMinusButtonClick(chargen.thief_skill[currentChargenThiefSkill].id, true)createCharScreen:OnThiefSkillPlusMinusButtonClick(chargen.thief_skill[currentChargenThiefSkill].id, true)createCharScreen:OnThiefSkillPlusMinusButtonClick(chargen.thief_skill[currentChargenThiefSkill].id, true)createCharScreen:OnThiefSkillPlusMinusButtonClick(chargen.thief_skill[currentChargenThiefSkill].id, true)createCharScreen:OnThiefSkillPlusMinusButtonClick(chargen.thief_skill[currentChargenThiefSkill].id, true)
					elseif cellNumber == 4 then
						createCharScreen:OnThiefSkillPlusMinusButtonClick(chargen.thief_skill[currentChargenThiefSkill].id, false)createCharScreen:OnThiefSkillPlusMinusButtonClick(chargen.thief_skill[currentChargenThiefSkill].id, false)createCharScreen:OnThiefSkillPlusMinusButtonClick(chargen.thief_skill[currentChargenThiefSkill].id, false)createCharScreen:OnThiefSkillPlusMinusButtonClick(chargen.thief_skill[currentChargenThiefSkill].id, false)createCharScreen:OnThiefSkillPlusMinusButtonClick(chargen.thief_skill[currentChargenThiefSkill].id, false)
					end
				end
			end
			cellNumber = nil
			ticksPassed = 0
			ticksStarting = 0
		"
		actionUpdate 
		"
			currentChargenProficiency = nil
			if createCharScreen:IsThiefSkillPlusMinusButtonClickable() then
				ticksStarting = ticksStarting + 1
				if ticksStarting > 10 then
					ticksPassed = ticksPassed + 1
					if ticksPassed > 2 then
						if cellNumber == 3 then
							createCharScreen:OnThiefSkillPlusMinusButtonClick(chargen.thief_skill[currentChargenThiefSkill].id, true)createCharScreen:OnThiefSkillPlusMinusButtonClick(chargen.thief_skill[currentChargenThiefSkill].id, true)createCharScreen:OnThiefSkillPlusMinusButtonClick(chargen.thief_skill[currentChargenThiefSkill].id, true)createCharScreen:OnThiefSkillPlusMinusButtonClick(chargen.thief_skill[currentChargenThiefSkill].id, true)createCharScreen:OnThiefSkillPlusMinusButtonClick(chargen.thief_skill[currentChargenThiefSkill].id, true)
						elseif cellNumber == 4 then
							createCharScreen:OnThiefSkillPlusMinusButtonClick(chargen.thief_skill[currentChargenThiefSkill].id, false)createCharScreen:OnThiefSkillPlusMinusButtonClick(chargen.thief_skill[currentChargenThiefSkill].id, false)createCharScreen:OnThiefSkillPlusMinusButtonClick(chargen.thief_skill[currentChargenThiefSkill].id, false)createCharScreen:OnThiefSkillPlusMinusButtonClick(chargen.thief_skill[currentChargenThiefSkill].id, false)createCharScreen:OnThiefSkillPlusMinusButtonClick(chargen.thief_skill[currentChargenThiefSkill].id, false)
						end
						ticksPassed = 0
					end
				end
			end
		"

		rowheight 50
		area 612 192 360 200
		table "chargen.thief_skill"
		var currentChargenThiefSkill
		scrollbar	'GUISTSCR'
		scrollbar clunkyScroll 50
		hidehighlight
	}

	text
	{
		area 634 426 290 190
		text lua "proficiencyOrGeneralHelp()"
		text style "normal_parchment"
		scrollbar	'GUIKNSBR'
	}
	label --under button
	{
		enabled "chargen.levelingUp"
		area 402 650 221 102
		bam 'BG_UND'
		sequence 5
		ScaleToClip
	}
	button
	{
		enabled "chargen.levelingUp"
		area 418 678 185 40
		bam BIGBUTT
		ScaleToClip
		text "INFORMATION_BUTTON"
		text style "button"
		text shadow 1
		toggle "levelUpInfoToggle"
		action
		"
			currentChargenProficiency = nil
		"
	}
	button
	{
		on escape
		area 152 678 185 40
		bam BIGBUTT
		ScaleToClip
		text "BACK_BUTTON"
		text style "button"
		text shadow 1
		clickable lua "isChargenProficienciesBackButtonClickable()"
		action "createCharScreen:OnCancelButtonClick();"
	}
	button
	{
		on return
		area 686 678 185 40
		bam BIGBUTT
		ScaleToClip
		text "DONE_BUTTON"
		text style "button"
		text shadow 1
		clickable lua "createCharScreen:IsDoneButtonClickable()"
		action "createCharScreen:OnDoneButtonClick();"
	}

}
`
function specialistFrame(num, cellNum)
	spl = chargen.choose_spell[num]
	if  spl == nil then return 5
	elseif cellNumber == cellNum and rowSelected == rowNumber  then return 1
	elseif spellBook[chargen.currentSpellLevelChoice][spl.key].specialist then
		if spl.enabled or spl.known then return 4
		else return 3 end
	elseif spl.known then return 4
	elseif spl.enabled then return 2
	else return 0 end
end
function spellLearnOrUnlearnText()
	if currentChargenChooseMageSpell == nil or not chargen.choose_spell[currentChargenChooseMageSpell].enabled then
		return t("BUTTON_LEARN")
	else
		return t("BUTTON_UNLEARN")
	end
end
function spellLearnOrUnlearnClickable()
	spl = chargen.choose_spell[currentChargenChooseMageSpell]
	if chargen.extraSpells == 0 and spl ~= nil and spl.enabled == false or spl == nil or spl.known then
		return false
	else
		return true 
	end
end


function chooseSpellOrGeneralHelp()
	local helpText = chargen.helpText
	spl = chargen.choose_spell[currentChargenChooseMageSpell]
	if spl == nil then
		return helpText
	end

	local desc = spellBook[chargen.currentSpellLevelChoice][spl.key].desc
	if ticksStarting == 0 then descOld = desc end
	if currentChargenChooseMageSpell and desc ~= -1 then
		if ticksStarting ~= 0 then
		return Infinity_FetchString(descOld)
		else
		return Infinity_FetchString(desc)
		end
	else
		return helpText
	end
end

function nextOrDone()
	if(createCharScreen:HasMoreMageLevels()) then
		return t('NEXT_BUTTON')
	else
		return t('DONE_BUTTON')
	end
end
function shouldShowSpecialistMessage()
	local ret = false

	if chargen.extraSpells == 0 and not createCharScreen:IsDoneButtonClickable() then
		ret = true
	end

	return ret
end
`
menu
{
	name 'CHARGEN_CHOOSE_SPELLS'
	modal
	align center center
	ignoreesc
	onOpen 
	"
		table.sort(chargen.choose_spell, sortBySpellName)
		currentChargenChooseMageSpell = nil

		if currentChargenKit == nil then
			currentChargenKit = 0
		end

		local currentKitName = ''

		--gnome illusionists
		if currentChargenRace ~= 6 and chargen.kit then
			currentKitName = Infinity_FetchString(chargen.kit[currentChargenKit].name)
		else
			currentKitName = Infinity_FetchString(25323)
		end
		
		if currentKitName == Infinity_FetchString(25319) then
			setStringTokenLua('<SCHOOLTOKEN>',t('ABJURATION_SCHOOL_TOKEN'))
		elseif currentKitName == Infinity_FetchString(25320) then
			setStringTokenLua('<SCHOOLTOKEN>',t('CONJURATION_SCHOOL_TOKEN'))
		elseif currentKitName == Infinity_FetchString(25321) then
			setStringTokenLua('<SCHOOLTOKEN>',t('DIVINATION_SCHOOL_TOKEN'))
		elseif currentKitName == Infinity_FetchString(25322) then
			setStringTokenLua('<SCHOOLTOKEN>',t('ENCHANTMENT_SCHOOL_TOKEN'))
		elseif currentKitName == Infinity_FetchString(25323) then
			setStringTokenLua('<SCHOOLTOKEN>',t('ILLUSION_SCHOOL_TOKEN'))
		elseif currentKitName == Infinity_FetchString(25324) then
			setStringTokenLua('<SCHOOLTOKEN>',t('EVOCATION_SCHOOL_TOKEN'))
		elseif currentKitName == Infinity_FetchString(25325) then
			setStringTokenLua('<SCHOOLTOKEN>',t('NECROMANCY_SCHOOL_TOKEN'))
		elseif currentKitName == Infinity_FetchString(25326) then
			setStringTokenLua('<SCHOOLTOKEN>',t('TRANSMUTATION_SCHOOL_TOKEN'))
		elseif currentKitName == Infinity_FetchString(25327) then
			setStringTokenLua('<SCHOOLTOKEN>',Infinity_FetchString(25327))
		end
		ticksPassed = 0; ticksStarting = 0
	"
	label
	{
		area 0 0 403 463
		mosaic GUIMGSFB
	}
	label
	{
		area 14 10 320 36
		text lua "t(chargen.title) .. ': ' .. t('LEVEL_LABEL') .. ' ' .. chargen.currentSpellLevelChoice"
		text style 'label'
		text align left center
		text point 18
		text shadow 1
	}
	list
	{
		column
		{
			width 16
			button
			{
				enabled "cellNumber ~= 1 or rowSelected ~= rowNumber"
				area 0 0 -1 -1
				bam GUIBTBUT
				icon lua "spellBook[chargen.currentSpellLevelChoice][chargen.choose_spell[6 * rowNumber - 5].key].groundicon"
				frame lua "specialistFrame(6 * rowNumber - 5, 1)"
				sequenceonce lua "getRandomSequence(6 * rowNumber - 5,3)"
				align center center
			}
			button
			{
				enabled "cellNumber == 1 and rowSelected == rowNumber"
				area 2 2 -1 -1
				bam GUIBTBUT
				icon lua "spellBook[chargen.currentSpellLevelChoice][chargen.choose_spell[6 * rowNumber - 5].key].groundicon"
				frame lua "specialistFrame(6 * rowNumber - 5, 1)"
				sequenceonce lua "getRandomSequence(6 * rowNumber - 5,3)"
				align center center
			}
		}
		column
		{
			width 16
			button
			{
				enabled "cellNumber ~= 2 or rowSelected ~= rowNumber"
				area 0 0 -1 -1
				bam GUIBTBUT
				icon lua "spellBook[chargen.currentSpellLevelChoice][chargen.choose_spell[6 * rowNumber - 4].key].groundicon"
				frame lua "specialistFrame(6 * rowNumber - 4, 2)"
				sequenceonce lua "getRandomSequence(6 * rowNumber - 4,3)"
				align center center
			}
			button
			{
				enabled "cellNumber == 2 and rowSelected == rowNumber"
				area 2 2 -1 -1
				bam GUIBTBUT
				icon lua "spellBook[chargen.currentSpellLevelChoice][chargen.choose_spell[6 * rowNumber - 4].key].groundicon"
				frame lua "specialistFrame(6 * rowNumber - 4, 2)"
				sequenceonce lua "getRandomSequence(6 * rowNumber - 4,3)"
				align center center
			}
		}
		column
		{
			width 16
			button
			{
				enabled "cellNumber ~= 3 or rowSelected ~= rowNumber"
				area 0 0 -1 -1
				bam GUIBTBUT
				icon lua "spellBook[chargen.currentSpellLevelChoice][chargen.choose_spell[6 * rowNumber - 3].key].groundicon"
				frame lua "specialistFrame(6 * rowNumber - 3, 3)"
				sequenceonce lua "getRandomSequence(6 * rowNumber - 3,3)"
				align center center
			}
			button
			{
				enabled "cellNumber == 3 and rowSelected == rowNumber"
				area 2 2 -1 -1
				bam GUIBTBUT
				icon lua "spellBook[chargen.currentSpellLevelChoice][chargen.choose_spell[6 * rowNumber - 3].key].groundicon"
				frame lua "specialistFrame(6 * rowNumber - 3, 3)"
				sequenceonce lua "getRandomSequence(6 * rowNumber - 3,3)"
				align center center
			}
		}
		column
		{
			width 16
			button
			{
				enabled "cellNumber ~= 4 or rowSelected ~= rowNumber"
				area 0 0 -1 -1
				bam GUIBTBUT
				icon lua "spellBook[chargen.currentSpellLevelChoice][chargen.choose_spell[6 * rowNumber -2].key].groundicon"
				frame lua "specialistFrame(6 * rowNumber - 2, 4)"
				sequenceonce lua "getRandomSequence(6 * rowNumber - 2,3)"
				align center center
			}
			button
			{
				enabled "cellNumber == 4 and rowSelected == rowNumber"
				area 2 2 -1 -1
				bam GUIBTBUT
				icon lua "spellBook[chargen.currentSpellLevelChoice][chargen.choose_spell[6 * rowNumber -2].key].groundicon"
				frame lua "specialistFrame(6 * rowNumber - 2, 4)"
				sequenceonce lua "getRandomSequence(6 * rowNumber - 2,3)"
				align center center
			}
		}
		column
		{
			width 16
			button
			{
				enabled "cellNumber ~= 5 or rowSelected ~= rowNumber"
				area 0 0 -1 -1
				bam GUIBTBUT
				icon lua "spellBook[chargen.currentSpellLevelChoice][chargen.choose_spell[6 * rowNumber - 1].key].groundicon"
				frame lua "specialistFrame(6 * rowNumber - 1, 5)"
				sequenceonce lua "getRandomSequence(6 * rowNumber - 1,3)"
				align center center
			}
			button
			{
				enabled "cellNumber == 5 and rowSelected == rowNumber"
				area 2 2 -1 -1
				bam GUIBTBUT
				icon lua "spellBook[chargen.currentSpellLevelChoice][chargen.choose_spell[6 * rowNumber - 1].key].groundicon"
				frame lua "specialistFrame(6 * rowNumber - 1, 5)"
				sequenceonce lua "getRandomSequence(6 * rowNumber - 1,3)"
				align center center
			}
		}
		column
		{
			width 16
			button
			{
				enabled "cellNumber ~= 6 or rowSelected ~= rowNumber"
				area 0 0 -1 -1
				bam GUIBTBUT
				icon lua "spellBook[chargen.currentSpellLevelChoice][chargen.choose_spell[6 * rowNumber].key].groundicon"
				frame lua "specialistFrame(6 * rowNumber, 6)"
				sequenceonce lua "getRandomSequence(6 * rowNumber,3)"
				align center center
			}
			button
			{
				enabled "cellNumber == 6 and rowSelected == rowNumber"
				area 2 2 -1 -1
				bam GUIBTBUT
				icon lua "spellBook[chargen.currentSpellLevelChoice][chargen.choose_spell[6 * rowNumber].key].groundicon"
				frame lua "specialistFrame(6 * rowNumber, 6)"
				sequenceonce lua "getRandomSequence(6 * rowNumber,3)"
				align center center
			}
		}
		area 23 54 375 220
		scrollbar 'GUISTSCR'
		rowheight 54
		hidehighlight
		table "makeTable(math.max(math.ceil(#chargen.choose_spell / 6), 4))"
		var currentChargenChooseMageSpell
		action "
			currentChargenChooseMageSpell = 6 * (currentChargenChooseMageSpell - 1) + cellNumber
			if ticksStarting < 10 then
				if not chargen.choose_spell[currentChargenChooseMageSpell].known then
					createCharScreen:OnLearnMageSpellButtonClick(currentChargenChooseMageSpell)
				end
		end
		cellNumber = nil
		rowNumber = nil
		ticksPassed = 0
		ticksStarting = 0
		"
		actionUpdate 
		"	
			ticksStarting = ticksStarting + 1
			if ticksStarting > 10 then
				ticksPassed = ticksPassed + 1
				if ticksPassed > 3 then
					ticksPassed = 0
				end
			end
		"
		actionAlt 
		"
			local idx = 6 * (currentChargenChooseMageSpell - 1) + cellNumber
			currentChargenChooseMageSpell = idx
			cellNumber = nil
			rowNumber = nil
			ticksPassed = 0
			ticksStarting = 0
		"
	}
	text
	{
		area 18 278 372 100
		text lua "chooseSpellOrGeneralHelp()"
		text style "normal"
		scrollbar	'GUISCRC'
		action "		
			Infinity_PlaySound('GAM_09')
			TEXT_popup_big = spellBook[chargen.currentSpellLevelChoice][chargen.choose_spell[currentChargenChooseMageSpell].key].desc
			Infinity_PushMenu('POPUP_BIG')
		"
	}

	--label
	--{
		--area 286 586 164 40
		--text "SPELLS_REMAINING_NORMAL"
		--text style "normal"
		--text align center center
	--}
	label
	{
		area 342 10 40 36
		text lua "chargen.extraSpells"
		text style "normal"
		text align center center
	}
	--button
	--{
	--	area 40 586 203 44
		--bam GUIOSTUM
		--text lua "spellLearnOrUnlearnText()"
		--text style "button"
		--text shadow 1
		--clickable lua "spellLearnOrUnlearnClickable()"
		--action "createCharScreen:OnLearnMageSpellButtonClick(currentChargenChooseMageSpell)"
	--}
	label
	{
		area 18 278 372 100
		enabled "shouldShowSpecialistMessage()"
		text lua "t('SPECIALIST_SPELL_REQ')"
		text style "normal"
		text align center center
		fill 0 0 0 200
	}

	button
	{
		on escape
		area 64 404 140 28
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text "BACK_BUTTON"
		text style "button"
		text shadow 1
		clickable lua "not chargen.levelingUp"
		action "Infinity_PopMenu(); createCharScreen:OnCancelButtonClick()"
	}
	button
	{
		on return
		area 236 404 136 28
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text lua "nextOrDone()"
		text style "button"
		text shadow 1
		clickable lua "createCharScreen:IsDoneButtonClickable()"
		action "createCharScreen:OnDoneButtonClick()"
	}

}
`

function mageMemorizeSpellOrGeneralHelp()
	spl = chargen.choose_spell[currentChargenMemorizeMageSpell]
	if spl == nil then
		return Infinity_FetchString(17253)
	end

	local desc = mageSpells[chargen.currentSpellLevelChoice][spl.key].desc
	if ticksStarting == 0 then descOld = desc end
	if currentChargenMemorizeMageSpell and desc ~= -1 then
		if ticksStarting ~= 0 then
			return Infinity_FetchString(descOld)
			else
			return Infinity_FetchString(desc)
			end
	else
		return Infinity_FetchString(17253)
	end
end

function getSpecialistFrame(num, cellNum)
	if chargen.choose_spell[num] == nil then return 5
	elseif cellNumber == cellNum and rowSelected == rowNumber  then return 1
	elseif mageSpells[chargen.currentSpellLevelChoice][chargen.choose_spell[num].key].specialist then
		if chargen.choose_spell[num].enabled or chargen.choose_spell[num].known or chargen.choose_spell[num].count > 0 then return 4
		else return 3 end
	elseif chargen.choose_spell[num].enabled or chargen.choose_spell[num].known or chargen.choose_spell[num].count > 0 then return 2
	else return 0 end
end

`
menu
{
	name 'CHARGEN_MEMORIZE_MAGE'
	modal
	align center center
	ignoreesc
	onOpen "
		table.sort(chargen.choose_spell, sortByMageSpellName)
		currentChargenMemorizeMageSpell = nil
		ticksPassed = 0; ticksStarting = 0
		"
	label
	{
		area 0 0 403 372
		mosaic GUIMGSFC
	}
	label
	{
		area 14 10 320 36
		text lua "chargen.title"
		text style 'label'
		text align left center
		text point 18
		text shadow 1
	}
	list
	{
		column
		{
			width 16
			button
			{
				enabled "cellNumber ~= 1 or rowSelected ~= rowNumber"
				area 0 0 -1 -1
				bam GUIBTBUT
				icon lua "mageSpells[chargen.currentSpellLevelChoice][chargen.choose_spell[6 * rowNumber - 5].key].groundicon"
				frame lua "getSpecialistFrame(6 * rowNumber - 5, 1)"
				sequenceonce lua "getRandomSequence(6 * rowNumber - 5,3)"
				align center center
				count lua "chargen.choose_spell[6 * rowNumber - 5].count"
			}
			button
			{
				enabled "cellNumber == 1 and rowSelected == rowNumber"
				area 2 2 -1 -1
				bam GUIBTBUT
				icon lua "mageSpells[chargen.currentSpellLevelChoice][chargen.choose_spell[6 * rowNumber - 5].key].groundicon"
				frame lua "getSpecialistFrame(6 * rowNumber - 5, 1)"
				sequenceonce lua "getRandomSequence(6 * rowNumber - 5,3)"
				align center center
				count lua "chargen.choose_spell[6 * rowNumber - 5].count"
			}
		}
		column
		{
			width 16
			button
			{
				enabled "cellNumber ~= 2 or rowSelected ~= rowNumber"
				area 0 0 -1 -1
				bam GUIBTBUT
				icon lua "mageSpells[chargen.currentSpellLevelChoice][chargen.choose_spell[6 * rowNumber - 4].key].groundicon"
				frame lua "getSpecialistFrame(6 * rowNumber - 4, 2)"
				sequenceonce lua "getRandomSequence(6 * rowNumber - 4,3)"
				align center center
				count lua "chargen.choose_spell[6 * rowNumber - 4].count"
			}
			button
			{
				enabled "cellNumber == 2 and rowSelected == rowNumber"
				area 2 2 -1 -1
				bam GUIBTBUT
				icon lua "mageSpells[chargen.currentSpellLevelChoice][chargen.choose_spell[6 * rowNumber - 4].key].groundicon"
				frame lua "getSpecialistFrame(6 * rowNumber - 4, 2)"
				sequenceonce lua "getRandomSequence(6 * rowNumber - 4,3)"
				align center center
				count lua "chargen.choose_spell[6 * rowNumber - 4].count"
			}
		}
		column
		{
			width 16
			button
			{
				enabled "cellNumber ~= 3 or rowSelected ~= rowNumber"
				area 0 0 -1 -1
				bam GUIBTBUT
				icon lua "mageSpells[chargen.currentSpellLevelChoice][chargen.choose_spell[6 * rowNumber - 3].key].groundicon"
				frame lua "getSpecialistFrame(6 * rowNumber - 3, 3)"
				sequenceonce lua "getRandomSequence(6 * rowNumber - 3,3)"
				align center center
				count lua "chargen.choose_spell[6 * rowNumber - 3].count"
			}
			button
			{
				enabled "cellNumber == 3 and rowSelected == rowNumber"
				area 2 2 -1 -1
				bam GUIBTBUT
				icon lua "mageSpells[chargen.currentSpellLevelChoice][chargen.choose_spell[6 * rowNumber - 3].key].groundicon"
				frame lua "getSpecialistFrame(6 * rowNumber - 3, 3)"
				sequenceonce lua "getRandomSequence(6 * rowNumber - 3,3)"
				align center center
				count lua "chargen.choose_spell[6 * rowNumber - 3].count"
			}
		}
		column
		{
			width 16
			button
			{
				enabled "cellNumber ~= 4 or rowSelected ~= rowNumber"
				area 0 0 -1 -1
				bam GUIBTBUT
				icon lua "mageSpells[chargen.currentSpellLevelChoice][chargen.choose_spell[6 * rowNumber -2].key].groundicon"
				frame lua "getSpecialistFrame(6 * rowNumber - 2, 4)"
				sequenceonce lua "getRandomSequence(6 * rowNumber - 2,3)"
				align center center
				count lua "chargen.choose_spell[6 * rowNumber - 2].count"
			}
			button
			{
				enabled "cellNumber == 4 and rowSelected == rowNumber"
				area 2 2 -1 -1
				bam GUIBTBUT
				icon lua "mageSpells[chargen.currentSpellLevelChoice][chargen.choose_spell[6 * rowNumber -2].key].groundicon"
				frame lua "getSpecialistFrame(6 * rowNumber - 2, 4)"
				sequenceonce lua "getRandomSequence(6 * rowNumber - 2,3)"
				align center center
				count lua "chargen.choose_spell[6 * rowNumber - 2].count"
			}
		}
		column
		{
			width 16
			button
			{
				enabled "cellNumber ~= 5 or rowSelected ~= rowNumber"
				area 0 0 -1 -1
				bam GUIBTBUT
				icon lua "mageSpells[chargen.currentSpellLevelChoice][chargen.choose_spell[6 * rowNumber - 1].key].groundicon"
				frame lua "getSpecialistFrame(6 * rowNumber - 1, 5)"
				sequenceonce lua "getRandomSequence(6 * rowNumber - 1,3)"
				align center center
				count lua "chargen.choose_spell[6 * rowNumber - 1].count"
			}
			button
			{
				enabled "cellNumber == 5 and rowSelected == rowNumber"
				area 2 2 -1 -1
				bam GUIBTBUT
				icon lua "mageSpells[chargen.currentSpellLevelChoice][chargen.choose_spell[6 * rowNumber - 1].key].groundicon"
				frame lua "getSpecialistFrame(6 * rowNumber - 1, 5)"
				sequenceonce lua "getRandomSequence(6 * rowNumber - 1,3)"
				align center center
				count lua "chargen.choose_spell[6 * rowNumber - 1].count"
			}
		}
		column
		{
			width 16
			button
			{
				enabled "cellNumber ~= 6 or rowSelected ~= rowNumber"
				area 0 0 -1 -1
				bam GUIBTBUT
				frame lua "getSpecialistFrame(6 * rowNumber, 6)"
				icon lua "mageSpells[chargen.currentSpellLevelChoice][chargen.choose_spell[6 * rowNumber].key].groundicon"
				sequenceonce lua "getRandomSequence(6 * rowNumber,3)"
				align center center
				count lua "chargen.choose_spell[6 * rowNumber].count"
			}
			button
			{
				enabled "cellNumber == 6 and rowSelected == rowNumber"
				area 2 2 -1 -1
				bam GUIBTBUT
				frame lua "getSpecialistFrame(6 * rowNumber, 6)"
				icon lua "mageSpells[chargen.currentSpellLevelChoice][chargen.choose_spell[6 * rowNumber].key].groundicon"
				sequenceonce lua "getRandomSequence(6 * rowNumber,3)"
				align center center
				count lua "chargen.choose_spell[6 * rowNumber].count"
			}
		}
		area 23 54 375 110
		scrollbar 'GUISTSCR'
		rowheight 54
		hidehighlight
		table "makeTable(math.max(math.ceil(#chargen.choose_spell / 6), 2))"
		var currentChargenMemorizeMageSpell
		action "
			local idx = 6 * (currentChargenMemorizeMageSpell - 1) + cellNumber
			currentChargenMemorizeMageSpell = idx
			createCharScreen:OnMemorizeMageSpellButtonClick(currentChargenMemorizeMageSpell, 1)
			cellNumber = nil
			rowNumber = nil
			ticksPassed = 0
			ticksStarting = 0
		"
		actionUpdate 
		"	
			ticksStarting = ticksStarting + 1
			if ticksStarting > 10 then
				ticksPassed = ticksPassed + 1
				if ticksPassed > 3 then
					ticksPassed = 0
				end
			end
		"
		actionAlt 
		"
			local idx = 6 * (currentChargenMemorizeMageSpell - 1) + cellNumber
			currentChargenMemorizeMageSpell = idx
			createCharScreen:OnMemorizeMageSpellButtonClick(currentChargenMemorizeMageSpell, -1)
			cellNumber = false
		"
	}
	text
	{
		area 23 187 367 100
		text lua "mageMemorizeSpellOrGeneralHelp()"
		text style "normal"
		scrollbar	'GUISCRC'
		action "		
			Infinity_PlaySound('GAM_09')
			TEXT_popup_big = mageSpells[chargen.currentSpellLevelChoice][chargen.choose_spell[currentChargenMemorizeMageSpell].key].desc
			Infinity_PushMenu('POPUP_BIG')
		"
	}

	--label
	--{
		--area 286 586 164 40
		--text "SPELLS_REMAINING_NORMAL"
		--text style "normal"
		--text align center center
	--}
	label
	{
		area 342 10 40 36
		text lua "chargen.extraSpells"
		text style "normal"
		text align center center
	}
	label
	{
		area 18 187 372 100
		enabled "shouldShowSpecialistMessage()"
		text lua "t('SPECIALIST_SPELL_REQ')"
		text style "normal"
		text align center center
		fill 0 0 0 200
	}
	button
	{
		on escape
		area 64 313 140 28
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text "BACK_BUTTON"
		text style "button"
		text shadow 1
		action "Infinity_PopMenu(); createCharScreen:OnCancelButtonClick()"
	}
	button
	{
		on return
		area 236 313 136 28
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text lua "nextOrDone()"
		text style "button"
		text shadow 1
		clickable lua "createCharScreen:IsDoneButtonClickable()"
		action "createCharScreen:OnDoneButtonClick()"
	}

}
`

function priestMemorizeSpellOrGeneralHelp()
	spl = chargen.choose_spell[currentChargenMemorizePriestSpell]
	if spl == nil then
		return Infinity_FetchString(17253)
	end

	local desc = priestSpells[chargen.currentSpellLevelChoice][spl.key].desc
	if ticksStarting == 0 then descOld = desc end
	if currentChargenMemorizePriestSpell and desc ~= -1 then
		if ticksStarting ~= 0 then
			return Infinity_FetchString(descOld)
		else
			return Infinity_FetchString(desc)
		end
	else
		return Infinity_FetchString(17253)
	end
end

function getFrame(num, cellNum)
	if  chargen.choose_spell[num] == nil then return 5 
	elseif cellNumber == cellNum and rowSelected == rowNumber then return 1
	elseif chargen.choose_spell[num].count > 0 then return 2 
	else return 0 end
end
`
menu
{
	name 'CHARGEN_MEMORIZE_PRIEST'
	modal
	align center center
	ignoreesc
	onOpen "
		table.sort(chargen.choose_spell, sortByPriestSpellName)
		currentChargenMemorizePriestSpell = nil
		ticksPassed = 0; ticksStarting = 0
		"
	label
	{
		area 0 0 403 372
		mosaic GUIMGSFC
	}
	label
	{
		area 14 10 320 36
		text lua "chargen.title"
		text style 'label'
		text align left center
		text point 18
		text shadow 1
	}
	list
	{
		column
		{
			width 16
			button
			{
				enabled "cellNumber ~= 1 or rowSelected ~= rowNumber"
				area 0 0 -1 -1
				bam GUIBTBUT
				icon lua "priestSpells[chargen.currentSpellLevelChoice][chargen.choose_spell[6 * rowNumber - 5].key].groundicon"
				frame lua "getFrame(6 * rowNumber - 5, 1)"
				sequenceonce lua "getRandomSequence(6 * rowNumber - 5,3)"
				align center center
				count lua "chargen.choose_spell[6 * rowNumber - 5].count"
			}
			button
			{
				enabled "cellNumber == 1 and rowSelected == rowNumber"
				area 2 2 -1 -1
				bam GUIBTBUT
				icon lua "priestSpells[chargen.currentSpellLevelChoice][chargen.choose_spell[6 * rowNumber - 5].key].groundicon"
				frame lua "getFrame(6 * rowNumber - 5, 1)"
				sequenceonce lua "getRandomSequence(6 * rowNumber - 5,3)"
				align center center
				count lua "chargen.choose_spell[6 * rowNumber - 5].count"
			}
		}
		column
		{
			width 16
			button
			{
				enabled "cellNumber ~= 2 or rowSelected ~= rowNumber"
				area 0 0 -1 -1
				bam GUIBTBUT
				icon lua "priestSpells[chargen.currentSpellLevelChoice][chargen.choose_spell[6 * rowNumber - 4].key].groundicon"
				frame lua "getFrame(6 * rowNumber - 4, 2)"
				sequenceonce lua "getRandomSequence(6 * rowNumber - 4,3)"
				align center center
				count lua "chargen.choose_spell[6 * rowNumber - 4].count"
			}
			button
			{
				enabled "cellNumber == 2 and rowSelected == rowNumber"
				area 2 2 -1 -1
				bam GUIBTBUT
				icon lua "priestSpells[chargen.currentSpellLevelChoice][chargen.choose_spell[6 * rowNumber - 4].key].groundicon"
				frame lua "getFrame(6 * rowNumber - 4, 2)"
				sequenceonce lua "getRandomSequence(6 * rowNumber - 4,3)"
				align center center
				count lua "chargen.choose_spell[6 * rowNumber - 4].count"
			}
		}
		column
		{
			width 16
			button
			{
				enabled "cellNumber ~= 3 or rowSelected ~= rowNumber"
				area 0 0 -1 -1
				bam GUIBTBUT
				icon lua "priestSpells[chargen.currentSpellLevelChoice][chargen.choose_spell[6 * rowNumber - 3].key].groundicon"
				frame lua "getFrame(6 * rowNumber - 3, 3)"
				sequenceonce lua "getRandomSequence(6 * rowNumber - 3,3)"
				align center center
				count lua "chargen.choose_spell[6 * rowNumber - 3].count"
			}
			button
			{
				enabled "cellNumber == 3 and rowSelected == rowNumber"
				area 2 2 -1 -1
				bam GUIBTBUT
				icon lua "priestSpells[chargen.currentSpellLevelChoice][chargen.choose_spell[6 * rowNumber - 3].key].groundicon"
				frame lua "getFrame(6 * rowNumber - 3, 3)"
				sequenceonce lua "getRandomSequence(6 * rowNumber - 3,3)"
				align center center
				count lua "chargen.choose_spell[6 * rowNumber - 3].count"
			}
		}
		column
		{
			width 16
			button
			{
				enabled "cellNumber ~= 4 or rowSelected ~= rowNumber"
				area 0 0 -1 -1
				bam GUIBTBUT
				icon lua "priestSpells[chargen.currentSpellLevelChoice][chargen.choose_spell[6 * rowNumber -2].key].groundicon"
				frame lua "getFrame(6 * rowNumber - 2, 4)"
				sequenceonce lua "getRandomSequence(6 * rowNumber - 2,3)"
				align center center
				count lua "chargen.choose_spell[6 * rowNumber - 2].count"
			}
			button
			{
				enabled "cellNumber == 4 and rowSelected == rowNumber"
				area 2 2 -1 -1
				bam GUIBTBUT
				icon lua "priestSpells[chargen.currentSpellLevelChoice][chargen.choose_spell[6 * rowNumber -2].key].groundicon"
				frame lua "getFrame(6 * rowNumber - 2, 4)"
				sequenceonce lua "getRandomSequence(6 * rowNumber - 2,3)"
				align center center
				count lua "chargen.choose_spell[6 * rowNumber - 2].count"
			}
		}
		column
		{
			width 16
			button
			{
				enabled "cellNumber ~= 5 or rowSelected ~= rowNumber"
				area 0 0 -1 -1
				bam GUIBTBUT
				icon lua "priestSpells[chargen.currentSpellLevelChoice][chargen.choose_spell[6 * rowNumber - 1].key].groundicon"
				frame lua "getFrame(6 * rowNumber - 1, 5)"
				sequenceonce lua "getRandomSequence(6 * rowNumber - 1,3)"
				align center center
				count lua "chargen.choose_spell[6 * rowNumber - 1].count"
			}
			button
			{
				enabled "cellNumber == 5 and rowSelected == rowNumber"
				area 2 2 -1 -1
				bam GUIBTBUT
				icon lua "priestSpells[chargen.currentSpellLevelChoice][chargen.choose_spell[6 * rowNumber - 1].key].groundicon"
				frame lua "getFrame(6 * rowNumber - 1, 5)"
				sequenceonce lua "getRandomSequence(6 * rowNumber - 1,3)"
				align center center
				count lua "chargen.choose_spell[6 * rowNumber - 1].count"
			}
		}
		column
		{
			width 16
			button
			{
				enabled "cellNumber ~= 6 or rowSelected ~= rowNumber"
				area 0 0 -1 -1
				bam GUIBTBUT
				frame lua "getFrame(6 * rowNumber, 6)"
				icon lua "priestSpells[chargen.currentSpellLevelChoice][chargen.choose_spell[6 * rowNumber].key].groundicon"
				sequenceonce lua "getRandomSequence(6 * rowNumber,3)"
				align center center
				count lua "chargen.choose_spell[6 * rowNumber].count"
			}
			button
			{
				enabled "cellNumber == 6 and rowSelected == rowNumber"
				area 2 2 -1 -1
				bam GUIBTBUT
				frame lua "getFrame(6 * rowNumber, 6)"
				icon lua "priestSpells[chargen.currentSpellLevelChoice][chargen.choose_spell[6 * rowNumber].key].groundicon"
				sequenceonce lua "getRandomSequence(6 * rowNumber,3)"
				align center center
				count lua "chargen.choose_spell[6 * rowNumber].count"
			}
		}
		area 23 54 375 110
		scrollbar 'GUISTSCR'
		rowheight 54
		hidehighlight
		table "makeTable(math.max(math.ceil(#chargen.choose_spell / 6), 2))"
		var currentChargenMemorizePriestSpell
		action "
			local idx = 6 * (currentChargenMemorizePriestSpell - 1) + cellNumber
			currentChargenMemorizePriestSpell = idx
			createCharScreen:OnMemorizePriestSpellButtonClick(currentChargenMemorizePriestSpell, 1)
			cellNumber = nil
			rowNumber = nil
			ticksPassed = 0
			ticksStarting = 0
		"
		actionUpdate 
		"	
			ticksStarting = ticksStarting + 1
			if ticksStarting > 10 then
				ticksPassed = ticksPassed + 1
				if ticksPassed > 3 then
					ticksPassed = 0
				end
			end
		"
		actionAlt 
		"
			local idx = 6 * (currentChargenMemorizePriestSpell - 1) + cellNumber
			currentChargenMemorizePriestSpell = idx
			createCharScreen:OnMemorizePriestSpellButtonClick(currentChargenMemorizePriestSpell, -1)
			cellNumber = nil
		"
	}
	text
	{
		area 23 186 365 101
		text lua "priestMemorizeSpellOrGeneralHelp()"
		text style "normal"
		scrollbar	'GUISCRC'
		action "		
			Infinity_PlaySound('GAM_09')
			TEXT_popup_big = priestSpells[chargen.currentSpellLevelChoice][chargen.choose_spell[currentChargenMemorizePriestSpell].key].desc
			Infinity_PushMenu('POPUP_BIG')
		"
	}

	--label
	--{
		--area 286 586 164 40
		--text "SPELLS_REMAINING_NORMAL"
		--text style "normal"
		--text align center center
	--}
	label
	{
		area 342 10 40 36
		text lua "chargen.extraSpells"
		text style "normal"
		text align center center
	}

	button
	{
		on escape
		area 64 313 140 28
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text "BACK_BUTTON"
		text style "button"
		text shadow 1
		action "Infinity_PopMenu(); createCharScreen:OnCancelButtonClick()"
	}
	button
	{
		on return
		area 236 313 136 28
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text lua "nextOrDone()"
		text style "button"
		text shadow 1
		clickable lua "createCharScreen:IsDoneButtonClickable()"
		action "createCharScreen:OnDoneButtonClick()"
	}

}
`
currentChargenCustomSound = 0

`
menu
{
	name 'CHARGEN_CUSTOMSOUNDS'
	modal
	align center center
	ignoreesc
	onOpen "
		prepareSounds(chargen.customSound)
	"
	label
	{
		area 0 0 380 693
		mosaic 'GUICGSND'
	}
	label
	{
		area 14 6 336 38
		text "SOUND_TITLE"
		text style 'label'
		text align left center
		text point 22
		text shadow 1
	}
	list
	{
		column 
		{ 
			width 100
			label
			{
				area 0 0 384 18
				text lua "getSoundStringRef(rowNumber, chargen.customSound)"
				text style	"normal"
				text shadow 1
			}
			label
			{
				enabled "rowNumber == mouseoverRow"
				area 0 0 384 18
				text lua "getSoundStringRef(rowNumber, chargen.customSound)"
				text style	"normal"					
				text shadow 1
				text color 255 150 0 255
			}
			label
			{
				enabled "currentChargenCustomSound == rowNumber"
				area 0 0 384 18
				text lua "getSoundStringRef(rowNumber, chargen.customSound)"
				text style	"normal"					
				text shadow 1
				text color S
			}
		}
		area 20 50 344 334
		rowheight	18
		table		"chargen.customSound"
		var			"currentChargenCustomSound"
		scrollbar	'GUISCRC'
		hidehighlight
		action
		"
			createCharScreen:OnSoundItemSelect(chargen.customSound[currentChargenCustomSound].index-1)
		"
		actionDbl "createCharScreen:OnPlayButtonClick()"
		actionEnter	""
		actionExit	"mouseoverRow = 0"
	}
	text
	{
		area 26 480 332 122
		text "SOUND_DESCRIPTION"
		scrollbar 'GUISCRC'
		text style	normal
	}
	button
	{
		area 39 411 300 30
		bam GUIRECC
		ScaleToClip
		text "PLAY_SOUND_BUTTON"
		text style "button"
		text shadow 1
		action "createCharScreen:OnPlayButtonClick()"
	}
	button
	{
		on escape
		area 28 633 147 29
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text "BACK_BUTTON"
		text style "button"
		text shadow 1
		action "Infinity_PopMenu(); createCharScreen:OnCancelButtonClick()"
	}
	button
	{
		on return
		area 205 633 147 29
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text "DONE_BUTTON"
		text style "button"
		text shadow 1
		clickable lua "createCharScreen:IsDoneButtonClickable()"
		action "Infinity_PopMenu(); createCharScreen:OnDoneButtonClick()"
	}
}

`
function hatedRaceOrGeneralHelp()
	race = chargen.hatedRace[currentChargenHatedRace]
	if race then
		return Infinity_FetchString(race.desc)
	else
		return Infinity_FetchString(17256)
	end
end

`
menu
{
	name 'CHARGEN_HATEDRACE'
	modal
	align center center
	ignoreesc
	onopen "ticksPassed = 0; ticksStarting = 0"
	label
	{
		area 0 0 380 693
		mosaic GUICGWDE
	}
	label
	{
		area 22 12 336 38
		text "HATED_RACE_TITLE"
		text style 'label'
		text align left center
		text point 22
		text shadow 1
	}
	list
	{
		column
		{
			width 100
			label
			{
				area 0 0 330 30
				bam GUIRECC
				ScaleToClip
				frame lua "getChargenFrame()"
				sequenceonce lua "rowNumber % 4"
			}
			label
			{
				enabled "ticksStarting == 0 or rowSelected ~= rowNumber"
				area 0 0 330 30
				text lua "Infinity_FetchString(chargen.hatedRace[rowNumber].name)"
				text style "button"
				text shadow 1
				text align	center center				
			}
			label
			{
				enabled "ticksStarting ~= 0 and rowSelected == rowNumber"
				area 2 2 330 30
				text lua "Infinity_FetchString(chargen.hatedRace[rowNumber].name)"
				text style "button"
				text shadow 1
				text align	center center				
			}
		}
		action "
			if chargen.hatedRace[currentChargenHatedRace] then
				createCharScreen:OnRacialEnemySelectButtonClick(chargen.hatedRace[currentChargenHatedRace].id)
			end
			cellNumber = nil
			rowNumber = nil
			ticksPassed = 0
			ticksStarting = 0
			"
		actionUpdate 
		"	
			ticksStarting = ticksStarting + 1
			if ticksStarting > 10 then
				ticksPassed = ticksPassed + 1
				if ticksPassed > 3 then
					ticksPassed = 0
				end
			end
		"
		actionDbl "Infinity_PopMenu(); createCharScreen:OnDoneButtonClick()"
		rowheight 30
		area 22 62 350 404
		table "chargen.hatedRace"
		var currentChargenHatedRace
		scrollbar 'GUISTSCR'
	}
	label --random option
	{
		on R
		action 
		"
			while (true) do
				local rand = Infinity_RandomNumber(1, length(chargen.hatedRace)) 	
				if currentChargenHatedRace ~= rand then currentChargenHatedRace = rand; break end --no doubles allowed
			end
		cellNumber = cellNum --needed for proper frame
		if chargen.hatedRace[currentChargenHatedRace] then
				createCharScreen:OnRacialEnemySelectButtonClick(chargen.hatedRace[currentChargenHatedRace].id)
			end
			Infinity_PlaySound('GAM_03')
		"
	}
	text
	{
		area 26 480 332 122
		text lua "hatedRaceOrGeneralHelp()"
		text style "normal"
		scrollbar	'GUISCRC'
		action "		
			Infinity_PlaySound('GAM_09')
			TEXT_popup_big = chargen.hatedRace[currentChargenHatedRace].desc
			Infinity_PushMenu('POPUP_BIG')
		"
	}
		button
	{
		on escape
		area 28 633 147 29
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text "BACK_BUTTON"
		text style "button"
		text shadow 1
		action "Infinity_PopMenu(); createCharScreen:OnCancelButtonClick()"
	}
	button
	{
		on return
		area 205 633 147 29
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text "DONE_BUTTON"
		text style "button"
		text shadow 1
		clickable lua "createCharScreen:IsDoneButtonClickable()"
		action "Infinity_PopMenu(); createCharScreen:OnDoneButtonClick()"
	}

}
`
charNameEdit = ""
`
menu
{
	name 'CHARGEN_NAME'
	modal
	align center center
	ignoreesc
	onopen 
	"
		if chargen.name then
			charNameEdit = chargen.name
		else
			charNameEdit = ''
		end
		Infinity_FocusTextEdit('charNameEditArea')
	"
	label
	{
		area 0 0 350 171
		mosaic 'GUINMB'

	}
	label
	{
		area 16 4 302 38
		text "ENTER_NAME_LABEL"
		text style 'label'
		text align left center
		text point 22
		text shadow 1
	}
	edit
	{
		name		"charNameEditArea"
		area		48 48 258 25
		var			charNameEdit
		text style	"edit"
		pulse lua "charNameEdit == ''"
		maxlines	1
		maxchars	20
	}
	button
	{
		on escape
		area		18 116 140 26
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text "BACK_BUTTON"
		text style "button"
		text shadow 1
		action "Infinity_PopMenu(); createCharScreen:OnCancelButtonClick()"
	}
	button
	{
		on return
		area		184 116 140 26
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text "DONE_BUTTON"
		text style "button"
		text shadow 1
		clickable lua "createCharScreen:IsDoneButtonClickable()"
		action "Infinity_PopMenu(); createCharScreen:OnDoneButtonClick()"
	}

}
`
createBioEdit = ""
`
menu
{
	name 'CHARGEN_BIO'
	modal
	align center center
	ignoreesc
	onOpen
	"
	Infinity_FocusTextEdit('createBioEditArea')
	TT_BuildTitleData('BIOGRAPHY_TITLE', 372, true)
	TT_CreateTitleChars('BIOGRAPHY_TITLE', 'TT_CHARGEN_BIO', 42, 'TEMPLATE_titlechar_CHARGEN_BIO')
	"
	onclose	"TT_DestroyTitleChars('BIOGRAPHY_TITLE', 'TEMPLATE_titlechar_CHARGEN_BIO')"
	label
	{
		area 0 0 864 710
		mosaic GUIBIO
	}
	template
    {
        label
        {
            enabled "true"
            ignoreEvents
            area 0 0 -1 -1
            bam "TTREALMS"
            sequence lua "TT_TitleData['BIOGRAPHY_TITLE'][instanceId].seq"
            align center center
        }
        name "TEMPLATE_titlechar_CHARGEN_BIO"
    }
	label
    {
        name "TT_CHARGEN_BIO"
		area 246 32 372 42
		--text "BIOGRAPHY_TITLE"
		--text style "title"
    }
	--label
	--{
		--area		44 106 780 522
		--fill        112 111 111 64
	--}
	label
	{
		area		222 170 20 20
		pulse lua "createBioEdit == ''"
	}
	edit
	{
		name		"createBioEditArea"
		area		222 170 514 390
		var			createBioEdit
		scrollbar  'GUISCRCW'
		text style	"normal_parchment"
	}
	button
	{
		on escape
		area 222 660 162 30
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text "BACK_BUTTON"
		text style "button"
		text shadow 1
		action "createCharScreen:OnCancelButtonClick()"
	}
	button
	{
		area 260 564 422 32
		text style "label"
		text "CLEAR_BUTTON"
		text color 5
		action 
		"
			createBioEdit = ''
		"
	}
	button
	{
		on return
		area 485 660 162 30
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text "DONE_BUTTON"
		text style "button"
		text shadow 1
		action "createCharScreen:OnDoneButtonClick()"
	}

}
`
list_GUICG_20_2_idx = 0
function NextOrDone()
	if createCharScreen:GetImportState() == 1 then
		return t("NEXT_BUTTON")
	else
		return t("DONE_BUTTON")
	end
end
`
menu
{
	name 'CHARGEN_IMPORT'
	modal
	align center center
	ignoreesc
	onOpen
	"
		list_GUICG_20_2_idx = 0
	"
	label
	{
		area 0 0 380 693
		mosaic 'GUIIMPB'
	}
	label
	{
		area 14 6 336 38
		text "IMPORT_TITLE"
		text style 'label'
		text align left center
		text point 22
		text shadow 1
	}
	list
	{
		column 
		{ 
			width 100
			label
			{
				area 0 0 -1 -1
				text lua "list_GUICG_20_2[rowNumber]"
				text style "list"
				text shadow 1
				pad 8 0 0 0
			}
			label
			{
				enabled "list_GUICG_20_2_idx == rowNumber"
				area 0 0 -1 -1
				text lua "list_GUICG_20_2[rowNumber]"
				text style "list"
				text shadow 1
				text color S
				pad 8 0 0 0
			}
		}
		area 14 52 344 326
		rowheight	34
		table		"list_GUICG_20_2"
		var			"list_GUICG_20_2_idx"
		hidehighlight
		scrollbar	'GUISCRC'
		action
		"
			Infinity_OnCharacterImportItemSelect(list_GUICG_20_2_idx - 1)
		"
	}
	text
	{
		area 26 410 332 192
		text 10963
		text style normal
		scrollbar 'GUISCRC'
	}
	button
	{
		on escape
		area 28 633 147 29
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text "BACK_BUTTON"
		text style "button"
		text shadow 1
		action "Infinity_PopMenu('CHARGEN_IMPORT'); createCharScreen:OnCancelButtonClick()"
	}
	button
	{
		on return
		area 205 633 147 29
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text lua "NextOrDone()"
		text style "button"
		text shadow 1
		clickable lua "list_GUICG_20_2_idx ~= 0"
		action "Infinity_PopMenu('CHARGEN_IMPORT'); createCharScreen:OnDoneButtonClick()"
	}

}

`
chargenExportCharacterEdit = ""
list_GUICG_21_2_idx = 0
`
menu
{
	name 'CHARGEN_EXPORT'
	modal
	align center center
	ignoreesc
	onopen 
	"
	chargenExportListId = 0
	Infinity_FocusTextEdit('chargenExportCharacterEditArea');
	"
	label
	{
		area 0 0 380 693
		mosaic 'GUIPOP46'
	}
	label
	{
		area 14 6 336 38
		text "EXPORT_TITLE"
		text style 'label'
		text align left center
		text point 22
		text shadow 1
	}
	list
	{
		column 
		{ 
			width 100
			label
			{
				area 0 0 -1 -1
				text lua "list_GUICG_21_2[rowNumber]"
				text style "list"
				text shadow 1
				pad 8 0 0 0
			}
			label
			{
				enabled "chargenExportListId == rowNumber"
				area 0 0 -1 -1
				text lua "list_GUICG_21_2[rowNumber]"
				text style "list"
				text shadow 1
				text color S
				pad 8 0 0 0
			}
		}
		area 14 52 332 304
		rowheight	18
		table		"list_GUICG_21_2"
		var			"chargenExportListId"
		scrollbar	'GUISCRC'
		hidehighlight
		action
		"
			createCharScreen:OnCharacterExportItemSelect(chargenExportListId - 1)
		"
	}
	text
	{
		area 26 480 332 122
		text 24461
		text style "normal"
		scrollbar 'GUISCRC'
	}
	label
	{
		area		14 428 352 28
		text		"EXPORT_FILENAME_LABEL"
		text style	"label"
		text color 3
	}
	label
	{
		enabled "string.len(chargenExportCharacterEditArea)<1"
		area		20 399 346 29
		pulse 1
	}
	edit
	{
		name		"chargenExportCharacterEditArea"
		area		20 399 346 29
		var			chargenExportCharacterEdit
		text style	"edit"
		maxlines	1
	}
	button
	{
		on escape
		area 28 633 147 29
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text "BACK_BUTTON"
		text style "button"
		text shadow 1
		action "Infinity_PopMenu('CHARGEN_EXPORT'); createCharScreen:OnCancelButtonClick()"
	}
	button
	{
		on return
		area 205 633 147 29
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text "DONE_BUTTON"
		text style "button"
		text shadow 1
		action "Infinity_PopMenu('CHARGEN_EXPORT'); createCharScreen:OnDoneButtonClick()"
	}
	
}
menu
{
	name 'CHARGEN_DUALCLASS'
	align center center
	ignoreesc
	onOpen
	"
		TT_BuildTitleData('DUALCLASS_TITLE', 361, true)
		TT_CreateTitleChars('DUALCLASS_TITLE', 'TT_DUALCLASS', 40, 'TEMPLATE_titlechar_DUALCLASS')
	"
	onclose	"TT_DestroyTitleChars('DUALCLASS_TITLE', 'TEMPLATE_titlechar_DUALCLASS')"
	label
	{
		area 0 0 864 710
		mosaic guidcx
	}
	template
    {
        label
        {
            enabled "true"
            ignoreEvents
            area 0 0 -1 -1
            bam "TTREALMS"
            sequence lua "TT_TitleData['DUALCLASS_TITLE'][instanceId].seq"
            align center center
        }
        name "TEMPLATE_titlechar_DUALCLASS"
    }
	label
    {
        name "TT_DUALCLASS"
		area 40 41 361 40
		--text "DUALCLASS_TITLE"
		--text style "title"
    }
	label --shadow
	{
		area 436 25 402 49
		text lua "characters[currentID].name"
		text style "label"
		text point 27
		text color 5
	}
	label
	{
		area 438 27 402 49
		text lua "characters[currentID].name"
		text style "label"
		text point 27
	}
	label --shadow
	{
		area 440 74 394 38
		text lua "characters[currentID].class"
		text style "label"
		text point 18
		text color 5
	}
	label
	{
		area 442 76 394 38
		text lua "characters[currentID].class"
		text style "label"
		text point 18
	}
	label
	{
		area 126 322 179 282
		bitmap		lua "characters[currentID].portrait"
	}
	text
	{
		area 482 166 298 414
		text 10811 --dual class info
		text style "normal_parchment"
		scrollbar	'GUIKNSBR'
	}
	button
	{
		area 97 127 242 58
		clickable lua "createCharScreen:GetCurrentStep() == const.STEP_DUALCLASS_CLASS"
		bam GUICGC
		ScaleToClip
		text "CLASS_BUTTON"
		text style "button"
		text shadow 1
		action
		"
			createCharScreen:OnMenuButtonClick()
		"
	}
	button
	{
		area 97 186 242 58
		clickable lua "createCharScreen:GetCurrentStep() == const.STEP_DUALCLASS_PROFICIENCIES"
		bam GUICGC
		ScaleToClip
		sequenceonce lua "Infinity_RandomNumber(0, 6)"
		text "SKILLS_BUTTON"
		text style "button"
		text shadow 1
		action
		"
			createCharScreen:OnMenuButtonClick()
		"
	}
	button
	{
		area 145 243 144 51
		clickable lua "createCharScreen:GetCurrentStep() ~= const.STEP_DUALCLASS_PROFICIENCIES"
		bam GUICGC
		ScaleToClip
		sequence 8
		text style "button"
		text shadow 1
		action
		"
			createCharScreen:OnCancelButtonClick()
		"
	}
	button
	{
		area 654 646 152 30
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		clickable lua "createCharScreen:GetCurrentStep() == const.STEP_DUALCLASS_DONE"
		text "DONE_BUTTON"
		text style "button"
		text shadow 1
		action
		"
			createCharScreen:OnDoneButtonClick()
		"
	}
	button
	{
		on escape
		area 462 646 152 30
		clickable lua "createCharScreen:GetCurrentStep() == const.STEP_DUALCLASS_CLASS"
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text "CANCEL_BUTTON"
		text style "button"
		text shadow 1
		action
		"
			createCharScreen:OnCancelButtonClick()
		"
	}
}
`
difficulties = 
{
	{icon = "COLRSPRY", name = "DIFFICULTY_LABEL_STORYMODE", 		description = "DIFFICULTY_DESCRIPTION_STORYMODE"},
	{icon = "CONTSHLF", name = "DIFFICULTY_LABEL_EASY", 			description = "DIFFICULTY_DESCRIPTION_EASY"},
	{icon = "CONTSACK", name = "DIFFICULTY_LABEL_NORMAL", 			description = "DIFFICULTY_DESCRIPTION_NORMAL"},
	{icon = "CONTGRND", name = "DIFFICULTY_LABEL_CORERULES", 		description = "DIFFICULTY_DESCRIPTION_CORERULES"},
	{icon = "CONTBODY", name = "DIFFICULTY_LABEL_HARD", 			description = "DIFFICULTY_DESCRIPTION_HARD"},
	{icon = "CONTSKL1", name = "DIFFICULTY_LABEL_INSANE", 			description = "DIFFICULTY_DESCRIPTION_INSANE"},
	{icon = "CONTSKL2", name = "DIFFICULTY_LABEL_LEGACYOFBHAAL", 	description = "DIFFICULTY_DESCRIPTION_LEGACYOFBHAAL"},
}
fromSinglePlayer = false
fromMultiPlayer = false
function WhoYouGonnaCall()	
	fromSinglePlayer = (createCharScreen:GetEngineState() == 1 or createCharScreen:GetEngineState() == 7) and multiplayerScreen:GetEngineState() ~= 1
end
`
menu
{
	name 'CHARGEN_DIFFICULTY'
	modal
	align center center
	ignoreesc
	onopen 
	"
		currentDifficulty = 3
		WhoYouGonnaCall()
		TT_BuildTitleData('DIFFICULTY_TITLE', 354, true)
		TT_CreateTitleChars('DIFFICULTY_TITLE', 'TT_DIFFICULTY', 40, 'TEMPLATE_titlechar_DIFFICULTY')
	"
	onclose	"TT_DestroyTitleChars('DIFFICULTY_TITLE', 'TEMPLATE_titlechar_DIFFICULTY')"
	label
	{
		area 0 0 1024 768
		mosaic 'GUISMBM'
	}
	template
    {
        label
        {
            enabled "true"
            ignoreEvents
            area 0 0 -1 -1
            bam "TTREALMS"
            sequence lua "TT_TitleData['DIFFICULTY_TITLE'][instanceId].seq"
            align center center
        }
        name "TEMPLATE_titlechar_DIFFICULTY"
    }
	label
    {
        name "TT_DIFFICULTY"
		area 38 38 354 40
		--text "DIFFICULTY_TITLE"
		--text style "title"
    }
	list
	{
		column 
		{ 
			width 15
			label
			{
				area 20 5 60 60
				bam "GUIDIFFS"
				frame lua "rowNumber-1"
				align center center
			}
		}
		column 
		{ 
			width 12
			label
			{
				area 0 0 64 -1
				text lua "t( difficulties[rowNumber].name )"
				text style "label"
				text point 18
				text shadow 1
				text align center center
			}
			label
			{
				enabled "rowNumber == mouseoverRow"
				area 0 0 64 -1
				text lua "t( difficulties[rowNumber].name )"
				text style "label"
				text point 18
				text shadow 1
				text align center center
				text color 255 150 0 255
			}
			label
			{
				enabled "currentDifficulty == rowNumber"
				area 0 0 64 -1
				text lua "t( difficulties[rowNumber].name )"
				text style "label"
				text point 18
				text shadow 1
				text align center center
				text color S
			}
			label
			{
				enabled "currentDifficulty == rowNumber and currentDifficulty == 7"
				area 0 0 64 -1
				text lua "t( difficulties[rowNumber].name )"
				text style "label"
				text point 18
				text shadow 1
				text align center center
				text color R
			}
			label
			{
				enabled "currentDifficulty == rowNumber and currentDifficulty == 1"
				area 0 0 64 -1
				text lua "t( difficulties[rowNumber].name )"
				text style "label"
				text point 18
				text shadow 1
				text align center center
				text color G
			}
		}
		column 
		{ 
			width 73
			label
			{
				area 10 0 -1 -1
				text lua "t( difficulties[rowNumber].description )"
				text style "normal"
				text point	12
				text shadow 1
				text align left center
			}
			label
			{
				enabled "rowNumber == mouseoverRow"
				area 10 0 -1 -1
				text lua "t( difficulties[rowNumber].description )"
				text style "normal"
				text point	12
				text shadow 1
				text align left center
				text color 255 150 0 255
			}
			label
			{
				enabled "currentDifficulty == rowNumber"
				area 10 0 -1 -1
				text lua "t( difficulties[rowNumber].description )"
				text style "normal"
				text point	12
				text shadow 1
				text align left center
				text color S
			}
			label
			{
				enabled "currentDifficulty == rowNumber and currentDifficulty == 7"
				area 10 0 -1 -1
				text lua "t( difficulties[rowNumber].description )"
				text style "normal"
				text point	12
				text shadow 1
				text align left center
				text color R
			}
			label
			{
				enabled "currentDifficulty == rowNumber and currentDifficulty == 1"
				area 10 0 -1 -1
				text lua "t( difficulties[rowNumber].description )"
				text style "normal"
				text point	12
				text shadow 1
				text align left center
				text color G
			}
		}
		area 34 146 976 516
		rowheight	69
		hidehighlight
		table		"difficulties"
		var			"currentDifficulty"
		scrollbar	'GUISCRC'
		action
		"		
				Infinity_PlaySound('GAM_09')
		"
		actionEnter	""
		actionExit	"mouseoverRow = 0"
	}
	button
	{
		on escape
		area		220 705 162 30
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text 15416
		text style "button"
		text shadow 1
		action 
		"
			Infinity_PopMenu()
			if(createCharScreen:GetEngineState() == 7) then
				--If we're in import character mode, go back to the import screen.
				e:SelectEngine(startEngine)
				Infinity_PopMenu()
				startEngine:OnImportCharacterButtonClick()
			end

			if Infinity_GetCurrentScreenName() == 'CHARGEN' then
				createCharScreen:OnMainBackButtonClick()
			end
		"
		actionEnter	""
		actionExit	"mouseoverRow = 0"
	}
	button
	{
		area		509 705 162 30
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text lua "t('VENTURE_FORTH')"
		text style "button"
		text shadow 1
		enabled "fromSinglePlayer"
		action 
		"
			Infinity_PopMenu()
			createCharScreen:AcceptCharacter(currentDifficulty)
		"
	}
	label --under button thingy
	{
		enabled "fromMultiPlayer"
		area 784 688 194 69
		bam 'BG_UND'
	}
	button
	{
		area		795 705 162 30
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text 11973
		text style "button"
		text shadow 1
		enabled "fromMultiPlayer"
		action 
		"
			Infinity_PopMenu()
			Infinity_PopMenu()
			Infinity_PopMenu()
			Infinity_PopMenu()

			if connectionLocalNetworkGame == 1 then
				connectionIsHosting = true
				chooseNetworkProtocol(2)
			end

			fromMultiPlayer = false
			mulitplayerPreexistingDifficulty = currentDifficulty
			connectionScreen:OnNewGameButtonClick()
		"
	}
}

`
TEXT_popup_big = 0
`
menu
{
	name 'POPUP_BIG'
	align center center
	modal
	label
	{
		area 0 0 520 568
		mosaic GUICHISE
	}
	text
	{
		area 26 68 472 370
		text lua "Infinity_FetchString(TEXT_popup_big)"
		text style "normal"
		scrollbar 'GUISCRC'
	}
	button
	{
		on escape
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		area 308 494 162 30
		text style "button"
		text shadow 1
		text "DONE_BUTTON"
		action
		"
			Infinity_PopMenu()
		"
	}
}


`
list_GUIMOVIE_0_0_idx = 0
`
menu
{
	name 'MOVIES'
	align center center
	onOpen 
	"
	TT_BuildTitleData('MOVIES_TITLE', 292, true)
	TT_CreateTitleChars('MOVIES_TITLE', 'TT_MOVIES', 38, 'TEMPLATE_titlechar_MOVIES')
	"
	onclose	"TT_DestroyTitleChars('MOVIES_TITLE', 'TEMPLATE_titlechar_MOVIES')"
	button
	{
		on escape
		action
		"
			--Return to world screen on escape 
			e:SelectEngine(optionsScreen)
		"
	}
	label
	{
		area 0 0 1024 768
		mosaic "GUIMOVB"
	}
	template
    {
        label
        {
            enabled "true"
            ignoreEvents
            area 0 0 -1 -1
            bam "TTREALMS"
            sequence lua "TT_TitleData['MOVIES_TITLE'][instanceId].seq"
            align center center
        }
        name "TEMPLATE_titlechar_MOVIES"
    }
	label
    {
        name "TT_MOVIES"
		area 374 162 292 38
		--text "MOVIES_TITLE"
		--text style "title"
    }
	list
	{
		column 
		{ 
			width 100
			label
			{
				area 0 0 384 18
				text lua "list_GUIMOVIE_0_0[rowNumber].description"
				text style	"list"
				pad 8 0 0 0
				text align left center
			}
			label
			{
				enabled "rowNumber == list_GUIMOVIE_0_0_idx"
				area 0 0 384 18
				text lua "list_GUIMOVIE_0_0[rowNumber].description"
				text style	"list"
				text color S
				pad 8 0 0 0
				text align left center
			}
		}
		area 354 254 328 184
		rowheight	18
		table		"list_GUIMOVIE_0_0"
		var		"list_GUIMOVIE_0_0_idx"
		scrollbar	'GUISTSCR'
		hidehighlight
		action
		"
			moviesScreen:OnMovieItemSelect(list_GUIMOVIE_0_0[list_GUIMOVIE_0_0_idx].movieCode)
		"
	} 
	button
	{
		area 348 445 339 35
		bam GUIMOVC
		ScaleToClip
		text "PLAY_MOVIE_BUTTON"
		text style "button"
		text shadow 1
		action "moviesScreen:OnPlayButtonClick()"
	}
	button
	{
		area 348 486 339 35
		bam GUIMOVC
		ScaleToClip
		text "CREDITS_MOVIE_BUTTON"
		text style "button"
		text shadow 1
		action "moviesScreen:OnCreditsButtonClick()"
	}
	button
	{
		area 434 546 168 30
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text "DONE_BUTTON"
		text style "button"
		text shadow 1
		action "moviesScreen:OnDoneButtonClick()"
	}


}



`
--Multiplayer start.
mp_shownSessions = {}
selectedMp = 0
detailsStr = ""
passwordReq = 0
passwordMp = ""
connectionPlayerNameEdit = ""
connectionFilterNoPasswords = 0
connectionFilterNoFullGames = 0
selectedIndex = 0
connectionIsHosting = false

function connectionBuildGameList()
	local index = 1
	local count = 0
	local entryOK = true
	local foundSelected = false

	for index = 1, #(mp_sessions), 1 do
		entryOK = true
		Infinity_GetPasswordRequired(index)
		if mp_sessions[index] == nil then
			entryOK = false
		elseif mp_sessions[index]["flags"] == nil then
			entryOK = false
		elseif connectionFilterNoPasswords == 1 and passwordReq ~= 0 then
			entryOK = false
		elseif connectionFilterNoFullGames == 1 and mp_sessions[index]["players"] == 6 then 
			entryOK = false
		end

		if e:IsTouchUI() and mp_sessions[index]["version"] ~= "bgee-sod" then
			entryOK = false
		end

		if entryOK == true then
			count = count + 1
			mp_shownSessions[count] = {}
			mp_shownSessions[count]["actualIndex"] = index
			mp_shownSessions[count]["updated_at"] = mp_sessions[index]["updated_at"]

			if mp_sessions[index]['sessionIDString'] == selectedIndex then
				selectedMp = count
				foundSelected = true
			end
		end
	end

	local tableCount = #(mp_shownSessions) 
	while tableCount > count do
		mp_shownSessions[tableCount] = nil
		tableCount = tableCount - 1
	end

	if foundSelected == false then
		selectedMp = 0
	end
end
function chooseNetworkProtocol(num)
	connectionScreen:SelectServiceProvider(num)
end
function joinGameEnabled()
	if selectedMp <= 0 or mp_shownSessions[selectedMp]['actualIndex'] == nil then
		return 0
	else
		return 1
	end
end
function gameHasPassword(slot)
	if(mp_sessions[mp_shownSessions[slot]["actualIndex"]] == nil) then
		--if the session isn't loaded don't show anything.
		return ""
	end
	Infinity_GetPasswordRequired(mp_shownSessions[slot]["actualIndex"])
	if passwordReq ~= 0 then 
		ret = t("YES")
	else
		ret = t("NO")
	end
	return ret
end
function connectionGetGameName(slot)
	ret = ""

	ret = mp_sessions[mp_shownSessions[slot]["actualIndex"]]['name']

	return ret
end
function connectionGetNumPlayers(slot)
	ret = 0

	ret = mp_sessions[mp_shownSessions[slot]["actualIndex"]]['players']

	return ret
end
function connectionGetGameType(slot)
	ret = ""

	if mp_sessions[mp_shownSessions[slot]["actualIndex"]] ~= nil then
		if mp_sessions[mp_shownSessions[slot]["actualIndex"]]["version"] == "bgee-main" then
			ret = t("MAIN_GAME_LABEL")
		elseif mp_sessions[mp_shownSessions[slot]["actualIndex"]]["version"] == "bgee-bp" then
			ret = t("ARENA_MODE_LABEL")
		elseif mp_sessions[mp_shownSessions[slot]["actualIndex"]]["version"] == "bgee-sod" then
			ret = t("EXPANSION_LABEL")
		end
	end

	return ret
end

function matchMultiplayerGameType(gameVersion)
	if gameVersion == "bgee-main" then
		startEngine:OnSoAButtonClick(false)
		e:CheckGUISong()
	elseif gameVersion == "bgee-bp" then
		startEngine:OnTBPButtonClick(false)
		e:CheckGUISong()
	elseif gameVersion == "bgee-sod" then
		startEngine:OnCampaignButtonClick('SOD',false)
		e:CheckGUISong()
	end
end
`
menu
{
	name 'CONNECTION'
	align center center
	onOpen
	"
		connectionFilterNoPasswords = 0
		connectionFilterNoFullGames = 0
		connectionIsHosting = false
		connectionBuildGameList()

		if connectionPlayerNameEdit == '' then
			connectionSetDefaultGameSettings()
		end
		TT_BuildTitleData('JOIN_GAME_TITLE', 356, true)
		TT_CreateTitleChars('JOIN_GAME_TITLE', 'TT_JOIN_GAME', 40, 'TEMPLATE_titlechar_JOIN_GAME')
	"
	onclose	"TT_DestroyTitleChars('JOIN_GAME_TITLE', 'TEMPLATE_titlechar_JOIN_GAME')"
	label -- Background
	{
		area 0 0 1024 768
		mosaic GUIINVHB 
	}
	template
    {
        label
        {
            enabled "true"
            ignoreEvents
            area 0 0 -1 -1
            bam "TTREALMS"
            sequence lua "TT_TitleData['JOIN_GAME_TITLE'][instanceId].seq"
            align center center
        }
        name "TEMPLATE_titlechar_JOIN_GAME"
    }
	label -- Title
    {
        name "TT_JOIN_GAME"
        area 36 38 356 40
		--text  "JOIN_GAME_TITLE"
		--text style "title"
    }
	label
	{
		area 78 232 442 28
		text lua "t('GAME_NAME_LABEL')"
		text style "label"
		align center center
	}
	label
	{
		area 520 232 140 28
		text lua "t('PASSWORD_LABEL')"
		text style "label"
		align center center
	}
	label
	{
		area 660 232 108 28
		text lua "t('PLAYERS_LABEL')"
		text style "label"
		align center center
	}
	label
	{
		area 768 232 146 28
		text lua "t('GAME_TYPE_LABEL')"
		text style "label"
		align center center
	}
	list -- Multiplayer sessions
	{
		column 
		{ 
			width 55 
			label
			{
				area 20 0 500 40
				text lua "connectionGetGameName(rowNumber)"
				text style	"label"
				text shadow 1
				align left center 
			} 
			label
			{
				enabled "selectedMp == rowNumber"
				area 20 0 500 40
				text lua "connectionGetGameName(rowNumber)"
				text style	"label"
				text shadow 1
				align left center
				text color S
			}
	
		}
		column 
		{ 
			width 15 
			label
			{
				area 20 0 210 40
				text lua "gameHasPassword(rowNumber)"
				text style	"normal"
				text shadow 1
				align left center 
			}
			label
			{
				enabled "selectedMp == rowNumber"
				area 20 0 210 40
				text lua "gameHasPassword(rowNumber)"
				text style	"normal"
				text shadow 1
				align left center 
				text color S
			}
		}
		column 
		{ 
			width 10 
			label
			{
				area 20 0 210 40
				text lua "connectionGetNumPlayers(rowNumber)"
				text style	"normal"
				text shadow 1
				align left center 
			}
			label
			{
				enabled "selectedMp == rowNumber"
				area 20 0 210 40
				text lua "connectionGetNumPlayers(rowNumber)"
				text style	"normal"
				text shadow 1
				align left center
				text color S
			}
		}
		column 
		{ 
			width 20 
			label
			{
				area 20 0 210 40
				text lua "connectionGetGameType(rowNumber)"
				text style	"normal"
				text shadow 1
				align left center 
			}
			label
			{
				enabled "selectedMp == rowNumber"
				area 20 0 210 40
				text lua "connectionGetGameType(rowNumber)"
				text style	"normal"
				text shadow 1
				align left center
				text color S
			}
		}

		area 78 274 894 326
		
		rowheight	44
		table		"mp_shownSessions"
		var			selectedMp
		hideHighlight
		scrollbar	'GUISCRC'
		action
		"
			selectedIndex = mp_sessions[mp_shownSessions[selectedMp]['actualIndex']]['sessionIDString']
		"
	}

	label -- player name
	{
		area 334 134 210 40
		text  "PLAYER_NAME_LABEL"
		text style "label"
	}
	edit
	{
		name		"ConnectionPlayerNameEditArea"
		area		338 182 206 26
		var			connectionPlayerNameEdit
		text 		style "edit"
		maxlines	1
		maxchars 	32
	}

	label -- filter options
	{
		area		636 128 215 40
		text		style 'label'
		text		"CONNECTION_NOT_PASSWORD_PROTECTED_LABEL"
		align 		left center
		tooltip lua "t('CONNECTION_NO_PASSWORDS_TOOLTIP')"
	}
	button
	{
		area		584 132 28 28
		bam 		ROUNDBUT
		--glow lua	"connectionFilterNoPasswords"
		frame  lua	"connectionFilterNoPasswords ~=1 and 0 or 2"
		scaleToClip
		tooltip lua "t('CONNECTION_NO_PASSWORDS_TOOLTIP')"
		action
		"
			connectionFilterNoPasswords = 1 - connectionFilterNoPasswords
			connectionBuildGameList()
		"
	}
	label
	{
		area		636 168 215 44
		text		style 'label'
		text		"CONNECTION_NOT_FULL_LABEL"
		align 		left center
		tooltip lua "t('CONNECTION_NO_FULL_GAMES_TOOLTIP')"
	}
	button
	{
		area		584 174 28 28
		bam 		ROUNDBUT
		--glow lua	"connectionFilterNoFullGames"
		frame lua	"connectionFilterNoFullGames ~=1 and 0 or 2"
		scaleToClip
		tooltip lua "t('CONNECTION_NO_FULL_GAMES_TOOLTIP')"
		action
		"
			connectionFilterNoFullGames = 1 - connectionFilterNoFullGames
			connectionBuildGameList()
		"
	}

	button -- Create game
	{
		area		60 148 249 67
		bam			GUISTDRC
		ScaleToClip		
		sequenceonce lua "Infinity_RandomNumber(0, 1)"
		text  		"CONNECTION_CREATE_NEW_GAME_BUTTON"
		text style	"button"
		text shadow 1
		action
		"
			Infinity_PushMenu('CONNECTION_CREATE')
		"	
	}
	button -- Direct Connect
	{
		area		60 624 230 40
		bam			GUIINVHC
		ScaleToClip
		sequenceonce lua "Infinity_RandomNumber(0, 1)"
		text  		"CONNECTION_DIRECT_CONNECTION_BUTTON"
		text style	"button"
		text shadow 1
		tooltip lua "t('CONNECTION_DIRECT_CONNECT_TOOLTIP')"
		action
		"
			connectionIsHosting = false
			chooseNetworkProtocol(2)
		"	
	}
	button -- refresh
	{
		area		860 136 70 66
		bam 		'GUMPBUTX'
		sequence 	2
		align 		center center
		tooltip lua "t('CONNECTION_REFRESH_TOOLTIP')"
		action
		"
			selectedMp = nil
			mp_shownSessions = {}
			mp_sessions = {}
			connectionScreen:ClearSessions()
		"
	}

	button -- Join game
	{
		area		716 696 164 28
		bam			GUIWPKPC
		ScaleToClip
		sequence	1
		text  "JOIN_BUTTON"
		text style	"button"
		text shadow 1
		clickable lua	"joinGameEnabled()"
		action
		"
			Infinity_GetPasswordRequired(mp_shownSessions[selectedMp]['actualIndex'])
			if string.find(connectionPlayerNameEdit, '%S') == nil then
				Infinity_PushMenu('CONNECTION_NAME')
			elseif passwordReq == 0 then
				Infinity_PopMenu(); 
				Infinity_PopMenu(); 
				mp_sessions[mp_shownSessions[selectedMp]['actualIndex']]['password'] = passwordMp
				Infinity_JoinMultiplayerGame(mp_shownSessions[selectedMp]['actualIndex'])
			else
				Infinity_PushMenu('CONNECTION_PASSWORD')
			end
		"	
	}
	button -- Back/ Log out
	{
		area		420 696 156 28
		bam			GUIWPKPC
		ScaleToClip
		sequence	1
		text  "BACK_BUTTON"
		text style	"button"
		text shadow 1
		on 			escape
		action
		"
			Infinity_PopMenu();
			connectionScreen:OnMainCancelButtonClick()
		"	
	}
}
`
connectionTCPIPEdit = ""
`
menu
{
	name 'CONNECTION_IP'
	modal
	align center center

	onopen "Infinity_FocusTextEdit('ConnectionTCPIPEditArea')"
	label
	{
		area 0 0 380 346
		mosaic 'GMPNTCPB'

	}
	label --Title
	{
		area 22 50 340 168
		text  20681
		text style	"normal"
		text align center center
		text shadow 1
	}
	button
	{
		on return
		area 206 286 142 28
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text  "DONE_BUTTON"
		text style	"button"
		text shadow 1
		clickable lua "connectionScreen:IsValidAddress(connectionTCPIPEdit)"
		action
		"
			Infinity_PopMenu();
			connectionScreen:JoinGameIPAddress(connectionTCPIPEdit)
		"	
	}
	button
	{
		on escape
		area 28 286 142 28
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text  "CANCEL_BUTTON"
		text style	"button"
		text shadow 1
		action
		"
			Infinity_PopMenu();
			chooseNetworkProtocol(1)
		"	
	}
	
	edit
	{
		name		"ConnectionTCPIPEditArea"
		area		22 236 340 25
		pulse lua "connectionTCPIPEdit == ''"
		var		connectionTCPIPEdit
		text style	"edit"
		maxlines	1
	}
}
`
connection = {}
connectionSessionNameEdit = ""
connectionSessionPasswordEdit = ""
connectionPasswordProtected = 0
connectionLocalNetworkGame = 0

function connectionCreateGameClickable()
	local ret = string.find(connectionPlayerNameEdit, '%S') ~= nil and string.find(connectionSessionNameEdit, '%S') ~= nil

	if connectionPasswordProtected == 1 then
		ret = ret and string.find(connectionSessionPasswordEdit, '%S') ~= nil
	end

	return ret
end
function connectionSetDefaultGameSettings() 
	local player = t("MULTIPLAYER_DEFAULT_PLAYER")
	local game = t("MULTIPLAYER_ENTER_GAME_NAME")
	local pass = t("MULTIPLAYER_ENTER_GAME_PASSWORD")

	if connectionPlayerNameEdit == "" then
		connectionPlayerNameEdit = Infinity_GetINIString('Multiplayer', 'Player Name', player)
		Infinity_SetINIValue('Multiplayer', 'Player Name', connectionPlayerNameEdit)
	end

	if connectionSessionPasswordEdit == "" then
		connectionSessionPasswordEdit = Infinity_GetINIString('Multiplayer', 'Session Password', pass)
		Infinity_SetINIValue('Multiplayer', 'Session Password', connectionSessionPasswordEdit)
	end

	if connectionSessionNameEdit == "" then
		connectionSessionNameEdit = Infinity_GetINIString('Multiplayer', 'Session Name', game)
		Infinity_SetINIValue('Multiplayer', 'Session Name', connectionSessionNameEdit)
	end

	if connectionSessionPasswordEdit ~= "" then
		connectionPasswordProtected = 1
	else
		connectionPasswordProtected = 0
	end

	if connectionScreen:HasServiceProvider() then
		connectionLocalNetworkGame = 0
	else
		connectionLocalNetworkGame = 1
	end
end
`
menu
{
	name 'CONNECTION_CREATE'
	align center center
	ignoreEsc
	modal

	onOpen
	"
		connectionSetDefaultGameSettings()
	"

	label
	{
		area 0 0 380 458
		mosaic "GMPNCGMB"
	}
	label
	{
		area 16 6 360 40
		text "CREATEGAME_TITLE"
		text style 'label'
		text align left center
		text point 22
		text shadow 1
	}
	label -- player
	{
		area		62 51 261 21
		text		style 'label'
		text		"PLAYER_NAME_LABEL"
	}
	edit
	{
		name		"connectionPlayerNameEditArea"
		area		67 72 256 27
		var			connectionPlayerNameEdit
		text style	"edit"
		pulse lua "connectionPlayerNameEdit == ''"
		maxlines	1
		maxchars 	32

	}

	label -- session
	{
		area		61 99 262 21
		text		style 'label'
		text		"SESSION_NAME_LABEL"
	}
	edit
	{
		name		"connectionSessionNameEditArea"
		area		67 121 256 26
		var			connectionSessionNameEdit
		text 		style	"edit"
		pulse lua "connectionSessionNameEdit == ''"
		maxlines	1
	}
	button -- password option
	{
		area		67 220 256 28
		bam			GUIRECC
		ScaleToClip		
		sequenceonce lua "Infinity_RandomNumber(0, 3)"
		frame lua	"connectionPasswordProtected ~=1 and 0 or 2"
		text  		"CONNECTION_PASSWORD_PROTECTED"
		text style	"button"
		text shadow 1
		tooltip lua "t('CONNECTION_PASSWORD_PROTECTED_TOOLTIP')"
		action
		"
			connectionPasswordProtected = 1 - connectionPasswordProtected
			if connectionPasswordProtected == 1 then
				Infinity_FocusTextEdit('connectionSessionPasswordEditArea')
			end
		"
	}
	button -- local option
	{
		area		67 260 256 28
		bam			GUIRECC
		ScaleToClip		
		sequenceonce lua "Infinity_RandomNumber(0, 3)"
		frame lua	"connectionLocalNetworkGame ~=1 and 0 or 2"		
		text  		"CONNECTION_LOCAL_NETWORK_GAME"
		text style	"button"
		text shadow 1
		tooltip lua "t('CONNECTION_LOCAL_NETWORK_GAME_TOOLTIP')"
		action
		"
			if connectionScreen:HasServiceProvider() then
				connectionLocalNetworkGame = 1 - connectionLocalNetworkGame
			end
		"
	}

	label -- password
	{
		area		59 147 264 21
		text		style 'label'
		text		"CHOOSE_PASSWORD_LABEL"
		enabled 	connectionPasswordProtected
	}
	edit
	{
		name		"connectionSessionPasswordEditArea"
		area		67 168 256 26
		var			connectionSessionPasswordEdit
		text 		style "edit"
		pulse lua "connectionSessionPasswordEdit == ''"
		maxlines	1
		enabled 	connectionPasswordProtected
	}
	button
	{
		clickable lua 	"connectionCreateGameClickable()"
		area 			52 316 271 34
		bam			GUIRECC
		ScaleToClip		
		sequenceonce lua "Infinity_RandomNumber(0, 3)"
		text style		"button"
		text			"CREATEGAME_BUTTON"
		on return
		action		
		"
			local stringStart = string.find(connectionPlayerNameEdit, '%S');
			connectionPlayerNameEdit = string.sub(connectionPlayerNameEdit, stringStart, string.len(connectionPlayerNameEdit))
			stringStart = string.find(connectionSessionNameEdit, '%S');
			connectionSessionNameEdit = string.sub(connectionSessionNameEdit, stringStart, string.len(connectionSessionNameEdit))

			if connectionPasswordProtected == 1 then
				stringStart = string.find(connectionSessionPasswordEdit, '%S');
				connectionSessionPasswordEdit = string.sub(connectionSessionPasswordEdit, stringStart, string.len(connectionSessionPasswordEdit))
			end
	
			if connectionPasswordProtected == 0 then
				connectionSessionPasswordEdit = ''
			end

			Infinity_PushMenu('CONNECTION_NEWORSAVED')
		"
	}
	button
	{
		on escape
		area 		110 392 164 30
		bam			GUIWPKPC
		ScaleToClip
		sequence	1
		text style	"button"
		text shadow 1
		text		"BACK_BUTTON"
		action		
		"
			Infinity_PopMenu()
		"
	}
}
menu
{
	name 'CONNECTION_NEWORSAVED'
	align center center
	modal
	label
	{
		area 0 0 380 355
		mosaic GUIERR3B
	}
	label
	{
		area 22 22 338 80
		text style	"normal"
		text		"CONNECTION_SELECT_GAME_TYPE_LABEL"
		text align center center
	}
	button
	{
		area 88 136 200 32
		bam			GUIWPKPC
		ScaleToClip
		sequence	1
		text style	"button"
		text shadow 1
		text		"NEW_GAME_BUTTON"
		tooltip lua "t('CONNECTION_NEW_GAME_TOOLTIP')"
		action		
		"
			fromMultiPlayer = true
			Infinity_PushMenu('CHARGEN_DIFFICULTY')
		"
	}
	button
	{
		area 88 212 200 32
		bam			GUIWPKPC
		ScaleToClip
		sequence	1
		text style	"button"
		text shadow 1
		text		"LOAD_BUTTON"
		tooltip lua "t('CONNECTION_LOAD_GAME_TOOLTIP')"
		action		
		"
			Infinity_PopMenu()
			Infinity_PopMenu()
			Infinity_PopMenu()

			if connectionLocalNetworkGame == 1 then
				connectionIsHosting = true
				chooseNetworkProtocol(2)
			end

			connectionScreen:OnLoadGameButtonClick()
		"
	}

	button
	{
		on escape
		area 112 288 162 32
		bam			GUIWPKPC
		ScaleToClip
		sequence	1
		text style	"button"
		text shadow 1
		text		"BACK_BUTTON"
		action		
		"
			Infinity_PopMenu()
		"
	}
}
`
connectionPasswordPasswordEdit = ""
`
menu
{
	name 'CONNECTION_PASSWORD'
	align center center
	modal
	onOpen
	"
		if mp_sessions[selectedMp]['name'] == Infinity_GetINIString('Multiplayer', 'Session Name', '') then
			connectionPasswordPasswordEdit = Infinity_GetINIString('Multiplayer', 'Session Password', '')
		else
			connectionPasswordPasswordEdit = ''
		end
		Infinity_FocusTextEdit('connectionPasswordPasswordEditArea')
	"

	label
	{
		area 0 0 658 240
		mosaic "GUIERR6"
	}
	label
	{
		area		22 14 606 45
		text		style 'title'
		text		"PASSWORD_REQUIRED_LABEL"
	}
	label
	{
		area		22 59 606 33
		text		style 'label'
		text		"ENTER_PASSWORD_LABEL"
	}

	button
	{
		bam 		GUIOSW
		on esc
		area 		614 0 44 44
		sequence 	2
		action 
		"	
			Infinity_PopMenu()
		"
	}

	edit
	{
		name		"connectionPasswordPasswordEditArea"
		area		22 92 606 50
		var			connectionPasswordPasswordEdit
		text style	"edit"
		text align 	center center
		maxlines	1
		fill        112 111 111 64
		action
		"
			--On return pressed
			if (key_pressed == 13) then
				local stringStart = string.find(connectionNameNameEdit, '%S')
				if stringStart ~= nil then
					local stringStart = string.find(connectionPasswordPasswordEdit, '%S')
					mp_sessions[selectedMp]['password'] = string.sub(connectionPasswordPasswordEdit, stringStart, string.len(connectionPasswordPasswordEdit) )
					Infinity_PopMenu()
					Infinity_JoinMultiplayerGame(mp_shownSessions[selectedMp]['actualIndex'])
				end
				return -1
			end
			return 1
		"
	}

	button
	{
		area 		343 170 230 40
		bam			'GUIBUTMT'	
		text style	"button"
		text shadow 1
		text		"DONE_BUTTON"
		clickable lua "connectionPasswordPasswordEdit ~='' and string.find(connectionPasswordPasswordEdit, '%S') ~= nil"
		action		
		"
			Infinity_PopMenu(); 
			local stringStart = string.find(connectionPasswordPasswordEdit, '%S')
			mp_sessions[selectedMp]['password'] = string.sub(connectionPasswordPasswordEdit, stringStart, string.len(connectionPasswordPasswordEdit) )
			Infinity_JoinMultiplayerGame(mp_shownSessions[selectedMp]['actualIndex'])
		"
	}

	button
	{
		on escape
		area 79 170 230 40
		bam			'GUIBUTMT'	
		text style	"button"
		text shadow 1
		text		"BACK_BUTTON"
		action		
		"
			Infinity_PopMenu()
		"
	}
}
`
connectionNameNameEdit = ""
`
menu
{
	name 'CONNECTION_NAME'
	align center center
	modal
	onOpen
	"
		connectionNameNameEdit = ''
		Infinity_FocusTextEdit('connectionNameNameEditArea')
	"

	label
	{
		area 0 0 658 240
		mosaic "GUIERR6"
	}
	label
	{
		area		12 16 632 70
		text		style 'title'
		text  		"PLAYER_NAME_LABEL"
	}

	button
	{
		bam 		GUIOSW
		on esc
		area 		614 0 44 44
		sequence 	2
		action 
		"	
			Infinity_PopMenu()
		"
	}

	edit
	{
		name		"connectionNameNameEditArea"
		area		22 92 606 50
		var			connectionNameNameEdit
		text style	"edit"
		text align 	center center
		maxlines	1
		fill        112 111 111 64
		action
		"
			--On return pressed
			if (key_pressed == 13) then
				local stringStart = string.find(connectionNameNameEdit, '%S')
				if stringStart ~= nil then
					connectionPlayerNameEdit = string.sub(connectionNameNameEdit, stringStart, string.len(connectionNameNameEdit) )
					Infinity_PopMenu()

					Infinity_GetPasswordRequired(mp_shownSessions[selectedMp]['actualIndex'])
					if passwordReq == 0 then
						Infinity_PopMenu(); 
						Infinity_PopMenu(); 
						mp_sessions[mp_shownSessions[selectedMp]['actualIndex']]['password'] = passwordMp
						Infinity_JoinMultiplayerGame(mp_shownSessions[selectedMp]['actualIndex'])
					else
						Infinity_PushMenu('CONNECTION_PASSWORD')
					end
				end
				return -1
			end
			return 1
		"
	}

	button
	{
		area 		343 170 230 40
		bam			'GUIBUTMT'	
		text style	"button"
		text shadow 1
		text		"DONE_BUTTON"
		clickable lua "connectionNameNameEdit ~='' and string.find(connectionNameNameEdit, '%S') ~= nil"
		action		
		"
			Infinity_PopMenu(); 
			local stringStart = string.find(connectionNameNameEdit, '%S')
			connectionPlayerNameEdit = string.sub(connectionNameNameEdit, stringStart, string.len(connectionNameNameEdit) )

			Infinity_GetPasswordRequired(mp_shownSessions[selectedMp]['actualIndex'])
			if passwordReq == 0 then
				Infinity_PopMenu(); 
				Infinity_PopMenu(); 
				mp_sessions[mp_shownSessions[selectedMp]['actualIndex']]['password'] = passwordMp
				Infinity_JoinMultiplayerGame(mp_shownSessions[selectedMp]['actualIndex'])
			else
				Infinity_PushMenu('CONNECTION_PASSWORD')
			end
		"
	}

	button
	{
		on escape
		area 79 170 230 40
		bam			'GUIBUTMT'	
		text style	"button"
		text shadow 1
		text		"BACK_BUTTON"
		action		
		"
			Infinity_PopMenu()
		"
	}
}
menu
{
	name 'CONNECTION_PLAYERNAME'
	align center center
	ignoreEsc
	modal

	onOpen
	"
		connectionPlayerNameEdit = Infinity_GetINIString('Multiplayer', 'Player Name', 'Player Name')
		Infinity_FocusTextEdit('connectionPlayerNameEditArea')
	"
	label
	{
		area 0 0 512 651
		mosaic "GUICONNB"
	}
	label
	{
		area 83 59 338 32
		text style "label"
		text "CURRENT_PLAYERS_LABEL"
	}
	label
	{
		area 83 446 338 32
		text style "label"
		text "PLAYER_NAME_LABEL"
	}

	list
	{
		column
		{
			width 100
			label
			{
				area 0 0 -1 -1
				text lua "connection.currentPlayers[rowNumber].name"
				text style "edit"
				align center center
			}
		}

		action 
		"
		"

		rowheight 50
		area 83 99 350 338
		table "connection.currentPlayers"
		var connectionSelectedPlayer
	}

	edit
	{
		name		"connectionPlayerNameEditArea"
		area		83 479 338 32
		var			connectionPlayerNameEdit
		text style	"edit"
		text align  center center
		maxlines	1
		maxchars 	32
		fill            112 111 111 64
	}
	button
	{
		clickable 	lua "connectionPlayerNameEdit ~= ''"
		area		150 535 230 40
		bam			GUIBUTMT
		sequence	0
		text  		"DONE_BUTTON"
		text style	"button"
		text shadow 1
		on			return
		action
		"
			Infinity_PopMenu();
			Infinity_PopMenu();
			connectionScreen:SetPlayerName(connectionPlayerNameEdit)
		"	
	}
}

menu
{
	name 'CONNECTION_JOINING'
	modal
	align center center

	label
	{
		area 0 0 657 234
		mosaic GUIERR6 
	}
	label --Title
	{
		area 30 20 594 124
		text  20274
		text style	"label"
		text shadow 1
	}
	button
	{
		area		222 170 230 40
		bam		GUIBUTMT
		sequence	0
		text  		"CANCEL_BUTTON"
		text style	"button"
		text shadow 1
		on		escape
		action
		"
			Infinity_PopMenu();
		"	
	}
}
menu
{
	name 'CONNECTION_ERROR'
	modal
	align center center
	label
	{
		area 0 0 380 212
		mosaic GUIERR1B
	}
	label --Title
	{
		area 20 20 340 80
		text lua "Infinity_FetchString(CONNECTION_ERROR_MESSAGE)"
		text style	"normal"
		text align center center
	}
	button
	{
		on escape
		area		108 136 162 32
		bam			GUIWPKPC
		ScaleToClip
		sequence	1
		text  		"CANCEL_BUTTON"
		text style	"button"
		text shadow 1
		action
		"
			Infinity_PopMenu();
		"	
	}
}

menu
{
	name 'CONNECTION_WAITING_FOR_PROVIDER'
	modal
	align center center

	label
	{
		area 0 0 400 458
		mosaic GUIERL2B
	}	
		
	label --Title
	{
		area 22 20 336 80
		text "CONNECTION_FINDING_DEVICES"
		text style	"normal"
		text shadow 1
		text align center center
	}
	button
	{
		on escape
		area		108 212 162 32
		bam			GUIWPKPC
		ScaleToClip
		sequence	1
		text  		"CANCEL_BUTTON"
		text style	"button"
		text shadow 1
		action
		"
			Infinity_PopMenu('CONNECTION_WAITING_FOR_PROVIDER')
			Infinity_PopMenu('CONNECTION');
			connectionScreen:OnMainCancelButtonClick()
		"	
	}
	button
	{
		on			return
		area		55 136 258 32
		bam			GUIRECC
		ScaleToClip		
		sequenceonce lua "Infinity_RandomNumber(0, 3)"
		text  		"CONNECTION_LOCAL_NETWORK_GAME"
		text style	"button"
		text shadow 1
		action
		"
			Infinity_PopMenu('CONNECTION_WAITING_FOR_PROVIDER')
			connectionScreen:StopConnectingToProvider()
		"	
	}
}

menu
{
	name 'CONNECTION_WAITING_FOR_SERVER'
	modal
	align center center

	label
	{
		area 0 0 380 212
		mosaic GUIERR1B
	}
	label --Title
	{
		area 20 20 340 80
		text "CONNECTION_WAITING_FOR_SERVER"
		text style	"normal"
		text align center center
	}
	button
	{
		on escape
		area		108 136 162 32
		bam			GUIWPKPC
		ScaleToClip
		sequence	1
		text  		"CANCEL_BUTTON"
		text style	"button"
		text shadow 1
		action
		"
			Infinity_PopMenu('CONNECTION_WAITING_FOR_SERVER')
			connectionScreen:CancelJoinGame();
		"	
	}
}

`
function getCampaignBackground()
	local campaign = startEngine:GetCampaign()
	return startCampaignData[campaign].background
end
`
menu
{
	name 'BACKGROUND'
	align center center
	label
	{
		area 0 0 2550 1800
		mosaic BCKGRND
	}
}

`
multiplayer = {}
mpChatEdit = ""
mpHelpTextString = ""
mpModifyingCharacter = -1
mpErrorText = -1
mpErrorState = -1
text_GUIMP_0_25 = ""
text_GUIMP_0_25_lines = 0
multiplayerInPermission = false
multiplayerInPermissionForPlayer = 0

multiplayerSessionName = ""
multiplayerSaveName = ""
multiplayerChapter = ""
multiplayerTimePlayed = ""
multiplayerDifficultyLabel = ""
multiplayerDifficultyImage = 0
mulitplayerPreexistingDifficulty = 0;

multiplayerLocalPlayerID = 1

multiplayerFromInGame = false

mpaCharacters = 
{
	{ready = false, name = "", class = "", player = 1, portrait = "NOPORTLS", inprogress = false, color = "0xffffff"},
	{ready = false, name = "", class = "", player = 1, portrait = "NOPORTLS", inprogress = false, color = "0xffffff"},
	{ready = false, name = "", class = "", player = 1, portrait = "NOPORTLS", inprogress = false, color = "0xffffff"},
	{ready = false, name = "", class = "", player = 1, portrait = "NOPORTLS", inprogress = false, color = "0xffffff"},
	{ready = false, name = "", class = "", player = 1, portrait = "NOPORTLS", inprogress = false, color = "0xffffff"},
	{ready = false, name = "", class = "", player = 1, portrait = "NOPORTLS", inprogress = false, color = "0xffffff"}
}

mpaPlayers =
{
	{name = "", id = 0, color = "0x7a7aFF"},
	{name = "", id = 0, color = "0xFFAF7A"},
	{name = "", id = 0, color = "0x7aFFa3"},
	{name = "", id = 0, color = "0x57F9FF"},
	{name = "", id = 0, color = "0xF2F188"},
	{name = "", id = 0, color = "0xFE97FF"}	
}

function updateMultiplayerPlayerSlot(slot,setting,value)
	if multiplayerLocalPlayerID == 1 and setting == "name" and mpaPlayers[slot][setting] == "" and value ~= "" then
		mpaPlayers[slot][setting] = value
		broadcastPlayerAdded(slot)
	elseif multiplayerLocalPlayerID == 1 and setting == "name" and mpaPlayers[slot][setting] ~= "" and value == "" then
		broadcastPlayerRemoved(slot)
		mpaPlayers[slot][setting] = value
	else
		mpaPlayers[slot][setting] = value
	end
end
function updateMultiplayerCharacterSlot(slot,setting,value)
	if multiplayerLocalPlayerID == 1 and setting == "color" and mpaCharacters[slot][setting] == "0xffffff" and value ~= "0xffffff" then
		mpaCharacters[slot][setting] = value
		broadcastCharacterAdded(slot)
	elseif multiplayerLocalPlayerID == 1 and setting == "ready" and mpaCharacters[slot][setting] == false and value == true then
		broadcastCharacterReady(slot)
		mpaCharacters[slot][setting] = value
	elseif multiplayerLocalPlayerID == 1 and setting == "ready" and mpaCharacters[slot][setting] == true and value == false then
		broadcastCharacterNotReady(slot)
		mpaCharacters[slot][setting] = value
	else
		mpaCharacters[slot][setting] = value
	end
end

function clearCharacterSlot(slot, announce)
	if announce == true and mpaCharacters[slot]['name'] ~= "" then
		broadcastCharacterRemoved(slot)
	end
	mpaCharacters[slot]['ready'] = false
	mpaCharacters[slot]['name'] = ""
	mpaCharacters[slot]['class'] = ""
	mpaCharacters[slot]['portrait'] = "NOPORTLS"
	mpaCharacters[slot]['inprogress'] = false
	mpaCharacters[slot]['color'] = "0xffffff"
end

function clearPlayerSlot(slot, announce)
	if announce == true and mpaPlayers[slot]["name"] ~= "" then
		broadcastPlayerRemoved(slot)
	end
	mpaPlayers[slot]["name"] = ""
	mpaPlayers[slot]["id"] = 0
end

function getMultiplayerCharacterName(slot, newLine, getClass)
	local ret = ""
	local separator = ", "

	if newLine == true then
		separator = "\n"
	end

	if mpaCharacters[slot]["name"] == "" and multiplayerLocalPlayerID == mpaCharacters[slot]["player"] then
		ret = t("MULTIPLAYER_CREATE_CHARACTER_MESSAGE")
	elseif mpaCharacters[slot]["name"] == "" and multiplayerLocalPlayerID ~= mpaCharacters[slot]["player"] and mpaCharacters[slot]["inprogress"] == false then
		ret = t("MULTIPLAYER_EMPTY_CHARACTER_MESSAGE")
	elseif mpaCharacters[slot]["inprogress"] == true and mpaCharacters[slot]["class"] == "" then
		setStringTokenLua("<PLAYER_NAME_1>",getMultiplayerPlayerName(mpaCharacters[slot]["player"], false, true))
		setStringTokenLua("<SEPERATOR>",separator)
		ret = t("MULTIPLAYER_CREATING_CHARACTER_MESSAGE")
		removeStringTokenLua("<SEPERATOR>")
		removeStringTokenLua("<PLAYER_NAME_1>")
	elseif mpaCharacters[slot]["name"] ~= "" and mpaCharacters[slot]["class"] ~= "" then
		ret = "^0xff"..mpaCharacters[slot]["color"]..mpaCharacters[slot]["name"].."^-"
		if getClass == true then
			ret = ret..separator..mpaCharacters[slot]["class"]
		end
	end

	return ret
end
function getMultiplayerCharacterButtonText(slot)
	local ret = ""

	if mpaCharacters[slot]["name"] == "" and multiplayerLocalPlayerID == mpaCharacters[slot]["player"] then
		ret = t("CREATE_CHAR_BUTTON")
	elseif mpaCharacters[slot]["name"] == "" and multiplayerLocalPlayerID ~= mpaCharacters[slot]["player"] then
		ret = ""
	elseif mpaCharacters[slot]["name"] ~= "" and mpaCharacters[slot]["class"] == "" then
		ret = ""
	elseif mpaCharacters[slot]["name"] ~= "" and mpaCharacters[slot]["class"] ~= "" and mpaCharacters[slot]["player"] ~= multiplayerLocalPlayerID then
		ret = t("MULTIPLAYER_VIEW_DETAILS_BUTTON")
	elseif mpaCharacters[slot]["name"] ~= "" and mpaCharacters[slot]["class"] ~= "" and mpaCharacters[slot]["player"] == multiplayerLocalPlayerID and multiplayer.allowreformparty == false and multiplayerDifficultyLabel ~= "" then
		ret = t("MULTIPLAYER_VIEW_DETAILS_BUTTON")
	elseif mpaCharacters[slot]["name"] ~= "" and mpaCharacters[slot]["class"] ~= "" and mpaCharacters[slot]["player"] == multiplayerLocalPlayerID then
		ret = t("MULTIPLAYER_EDIT_CHAR_BUTTON")
	end

	return ret
end
function shouldGreyscaleEditButton(slot)
	local ret = false
	local storedString = t("MULTIPLAYER_VIEW_DETAILS_BUTTON")

	if multiplayerFromInGame == true then
		ret = true
	end

	if ret == true and getMultiplayerCharacterButtonText(slot) == storedString  then
		ret = false
	end

	if ret == true and (multiplayerLocalPlayerID == 1 or multiplayer.player[multiplayerLocalPlayerID].permissions[7] == true) then
		ret = false
	end

	if ret == true and mpaCharacters[slot]["name"] == "" then
		ret = false
	end

	if ret == false and mpaCharacters[slot]['ready'] == true and getMultiplayerCharacterButtonText(slot) ~= storedString and multiplayerFromInGame == false then
		ret = true
	end

	return ret
end
function getMultiplayerCharacterReadyText(slot)
	local ret = ""

	if mpaCharacters[slot]["name"] == "" and mpaCharacters[slot]["inprogress"] == false then
		ret = ""
	elseif mpaCharacters[slot]["ready"] == false then
		ret = t("MULTIPLAYER_NOT_READY_MESSAGE")
	elseif mpaCharacters[slot]["ready"] == true then
		ret = t("MULTIPLAYER_READY_MESSAGE")
	end

	return ret
end
function getMultiplayerPlayerName(slot,newLine,hostyou)
	local ret = mpaPlayers[slot]["name"]
	if ret ~= "" then
		ret = "^0x"..mpaPlayers[slot]["color"]..mpaPlayers[slot]["name"].."^-"
	end

	local separator = " "
	if newLine == true then
		separator = "\n"
	end

	if hostyou == true then
		if slot == multiplayerLocalPlayerID then
			ret = ret..separator.."^0xFFFFFFFF"..t("MULTIPLAYER_PLAYER_YOU").."^-"
		elseif slot == 1 then
			ret = ret..separator.."^0xFFFFFFFF"..t("MULTIPLAYER_PLAYER_HOST").."^-"
		elseif ret == "" then
			ret = "^0xFF9B9B9B"..t("MULTIPLAYER_EMPTY_PLAYER").."^-"
		end
	end

	return ret
end
function getMultiplayerPlayerControlledCharacter(player,slot)
	local count = 0
	local ret = "NOCTRL" -- need blank square or something

	local index = 1
	for index = 1, 6, 1 do
		if mpaCharacters[index]["player"] == player then
			count = count + 1
		end

		if currentMultiplayerSelectPlayer == player and mpDraggedCharacter == index then
			slot = slot + 1
		end

		if count == slot then
			ret = mpaCharacters[index]["portrait"]
			break
		end
	end

	return ret
end
function getMultiplayerPlayerControlledCharacterSlot(player,slot)
	local count = 0
	local ret = -1

	local index = 1
	for index = 1, 6, 1 do
		if mpaCharacters[index]["player"] == player then
			count = count + 1
		end

		if count == slot then
			ret = index
			break
		end
	end

	return ret
end

function getPlayerKickWidth(slot)
	if multiplayerLocalPlayerID ~= 1 or slot == 1 then
		return 0
	else
		return 10
	end
end

function getPlayerNameWidth(slot)
	if multiplayerLocalPlayerID ~= 1 or slot == 1 then
		return 45
	else
		return 35
	end
end

function getStartGameButtonTooltip()
	if multiplayer.donebuttonclickable then
		return ""
	else
		return t("MULTIPLAYER_CANNOT_START")
	end
end

function updateMultiplayerSessionData(sessionName, saveName, chapter, timePlayed, difficulty)
	local gold = "^0xffc7f8fb"
	multiplayerSessionName = gold..sessionName.."^-"

	if areaName ~= "" then
		multiplayerSaveName = gold..t("MULTIPLAYER_SAVED_GAME_LABEL").."^- ^0xffffffff"..saveName.."^-"
		multiplayerChapter = gold..t("MULTIPLAYER_CHAPTER_LABEL").."^- ^0xffffffff"..chapter.."^-"
		multiplayerTimePlayed = gold..t("MULTIPLAYER_TIME_PLAYED_LABEL").."^- ^0xffffffff"..timePlayed.."^-"
		if difficulty > 0 then
			mulitplayerPreexistingDifficulty = difficulty
			multiplayerDifficultyLabel = gold..t("MULTIPLAYER_DIFFICULTY_LABEL").."^-^0xffffffff"..t(difficulties[difficulty].name).."^-"
			multiplayerDifficultyImage = difficulty - 1
		end
	else
		multiplayerSaveName = gold..t("MULTIPLAYER_NEW_GAME_LABEL").."^- ^0xffffffff"..saveName.."^-"
		multiplayerChapter = gold..t("MULTIPLAYER_CHAPTER_LABEL").."^- ^0xffffffff"..chapter.."^-"
		multiplayerTimePlayed = gold..t("MULTIPLAYER_TIME_PLAYED_NEW_GAME").."^-"
		if difficulty > 0 then
			multiplayerDifficultyLabel = gold..t("MULTIPLAYER_DIFFICULTY_LABEL").."^-^0xffffffff"..t(difficulties[difficulty].name).."^-"
			multiplayerDifficultyImage = difficulty - 1
		end
	end
end

function broadcastCharacterControlChange(slot, newPlayer)
	print("newPlayer "..newPlayer.." current "..currentMultiplayerSelectPlayer.." playernumber "..mpaCharacters[slot]["player"])
	if mpaCharacters[slot]["player"] ~= newPlayer then
		local host = getMultiplayerPlayerName(1,false,false)
		local player = getMultiplayerPlayerName(newPlayer,false,false)
		setStringTokenLua("<PLAYER_NAME_1>",host)
		setStringTokenLua("<PLAYER_NAME_2>",player)
		local message = t("MULTIPLAYER_SLOT_"..slot.."_ASSIGNED_TO")
		removeStringTokenLua("<PLAYER_NAME_1>")
		removeStringTokenLua("<PLAYER_NAME_2>")
		print(message)
		Infinity_SendChatMessage(message, true) 
	end
end

function broadcastCharacterAdded(slot)
	local player = getMultiplayerPlayerName(mpaCharacters[slot]["player"],false,false)
	local character = getMultiplayerCharacterName(slot, false, true)
	setStringTokenLua("<PLAYER_NAME_1>",player)
	setStringTokenLua("<CHARACTER_NAME_1>",character)
	local message = t("MULTIPLAYER_HAS_ADDED")
	removeStringTokenLua("<PLAYER_NAME_1>")
	removeStringTokenLua("<CHARACTER_NAME_1>")
	print(message)
	Infinity_SendChatMessage(message, true) 
end

function broadcastCharacterRemoved(slot)
	local player = getMultiplayerPlayerName(mpaCharacters[slot]["player"],false,false)
	local character = getMultiplayerCharacterName(slot, false, true)
	setStringTokenLua("<PLAYER_NAME_1>",player)
	setStringTokenLua("<CHARACTER_NAME_1>",character)
	local message = t("MULTIPLAYER_HAS_REMOVED")
	removeStringTokenLua("<PLAYER_NAME_1>")
	removeStringTokenLua("<CHARACTER_NAME_1>")
	print(message)
	Infinity_SendChatMessage(message, true) 
end

function broadcastCharacterReady(slot)
	local character = getMultiplayerCharacterName(slot, false, false)
	setStringTokenLua("<CHARACTER_NAME_1>",character)
	local message = t("MULTIPLAYER_IS_READY_TO_START")
	removeStringTokenLua("<CHARACTER_NAME_1>")
	print(message)
	Infinity_SendChatMessage(message, true) 
end

function broadcastCharacterNotReady(slot)
	local character = getMultiplayerCharacterName(slot, false, false)
	setStringTokenLua("<CHARACTER_NAME_1>",character)
	local message = t("MULTIPLAYER_IS_NO_LONGER_READY")
	removeStringTokenLua("<CHARACTER_NAME_1>")
	print(message)
	Infinity_SendChatMessage(message, true) 
end

function broadcastPlayerAdded(slot)
	local player = getMultiplayerPlayerName(slot,false,false)
	setStringTokenLua("<PLAYER_NAME_1>",player)
	local message = t("MULTIPLAYER_HAS_JOINED_THE_GAME")
	removeStringTokenLua("<PLAYER_NAME_1>")
	print(message)
	Infinity_SendChatMessage(message, true) 
end

function broadcastPlayerRemoved(slot)
	local player = getMultiplayerPlayerName(slot,false,false)
	setStringTokenLua("<PLAYER_NAME_1>",player)
	local message = t("MULTIPLAYER_HAS_LEFT_THE_GAME")
	removeStringTokenLua("<PLAYER_NAME_1>")
	print(message)
	Infinity_SendChatMessage(message, true) 
end

mpDraggedCharacter = nil
mpDraggedPortrait = 'NOCTRL'

function multiplayerStartSwapPortraits(player, character)
	if multiplayerLocalPlayerID == 1 and player > 0 and player < 7 and mpaPlayers[player]["name"] ~= "" then
		print("Starting the drag of player "..player.." character slot "..character)
		mpDraggedCharacter = character
		multiplayerScreen:SetModifiedCharacterSlot(character - 1)
		currentMultiplayerSelectPlayer = player
		mpDraggedPortrait = mpaCharacters[character]["portrait"]
	end
end

function multiplayerStopSwapPortraits(player)
	if multiplayerLocalPlayerID == 1 then
		if player > 0 and player < 7 and mpaPlayers[player]["name"] ~= "" and currentMultiplayerSelectPlayer ~= nil then
			if mpaCharacters[mpDraggedCharacter]['ready'] == true and mpaCharacters[mpDraggedCharacter]['player'] ~= player then 
				multiplayerScreen:OnReadyButtonClick(mpDraggedCharacter-1)
			end
			broadcastCharacterControlChange(mpDraggedCharacter, player)
			multiplayerScreen:OnPlayerSelection(player-1)
		end
		mpDraggedCharacter = nil
		currentMultiplayerSelectPlayer = nil
		mpDraggedPortrait = 'NOCTRL'
	end
end

function getMultiplayerReadyTooltip(character)
	local ret = ""

	if mpaCharacters[character]["ready"] == true then
		ret = t("MULTIPLAYER_READY_BUTTON_ON_TOOLTIP")
	else
		ret = t("MULTIPLAYER_READY_BUTTON_OFF_TOOLTIP")
	end

	return ret
end

function multiplayerUpdateDraggedPortrait()
	if mpDraggedPortrait ~= 'NOCTRL' and multiplayerLocalPlayerID == 1 then
		local x,y,w,h = Infinity_GetArea('multiplayerDraggingPortraitImage')
		x,y = Infinity_GetMousePosition();
		x = x - 20
		y = y - 30
		Infinity_SetArea('multiplayerDraggingPortraitImage',x,y,w,h)
		return true
	else
		local x,y,w,h = Infinity_GetArea('multiplayerDraggingPortraitImage')
		Infinity_SetArea('multiplayerDraggingPortraitImage',-20,-20,w,h)
		return false
	end
end

function get4CheckFrame(slot)
	local ret = 1

	if mpaCharacters[slot]['ready'] == true and mpaCharacters[slot]['player'] == multiplayerLocalPlayerID then
		ret = 0
	elseif mpaCharacters[slot]['ready'] == true then
		ret = 2
	end

	return ret
end

`
menu
{
	name 'MULTIPLAYER'
	align center center
	ignoreesc
	onOpen
	"
		existingDifficulty = Infinity_GetOption(12, 8) + 1;
		multiplayerFromInGame = multiplayerScreen:GetEngineState() == 2
		TT_BuildTitleData('ARBITRATION_TITLE', 353, true)
		TT_CreateTitleChars('ARBITRATION_TITLE', 'TT_ARBITRATION', 40, 'TEMPLATE_titlechar_ARBITRATION')
	"
	onclose	"TT_DestroyTitleChars('ARBITRATION_TITLE', 'TEMPLATE_titlechar_ARBITRATION')"
	label 
	{
		mosaic 'GUISMBM'
		area 0 0 1024 768
	}
	template
    {
        label
        {
            enabled "true"
            ignoreEvents
            area 0 0 -1 -1
            bam "TTREALMS"
            sequence lua "TT_TitleData['ARBITRATION_TITLE'][instanceId].seq"
            align center center
        }
        name "TEMPLATE_titlechar_ARBITRATION"
    }
	label
    {
        name "TT_ARBITRATION"
		area 38 38 353 40
		--text "ARBITRATION_TITLE"
		--text style "title"
    }
	label
	{
		area 514 84 492 604
		fill 0 0 0 100
	}
	label
	{
		area 514 84 492 25
		fill 0 0 0 255
	}
	label
	{
		area 524 80 136 28
		text lua "t('PLAYER_LABEL')"
		text style "label"
		align center center
	}
	label
	{
		area 660 80 228 28
		text lua "t('CHARACTER_LABEL')"
		text style "label"
		align center center
	}
	label
	{
		area 888 80 107 28
		text lua "t('READY_TO_PLAY_LABEL')"
		text style "label"
		align center center
	}
	list -- character list
	{
		column --player
		{ 
			width 32 
			label
			{
				area 		6 5 140 44
				text lua	"getMultiplayerPlayerName(mpaCharacters[rowNumber]['player'],true,true)"
				text style 	"normal"
				text align center center
				enabled 	"multiplayerLocalPlayerID == 1 and rowNumber ~= 1"
			}
			label
			{
				area 		6 0 140 95
				text lua	"getMultiplayerPlayerName(mpaCharacters[rowNumber]['player'],true,true)"
				text style 	"normal"
				text align center center
				enabled 	"multiplayerLocalPlayerID ~= 1 or rowNumber == 1"
			}
			label
			{
				area		6 55 140 31
				bam 		GUIWPKPC
				ScaleToClip
				sequence	1
				frame lua 	"currentCellCheck(1)"
				align 		center center
				enabled 	"multiplayerLocalPlayerID == 1 and rowNumber ~= 1"
				text lua	"t('MULTIPLAYER_CHANGE_PLAYER_BUTTON')"
				text style 	"button"
			}

		}
		column --portrait
		{
			width 15
			label
			{
				area		0 0 -1 -1
				bam 		'GUIRSP10'
				ScaleToClip
				sequence 	1
				align 		center center
			}
			label
			{
				area		13 11 48 77
				bitmap lua	'mpaCharacters[rowNumber]["portrait"]'
				sequence 	1
				align 		center center
			}
		}
		column --character
		{ 
			width 45
			label
			{
				area 		2 0 195 44
				text lua 	"getMultiplayerCharacterName(rowNumber, true, true)"
				text style 	"normal"
				text font STONESML
				text align center center
				enabled 	"getMultiplayerCharacterButtonText(rowNumber) ~= ''"
			}
			label
			{
				area 		2 0 195 95
				text lua 	"getMultiplayerCharacterName(rowNumber, true, true)"
				text style 	"normal"
				text font STONESML
				text align center center
				enabled 	"getMultiplayerCharacterButtonText(rowNumber) == ''"
			}
			label
			{
				area		5 47 190 44
				bam 		BIGBUTT
				ScaleToClip
				frame lua 	"currentCellCheck(3)"
				align 		center center
				enabled 	"getMultiplayerCharacterButtonText(rowNumber) ~= ''"
			}
			label
			{
				area		5 50 195 44
				text lua 	"getMultiplayerCharacterButtonText(rowNumber)"
				text style 	"button"
				text shadow 1
			}
			label
			{
				area		5 47 190 44
				fill 		0 0 0 170
				enabled 	"shouldGreyscaleEditButton(rowNumber)"
			}

		}
		column --ready
		{ 
			width 13
			label
			{
				area 		0 50 50 44
				text lua	"getMultiplayerCharacterReadyText(rowNumber)"
				text style 	"label"
			}

		}

		area 				520 112 475 570		
		rowheight			95
		table				"mpaCharacters"
		var					selectedCharacter
		scrollbar			'GUISCRC'
		hidehighlight
		action
		"
			if cellNumber == 1 then
				cellNumber = nil
				if multiplayerLocalPlayerID == 1 and selectedCharacter ~= 1 then
					if multiplayerFromInGame == false then
						multiplayerScreen:SetModifiedCharacterSlot(selectedCharacter - 1)
						currentMultiplayerSelectPlayer = mpaCharacters[selectedCharacter]['player']
						Infinity_PushMenu('MP_PICKPLAYER')
					elseif shouldGreyscaleEditButton(selectedCharacter) == false then
						multiplayerScreen:OnModifyButtonClick()
					end
				end
			elseif cellNumber == 2 then
				cellNumber = nil
			elseif cellNumber == 3 then
				cellNumber = nil
				if shouldGreyscaleEditButton(selectedCharacter) == false then
					if getMultiplayerCharacterButtonText(selectedCharacter) == t('MULTIPLAYER_VIEW_DETAILS_BUTTON') then
						multiplayerScreen:OnPortraitButtonClick(selectedCharacter-1)
					elseif getMultiplayerCharacterButtonText(selectedCharacter) == t('CREATE_CHAR_BUTTON') then
						if multiplayerFromInGame == false then
							multiplayerScreen:SetModifiedCharacterSlot(selectedCharacter-1)
							multiplayerScreen:UpdateModifyCharacterPanel()
						elseif shouldGreyscaleEditButton(selectedCharacter) == false then
							multiplayerScreen:OnModifyButtonClick()
						end
					elseif getMultiplayerCharacterButtonText(selectedCharacter) == t('MULTIPLAYER_EDIT_CHAR_BUTTON') then
						if multiplayerFromInGame == false then
							mpModifyingCharacter = selectedCharacter - 1
							Infinity_PushMenu('MP_MODIFYCHARACTER')
						elseif shouldGreyscaleEditButton(selectedCharacter) == false then
							multiplayerScreen:OnModifyButtonClick()
						end
					end
				end
			elseif cellNumber == 4 then
				cellNumber = nil
			end
		"
		actionAlt
		"
			cellNumber = nil
		"
	}

	--ready buttons
	button
	{
		area 942 112 50 50
		bam 		'4CHECK'
		sequence lua "get4CheckFrame(1)"
		align 		center center
		tooltip lua "getMultiplayerReadyTooltip(1)"
		action
		"
			if multiplayerFromInGame == false then
				if multiplayerLocalPlayerID == mpaCharacters[1]['player'] then
					multiplayerScreen:OnReadyButtonClick(1-1)
				end
			end
		"
	}
	button
	{
		area 942 207 50 50
		bam 		'4CHECK'
		sequence lua "get4CheckFrame(2)"
		align 		center center
		action
		"
			if multiplayerFromInGame == false then
				if multiplayerLocalPlayerID == mpaCharacters[2]['player'] then
					multiplayerScreen:OnReadyButtonClick(2-1)
				end
			end
		"
	}
	button
	{
		area 942 304 50 50
		bam 		'4CHECK'
		sequence lua "get4CheckFrame(3)"
		align 		center center
		action
		"
			if multiplayerFromInGame == false then
				if multiplayerLocalPlayerID == mpaCharacters[3]['player'] then
					multiplayerScreen:OnReadyButtonClick(3-1)
				end
			end
		"
	}
	button
	{
		area 942 397 50 50
		bam 		'4CHECK'
		sequence lua "get4CheckFrame(4)"
		align 		center center
		action
		"
			if multiplayerFromInGame == false then
				if multiplayerLocalPlayerID == mpaCharacters[4]['player'] then
					multiplayerScreen:OnReadyButtonClick(4-1)
				end
			end
		"
	}
	button
	{
		area 942 492 50 50
		bam 		'4CHECK'
		sequence lua "get4CheckFrame(5)"
		align 		center center
		action
		"
			if multiplayerFromInGame == false then
				if multiplayerLocalPlayerID == mpaCharacters[5]['player'] then
					multiplayerScreen:OnReadyButtonClick(5-1)
				end
			end
		"
	}
	button
	{
		area 942 587 50 50
		bam 		'4CHECK'
		sequence lua "get4CheckFrame(6)"
		align 		center center
		action
		"
			if multiplayerFromInGame == false then
				if multiplayerLocalPlayerID == mpaCharacters[6]['player'] then
					multiplayerScreen:OnReadyButtonClick(6-1)
				end
			end
		"
	}

	label
	{
		area 40 315 454 25
		fill 0 0 0 180
	}
	label
	{
		area 40 343 454 47
		fill 50 50 50 180
	}
	label
	{
		area 40 394 454 47
		fill 50 50 50 180
	}
	label
	{
		area 40 445 454 47
		fill 50 50 50 180
	}
	label
	{
		area 40 496 454 47
		fill 50 50 50 180
	}
	label
	{
		area 40 547 454 47
		fill 50 50 50 180
	}
	label
	{
		area 40 598 454 47
		fill 50 50 50 180
	}
	label
	{
		area 40 315 207 25
		text lua "t('PLAYERS_LABEL')"
		text style "label"
		align center center
	}
	label
	{
		area 247 315 187 25
		text lua "t('PARTY_SLOTS_LABEL')"
		text style "label"
		align center center
	}
	label
	{
		area 434 315 60 25
		text lua "t('RULES_LABEL')"
		text style "label"
		align center center
	}
	list -- player list
	{
		column -- kick
		{
			width lua "getPlayerKickWidth(rowNumber)"
			label
			{
				area		6 5 45 45
			}
		}
		column --player
		{ 
			width lua "getPlayerNameWidth(rowNumber)"
			label
			{
				area 		0 0 195 55
				text lua	"getMultiplayerPlayerName(rowNumber, false, true)"
				text style 	"normal"
				text align center center
				align 		left center
				enabled 	"getPlayerKickWidth(rowNumber) == 0"
			}
			label
			{
				area 		0 0 150 55
				text lua	"getMultiplayerPlayerName(rowNumber, false, true)"
				text style 	"normal"
				text align center center
				align 		left center
				enabled 	"getPlayerKickWidth(rowNumber) ~= 0"
			}

		}
		column --portraits
		{ 
			width 45 
			label
			{
				area		6 5 25 38
			}
		}
		column -- permissions
		{
			width 10
			label
			{
				area		6 5 45 45
			}
		}

		area 				52 339 442 306
		
		rowheight			51
		table				"mpaPlayers"
		var					selectedPlayer
		scrollbar			'GUISCRC'
		hidehighlight
		action
		"
			if cellNumber == 1 and selectedPlayer > 1 then
				cellNumber = 0
			elseif cellNumber == 2 then
				cellNumber = 0
			elseif cellNumber == 3 then
				cellNumber = 0
			elseif cellNumber == 4 and selectedPlayer > 1  then
				cellNumber = 0
			end
		"
	}

	--kick
	button
	{
		area		40 395 46 45
		bam 			GUMPBUTX
		sequence 		4
		clickable lua	"mpaPlayers[2]['name'] ~= ''"
		align 		center center
		enabled 	"multiplayerLocalPlayerID == 1"
		tooltip lua	"t('MULTIPALYER_KICK_TOOLTIP')"
		action
		"
			if mpaPlayers[2]['name'] ~= '' then
				multiplayerScreen:OnKickPlayerButtonClick(2-1)
			end
		"
	}
	button
	{
		area		40 446 46 45
		bam 			GUMPBUTX
		sequence 		4
		clickable lua	"mpaPlayers[3]['name'] ~= ''"
		align 		center center
		enabled 	"multiplayerLocalPlayerID == 1"
		tooltip lua	"t('MULTIPALYER_KICK_TOOLTIP')"
		action
		"
			if mpaPlayers[3]['name'] ~= '' then
				multiplayerScreen:OnKickPlayerButtonClick(3-1)
			end
		"
	}
	button
	{
		area		40 497 46 45
		bam 			GUMPBUTX
		sequence 		4
		clickable lua	"mpaPlayers[4]['name'] ~= ''"
		align 		center center
		enabled 	"multiplayerLocalPlayerID == 1"
		tooltip lua	"t('MULTIPALYER_KICK_TOOLTIP')"
		action
		"
			if mpaPlayers[4]['name'] ~= '' then
				multiplayerScreen:OnKickPlayerButtonClick(4-1)
			end
		"
	}
	button
	{
		area		40 548 46 45
		bam 			GUMPBUTX
		sequence 		4
		clickable lua	"mpaPlayers[5]['name'] ~= ''"
		align 		center center
		enabled 	"multiplayerLocalPlayerID == 1"
		tooltip lua	"t('MULTIPALYER_KICK_TOOLTIP')"
		action
		"
			if mpaPlayers[5]['name'] ~= '' then
				multiplayerScreen:OnKickPlayerButtonClick(5-1)
			end
		"
	}
	button
	{
		area		40 599 46 45
		bam 			GUMPBUTX
		sequence 		4
		clickable lua	"mpaPlayers[6]['name'] ~= ''"
		align 		center center
		enabled 	"multiplayerLocalPlayerID == 1"
		tooltip lua	"t('MULTIPALYER_KICK_TOOLTIP')"
		action
		"
			if mpaPlayers[6]['name'] ~= '' then
				multiplayerScreen:OnKickPlayerButtonClick(6-1)
			end
		"
	}

	--permissions
	button
	{
		area		446 395 46 45
		bam 			GUMPBUTX
		sequence 		3
		clickable lua	"mpaPlayers[2]['name'] ~= '' and multiplayerLocalPlayerID == 1"
		align 		center center
		tooltip lua	"t('MULTIPALYER_PERMISSION_TOOLTIP')"
		action
		"
			if mpaPlayers[2]['name'] ~= '' then
				multiplayerInPermission = true
				multiplayerInPermissionForPlayer = 2
				Infinity_PushMenu('MP_PERMISSIONS')
			end
		"
	}
	button
	{
		area		446 446 46 45
		bam 			GUMPBUTX
		sequence 		3
		clickable lua	"mpaPlayers[3]['name'] ~= '' and multiplayerLocalPlayerID == 1"
		align 		center center
		tooltip lua	"t('MULTIPALYER_PERMISSION_TOOLTIP')"
		action
		"
			if mpaPlayers[3]['name'] ~= '' then
				multiplayerInPermission = true
				multiplayerInPermissionForPlayer = 3
				Infinity_PushMenu('MP_PERMISSIONS')
			end
		"
	}
	button
	{
		area		446 497 46 45
		bam 			GUMPBUTX
		sequence 		3
		clickable lua	"mpaPlayers[4]['name'] ~= '' and multiplayerLocalPlayerID == 1"
		align 		center center
		tooltip lua	"t('MULTIPALYER_PERMISSION_TOOLTIP')"
		action
		"
			if mpaPlayers[4]['name'] ~= '' then
				multiplayerInPermission = true
				multiplayerInPermissionForPlayer = 4
				Infinity_PushMenu('MP_PERMISSIONS')
			end
		"
	}
	button
	{
		area		446 548 46 45
		bam 			GUMPBUTX
		sequence 		3
		clickable lua	"mpaPlayers[5]['name'] ~= '' and multiplayerLocalPlayerID == 1"
		align 		center center
		tooltip lua	"t('MULTIPALYER_PERMISSION_TOOLTIP')"
		action
		"
			if mpaPlayers[5]['name'] ~= '' then
				multiplayerInPermission = true
				multiplayerInPermissionForPlayer = 5
				Infinity_PushMenu('MP_PERMISSIONS')
			end
		"
	}
	button
	{
		area		446 599 46 45
		bam 			GUMPBUTX
		sequence 		3
		clickable lua	"mpaPlayers[6]['name'] ~= '' and multiplayerLocalPlayerID == 1"
		align 		center center
		tooltip lua	"t('MULTIPALYER_PERMISSION_TOOLTIP')"
		action
		"
			if mpaPlayers[6]['name'] ~= '' then
				multiplayerInPermission = true
				multiplayerInPermissionForPlayer = 6
				Infinity_PushMenu('MP_PERMISSIONS')
			end
		"
	}

	--character drag/drop
	--player 1
	button
	{
		area 247 348 180 38
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(1)
		"
	}
	button
	{
		area 				247 348 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(1,1)'
		sequence 			1
		align 				center center
		--No changing control of character 1
	}
	button
	{
		area 				278 348 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(1,2)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			if multiplayerFromInGame == false then
				local slot = getMultiplayerPlayerControlledCharacterSlot(1,2)
				multiplayerStartSwapPortraits(1,slot)
			elseif multiplayerLocalPlayerID == 1 or multiplayer.player[multiplayerLocalPlayerID].permissions[1] == true then
				multiplayerScreen:OnModifyButtonClick()
			end
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(1)
		"
	}
	button
	{
		area 				309 348 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(1,3)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			if multiplayerFromInGame == false then
				local slot = getMultiplayerPlayerControlledCharacterSlot(1,3)
				multiplayerStartSwapPortraits(1,slot)
			elseif multiplayerLocalPlayerID == 1 or multiplayer.player[multiplayerLocalPlayerID].permissions[1] == true then
				multiplayerScreen:OnModifyButtonClick()
			end
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(1)
		"
	}
	button
	{
		area 				340 348 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(1,4)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			if multiplayerFromInGame == false then
				local slot = getMultiplayerPlayerControlledCharacterSlot(1,4)
				multiplayerStartSwapPortraits(1,slot)
			elseif multiplayerLocalPlayerID == 1 or multiplayer.player[multiplayerLocalPlayerID].permissions[1] == true then
				multiplayerScreen:OnModifyButtonClick()
			end
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(1)
		"
	}
	button
	{
		area 				371 348 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(1,5)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			if multiplayerFromInGame == false then
				local slot = getMultiplayerPlayerControlledCharacterSlot(1,5)
				multiplayerStartSwapPortraits(1,slot)
			elseif multiplayerLocalPlayerID == 1 or multiplayer.player[multiplayerLocalPlayerID].permissions[1] == true then
				multiplayerScreen:OnModifyButtonClick()
			end
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(1)
		"
	}
	button
	{
		area 				402 348 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(1,6)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			if multiplayerFromInGame == false then
				local slot = getMultiplayerPlayerControlledCharacterSlot(1,6)
				multiplayerStartSwapPortraits(1,slot)
			elseif multiplayerLocalPlayerID == 1 or multiplayer.player[multiplayerLocalPlayerID].permissions[1] == true then
				multiplayerScreen:OnModifyButtonClick()
			end
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(1)
		"
	}
	--player 2
	button
	{
		area 247 399 180 38
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(2)
		"
	}
	button
	{
		area 				247 399 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(2,1)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(2,1)
			multiplayerStartSwapPortraits(2,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(2)
		"
	}
	button
	{
		area 				278 399 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(2,2)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(2,2)
			multiplayerStartSwapPortraits(2,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(2)
		"
	}
	button
	{
		area 				309 399 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(2,3)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(2,3)
			multiplayerStartSwapPortraits(2,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(2)
		"
	}
	button
	{
		area 				340 399 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(2,4)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(2,4)
			multiplayerStartSwapPortraits(2,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(2)
		"
	}
	button
	{
		area 				371 399 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(2,5)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(2,5)
			multiplayerStartSwapPortraits(2,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(2)
		"
	}
	button
	{
		area 				402 399 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(2,6)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(2,6)
			multiplayerStartSwapPortraits(2,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(2)
		"
	}
	--player 3
	button
	{
		area 247 449 180 38
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(3)
		"
	}
	button
	{
		area 				247 449 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(3,1)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(3,1)
			multiplayerStartSwapPortraits(3,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(3)
		"
	}
	button
	{
		area 				278 449 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(3,2)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(3,2)
			multiplayerStartSwapPortraits(3,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(3)
		"
	}
	button
	{
		area 				309 449 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(3,3)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(3,3)
			multiplayerStartSwapPortraits(3,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(3)
		"
	}
	button
	{
		area 				340 449 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(3,4)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(3,4)
			multiplayerStartSwapPortraits(3,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(3)
		"
	}
	button
	{
		area 				371 449 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(3,5)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(3,5)
			multiplayerStartSwapPortraits(3,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(3)
		"
	}
	button
	{
		area 				402 449 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(3,6)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(3,6)
			multiplayerStartSwapPortraits(3,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(3)
		"
	}
	--player 4
	button
	{
		area 247 500 180 38
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(4)
		"
	}
	button
	{
		area 				247 500 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(4,1)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(4,1)
			multiplayerStartSwapPortraits(4,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(4)
		"
	}
	button
	{
		area 				278 500 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(4,2)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(4,2)
			multiplayerStartSwapPortraits(4,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(4)
		"
	}
	button
	{
		area 				309 500 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(4,3)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(4,3)
			multiplayerStartSwapPortraits(4,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(4)
		"
	}
	button
	{
		area 				340 500 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(4,4)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(4,4)
			multiplayerStartSwapPortraits(4,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(4)
		"
	}
	button
	{
		area 				371 500 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(4,5)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(4,5)
			multiplayerStartSwapPortraits(4,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(4)
		"
	}
	button
	{
		area 				402 500 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(4,6)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(4,6)
			multiplayerStartSwapPortraits(4,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(4)
		"
	}
	--player 5
	button
	{
		area 247 551 180 38
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(5)
		"
	}
	button
	{
		area 				247 551 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(5,1)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(5,1)
			multiplayerStartSwapPortraits(5,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(5)
		"
	}
	button
	{
		area 				278 551 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(5,2)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(5,2)
			multiplayerStartSwapPortraits(5,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(5)
		"
	}
	button
	{
		area 				309 551 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(5,3)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(5,3)
			multiplayerStartSwapPortraits(5,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(5)
		"
	}
	button
	{
		area 				340 551 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(5,4)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(5,4)
			multiplayerStartSwapPortraits(5,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(5)
		"
	}
	button
	{
		area 				371 551 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(5,5)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(5,5)
			multiplayerStartSwapPortraits(5,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(5)
		"
	}
	button
	{
		area 				402 551 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(5,6)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(5,6)
			multiplayerStartSwapPortraits(5,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(5)
		"
	}
	--player 6
	button
	{
		area 247 602 180 38
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(6)
		"
	}
	button
	{
		area 				247 602 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(6,1)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(6,1)
			multiplayerStartSwapPortraits(6,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(6)
		"
	}
	button
	{
		area 				278 602 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(6,2)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(6,2)
			multiplayerStartSwapPortraits(6,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(6)
		"
	}
	button
	{
		area 				309 602 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(6,3)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(6,3)
			multiplayerStartSwapPortraits(6,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(6)
		"
	}
	button
	{
		area 				340 602 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(6,4)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(6,4)
			multiplayerStartSwapPortraits(6,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(6)
		"
	}
	button
	{
		area 				371 602 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(6,5)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(6,5)
			multiplayerStartSwapPortraits(6,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(6)
		"
	}
	button
	{
		area 				402 602 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(6,6)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(6,6)
			multiplayerStartSwapPortraits(6,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(6)
		"
	}

	label -- game name
	{
		area 		40 108 454 32
		text lua	"multiplayerSessionName"
		text style 	"bold_parchment"
		text align center center
	}
	label -- new game type/save name
	{
		area 		206 140 288 44
		text lua	"multiplayerSaveName"
		text style  "normal"
		text align center center
		align 		left center
	}
	label -- chapter
	{
		area 		206 180 288 44
		text lua	"multiplayerChapter"
		text style 	"normal"
		text align center center
		align 		left center
	}
	label -- time played
	{
		area 		206 220 288 44
		text lua	"multiplayerTimePlayed"
		text style 	"normal"
		text align center center
		align 		left center
	}
	label -- difficulty
	{
		area 		206 260 288 44
		text lua	"multiplayerDifficultyLabel"
		text style 	"normal"
		text align center center
		align 		left center
	}
	label -- other difficulty
	{
		area 		40 140 166 164
		bam 		"GUIDIFF"
		frame lua	"multiplayerDifficultyImage"
		sequence 	0
		align 		center center
	}
	label --under button thingy
	{
		area 787 688 198 66
		bam 'BG_UND'
		ScaleToClip
	}
	button
	{
		area 799 706 166 30
		bam			GUIWPKPC
		ScaleToClip
		sequence	1
		text "START_GAME_BUTTON" -- Done
		text style "button"
		text shadow 1
		clickable lua "multiplayer.donebuttonclickable"
		enabled "not multiplayerFromInGame"
		tooltip lua "getStartGameButtonTooltip()"
		action 
		"
			multiplayerScreen:OnMainDoneButtonClick(mulitplayerPreexistingDifficulty)
		"
	}
	button
	{
		on escape
		area 799 706 166 30
		bam			GUIWPKPC
		ScaleToClip
		sequence	1
		text "DONE_BUTTON" -- Done
		text style "button"
		text shadow 1
		clickable lua "multiplayer.donebuttonclickable"
		enabled "multiplayerFromInGame"
		tooltip lua "getStartGameButtonTooltip()"
		action 
		"
			multiplayerScreen:OnMainDoneButtonClick(mulitplayerPreexistingDifficulty)
		"
	}
	button
	{
		area 220 706 166 30
		bam			GUIWPKPC
		ScaleToClip
		sequence	1
		text "LOGOUT_BUTTON" -- Logout
		text style "button"
		text shadow 1
		action 
		"
			multiplayerScreen:OnLogoutButtonClick()
		"
	}
	button
	{
		area 508 706 164 30
		bam			GUIWPKPC
		ScaleToClip
		sequence	1
		text "MULTIPLAYER_GAME_OPTIONS_BUTTON"
		text style "button"
		text shadow 1
		enabled "multiplayerLocalPlayerID == 1"
		action 
		"
			helpTextString = Infinity_FetchString(11323)
			Infinity_PushMenu('MP_OPTIONS')
		"
	}

	--dragged portrait
	label
	{
		name 				"multiplayerDraggingPortraitImage"
		area 				-20 -20 37 57
		bitmap lua			'mpDraggedPortrait'
		sequence 			1
		align 				center center
		enabled 			"multiplayerUpdateDraggedPortrait()"
	}
}
`
multiplayerPermissions = 
{
	{'MULTIPLAYER_PERMISSIONS_MODIFY',	'MULTIPLAYER_PERMISSIONS_MODIFY_TOOLTIP',	false, false, 7},
	{'MULTIPLAYER_PERMISSIONS_GOLD',	'MULTIPLAYER_PERMISSIONS_GOLD_TOOLTIP',		false, false, 0},
	{'MULTIPLAYER_PERMISSIONS_TRAVEL',	'MULTIPLAYER_PERMISSIONS_TRAVEL_TOOLTIP',	false, false, 1},
	{'MULTIPLAYER_PERMISSIONS_VIEW',	'MULTIPLAYER_PERMISSIONS_VIEW_TOOLTIP',		false, false, 3},
	{'MULTIPLAYER_PERMISSIONS_DIALOGUE','MULTIPLAYER_PERMISSIONS_DIALOGUE_TOOLTIP',	false, false, 2},
	{'MULTIPLAYER_PERMISSIONS_PAUSE',	'MULTIPLAYER_PERMISSIONS_PAUSE_TOOLTIP',	false, false, 4}
}

function broadcastPermissionChange(player,permission,setting)
	local player = getMultiplayerPlayerName(player,false,true)
	local todo = t(multiplayerPermissions[permission][1])
	setStringTokenLua("<PLAYER_NAME_1>",player)
	setStringTokenLua("<PERMISSION>",todo)
	if setting == true then
		message = t("MULTIPLAYER_IS_NOW_PERMITTED")
	else
		message = t("MULTIPLAYER_IS_NOT_PERMITTED")
	end
	removeStringTokenLua("<PLAYER_NAME_1>")
	removeStringTokenLua("<PERMISSION>")
	print(message)
	Infinity_SendChatMessage(message, true) 
end

function getMultiplayerPlayerPermissionDescription()
	local player = getMultiplayerPlayerName(multiplayerInPermissionForPlayer,false,false)
	setStringTokenLua("<PLAYER_NAME_1>",player)
 	local canPerform = t("MULTIPLAYER_CAN_PERFORM")
	removeStringTokenLua("<PLAYER_NAME_1>")

	return canPerform
end
`
menu
{
	name 'MP_PERMISSIONS'
	align center center
	modal
	onOpen
	"
		local index = 1
		for index = 0, #(multiplayer.player[multiplayerInPermissionForPlayer].permissions), 1 do
			local luaIndex = -1
			local loopLuaIndex = -1

			for loopLuaIndex = 1, #multiplayerPermissions, 1 do
				if multiplayerPermissions[loopLuaIndex][5] == index then
					luaIndex = loopLuaIndex
					break
				end
			end

			if luaIndex ~= -1 then
				if multiplayer.player[multiplayerInPermissionForPlayer].permissions[index] == true then
					multiplayerPermissions[luaIndex][3] = true
					multiplayerPermissions[luaIndex][4] = true
				elseif multiplayer.player[multiplayerInPermissionForPlayer].permissions[index] == false then
					multiplayerPermissions[luaIndex][3] = false
					multiplayerPermissions[luaIndex][4] = false
				else
					multiplayerPermissions[luaIndex][3] = false
					multiplayerPermissions[luaIndex][4] = false
				end
			end
		end
	"

	label
	{
		area 0 0 380 422
		mosaic "GMPNCGMC"
	}
	label
	{
		area 16 6 360 40
		text "PERMISSIONS_TITLE"
		text style 'label'
		text align left center
		text point 22
		text shadow 1
	}
	label
	{
		area 16 56 360 36
		text lua "getMultiplayerPlayerPermissionDescription()"
		text style 'label'
		text align left center
		text point 18
		text shadow 1
	}

	--bottom buttons
	button
	{
		on escape
		area 		25 364 148 28
		bam			GUIWPKPC
		ScaleToClip
		sequence	1
		text "CANCEL_BUTTON" -- Back
		text style "button"
		text shadow 1
		action 
		"
			multiplayerScreen:OnCancelButtonClick()
			Infinity_PopMenu()
		"
	}
	button
	{
		on return
		area 			204 364 148 28
		bam			GUIWPKPC
		ScaleToClip		
		sequence 1
		text "DONE_BUTTON" -- Done
		text style "button"
		text shadow 1
		enabled "multiplayerLocalPlayerID == 1"
		action 
		"
			local index = 1
			for index = #(multiplayerPermissions), 1, -1 do
				if multiplayerPermissions[index][3] ~= multiplayerPermissions[index][4] then
					broadcastPermissionChange(multiplayerInPermissionForPlayer,index,multiplayerPermissions[index][3])
					multiplayerScreen:OnPermissionButtonClick(multiplayerInPermissionForPlayer - 1, multiplayerPermissions[index][5])
				end
			end

			multiplayerInPermission = false
			multiplayerScreen:OnDoneButtonClick()
			Infinity_PopMenu()
		"
	}

	--permissions
	button
	{
		area 25 98 28 28
		bam ROUNDBUT
		sequence 0
		frame lua "multiplayerPermissions[1][3] == true and 2 or 0"
		tooltip lua "t(multiplayerPermissions[1][2])"
		scaleToClip
		action 
		"
			if multiplayerLocalPlayerID == 1 then
				multiplayerPermissions[1][3] = not multiplayerPermissions[1][3]
			end
		"
	}
	text
	{
		area 76 96 288 32
		text lua "t(multiplayerPermissions[1][1])"
		tooltip lua "t(multiplayerPermissions[1][2])"
		text style "label"
		align left center
	}
	button
	{
		area 25 136 28 28
		bam ROUNDBUT
		sequence 0
		frame lua "multiplayerPermissions[2][3] == true and 2 or 0"
		tooltip lua "t(multiplayerPermissions[2][2])"
		scaleToClip
		action 
		"
			if multiplayerLocalPlayerID == 1 then
				multiplayerPermissions[2][3] = not multiplayerPermissions[2][3]
			end
		"
	}
	text
	{
		area 76 138 288 32
		text lua "t(multiplayerPermissions[2][1])"
		tooltip lua "t(multiplayerPermissions[2][2])"
		text style "label"
		align left center
	}
	button
	{
		area 25 182 28 28
		bam ROUNDBUT
		sequence 0
		frame lua "multiplayerPermissions[3][3] == true and 2 or 0"
		tooltip lua "t(multiplayerPermissions[3][2])"
		scaleToClip
		action 
		"
			if multiplayerLocalPlayerID == 1 then
				multiplayerPermissions[3][3] = not multiplayerPermissions[3][3]
			end
		"
	}
	text
	{
		area 76 180 288 32
		text lua "t(multiplayerPermissions[3][1])"
		tooltip lua "t(multiplayerPermissions[3][2])"
		text style "label"
		align left center
	}
	button
	{
		area 25 224 28 28
		bam ROUNDBUT
		sequence 0
		frame lua "multiplayerPermissions[4][3] == true and 2 or 0"
		tooltip lua "t(multiplayerPermissions[4][2])"
		scaleToClip
		action 
		"
			if multiplayerLocalPlayerID == 1 then
				multiplayerPermissions[4][3] = not multiplayerPermissions[4][3]
			end
		"
	}
	text
	{
		area 76 222 288 32
		text lua "t(multiplayerPermissions[4][1])"
		tooltip lua "t(multiplayerPermissions[4][2])"
		text style "label"
		align left center
	}
	button
	{
		area 25 266 28 28
		bam ROUNDBUT
		sequence 0
		frame lua "multiplayerPermissions[5][3] == true and 2 or 0"
		tooltip lua "t(multiplayerPermissions[5][2])"
		scaleToClip
		action 
		"
			if multiplayerLocalPlayerID == 1 then
				multiplayerPermissions[5][3] = not multiplayerPermissions[5][3]
			end
		"
	}
	text
	{
		area 76 264 288 32
		text lua "t(multiplayerPermissions[5][1])"
		tooltip lua "t(multiplayerPermissions[5][2])"
		text style "label"
		align left center
	}
	button
	{
		area 25 300 28 28
		bam ROUNDBUT
		sequence 0
		frame lua "multiplayerPermissions[6][3] == true and 2 or 0"
		tooltip lua "t(multiplayerPermissions[6][2])"
		scaleToClip
		action 
		"
			if multiplayerLocalPlayerID == 1 then
				multiplayerPermissions[6][3] = not multiplayerPermissions[6][3]
			end
		"
	}
	text
	{
		area 76 298 288 32
		text lua "t(multiplayerPermissions[6][1])"
		tooltip lua "t(multiplayerPermissions[6][2])"
		text style "label"
		align left center
	}
}
`
multiplayerGameOptions =
{
	{"LISTEN_JOIN_LABEL",	"LISTEN_JOIN_TOOLTIP",	false, false},
	{"ALLOW_REFORM_LABEL",	"ALLOW_REFORM_TOOLTIP",	false, false}
}
multiplayerImportOptions =
{
	{"MULTIPLAYER_IMPORT_CHARACTER_RULES_SEI"},
	{"MULTIPLAYER_IMPORT_CHARACTER_RULES_SE"},
	{"MULTIPLAYER_IMPORT_CHARACTER_RULES_S"}
}
multiplayerImportOption = 0

function broadcastOptionChange(slot, onOff)
	if multiplayerLocalPlayerID == 1 then
		local message = ""
		if slot < 3 then
			local setting = t(multiplayerGameOptions[slot][1])
			setStringTokenLua("<SESSION_RULES>",setting)
			if onOff == true then
				message = t("MULTIPLAYER_GAME_WILL_NOW")
			else
				message = t("MULTIPLAYER_GAME_WILL_NO_LONGER")
			end
			removeStringTokenLua("<SESSION_RULES>")
		else
			local setting = t(multiplayerImportOptions[slot-2][1])
			setStringTokenLua("<IMPORT_RULES>",setting)
			message = t("MULTIPLAYER_IMPORT_SETTINGS_CHANGE")
			removeStringTokenLua("<IMPORT_RULES>")
		end
		print(message)
		Infinity_SendChatMessage(message, true) 
	end
end
`
menu
{
	name 'MP_OPTIONS'
	align center center
	modal 
	onOpen
	"
		multiplayerGameOptions[1][3] = multiplayer.listentojoin
		multiplayerGameOptions[1][4] = multiplayerGameOptions[1][3]
		multiplayerGameOptions[2][3] = multiplayer.allowreformparty
		multiplayerGameOptions[2][4] = multiplayerGameOptions[2][3]
		multiplayerImportOption = multiplayer.importsetting + 1
	"
	label
	{
		area 0 0 380 422
		mosaic "GMPNCGMC"
	}
	label
	{
		area 16 6 360 40
		text "OPTIONS_TITLE"
		text style 'label'
		text align left center
		text point 22
		text shadow 1
	}
	label
	{
		area 16 140 360 40
		text "MULTIPLAYER_IMPORT_CHARACTER_RULES_LABEL"
		text style 'label'
		text align left center
		text point 20
		text shadow 1
	}

	button
	{
		area 25 53 28 28
		bam ROUNDBUT
		sequence 0
		frame lua "multiplayerGameOptions[1][3] == true and 2 or 0"
		tooltip lua "t(multiplayerGameOptions[1][2])"
		scaleToClip
		action 
		"
			multiplayerGameOptions[1][3] = not multiplayerGameOptions[1][3]
		"
	}
	text
	{
		area 73 46 303 42
		text lua "t(multiplayerGameOptions[1][1])"
		text style "label"
		text shadow 1
		tooltip lua "t(multiplayerGameOptions[1][2])"
		align left center
	}
	button
	{
		area 25 95 28 28
		bam ROUNDBUT
		sequence 0
		frame lua "multiplayerGameOptions[2][3] == true and 2 or 0"
		tooltip lua "t(multiplayerGameOptions[2][2])"
		scaleToClip
		action 
		"
			multiplayerGameOptions[2][3] = not multiplayerGameOptions[2][3]
		"
	}
	text
	{
		area 73 88 303 42
		text lua "t(multiplayerGameOptions[2][1])"
		text style "label"
		text shadow 1
		tooltip lua "t(multiplayerGameOptions[2][2])"
		align left center
	}

	button
	{
		area 25 185 32 32
		bam ROUNDBUT
		sequence 1
		frame lua "multiplayerImportOption == 1 and 2 or 0"
		tooltip lua "t('IMPORT_RULES_TOOLTIP')"
		scaleToClip
		action 
		"
			multiplayerImportOption = 1
		"
	}
	text
	{
		area 73 180 303 42
		text lua "t('MULTIPLAYER_IMPORT_CHARACTER_RULES_SEI')"
		tooltip lua "t('IMPORT_RULES_TOOLTIP')"
		text style "label"
		text shadow 1
		align left center
	}
	button
	{
		area 25 227 32 32
		bam ROUNDBUT
		sequence 1
		frame lua "multiplayerImportOption == 2 and 2 or 0"
		tooltip lua "t('IMPORT_RULES_TOOLTIP')"
		scaleToClip
		action 
		"
			multiplayerImportOption = 2
		"
	}
	text
	{
		area 73 222 303 42
		text lua "t('MULTIPLAYER_IMPORT_CHARACTER_RULES_SE')"
		tooltip lua "t('IMPORT_RULES_TOOLTIP')"
		text style "label"
		text shadow 1
		align left center
	}
	button
	{
		area 25 269 32 32
		bam ROUNDBUT
		sequence 1
		frame lua "multiplayerImportOption == 3 and 2 or 0"
		tooltip lua "t('IMPORT_RULES_TOOLTIP')"
		scaleToClip
		action 
		"
			multiplayerImportOption = 3
		"
	}
	text
	{
		area 73 264 303 42
		text lua "t('MULTIPLAYER_IMPORT_CHARACTER_RULES_S')"
		tooltip lua "t('IMPORT_RULES_TOOLTIP')"
		text style "label"
		text shadow 1
		align left center
	}

	--bottom buttons
	button
	{
		on return
		area 			204 364 148 28
		bam			GUIWPKPC
		ScaleToClip		
		sequence 1
		text "DONE_BUTTON" -- Done
		text style "button"
		text shadow 1
		action 
		"
			if multiplayerImportOption ~= multiplayer.importsetting + 1 then
				multiplayerScreen:SetImportSetting(multiplayerImportOption - 1)
				broadcastOptionChange(multiplayerImportOption+2)
			end

			if multiplayerGameOptions[1][3] ~= multiplayerGameOptions[1][4] then
				broadcastOptionChange(1, multiplayerGameOptions[1][3])
				multiplayerScreen:ToggleListenToJoin()
			end

			if multiplayerGameOptions[2][3] ~= multiplayerGameOptions[2][4] then
				broadcastOptionChange(2, multiplayerGameOptions[2][3])
				multiplayerScreen:ToggleAllowReformParty()
			end

			Infinity_PopMenu()
		"
	}
	button
	{
		on escape
		area 		25 364 148 28
		bam			GUIWPKPC
		ScaleToClip
		sequence	1
		text "CANCEL_BUTTON" -- Cancel
		text style "button"
		text shadow 1
		action 
		"
			multiplayerScreen:OnCancelButtonClick()
			Infinity_PopMenu()
		"
	}
}
`
	function getActivePlayerIndex(index)
		local ret = -1
		local count = 0
		local slot = 0

		for slot = 1, 6, 1 do
			if mpaPlayers[slot]["name"] ~= '' then
				count = count + 1
			end
			if count == index then
				ret = slot
				break
			end
		end

		return ret
	end
`
menu
{
	name 'MP_PICKPLAYER'
	align center center
	modal 
	label
	{
		area 0 0 380 469
		mosaic 'GMPNPNMB'
	}
	label
	{
		area 14 6 336 38
		text "SELECT_PLAYER_TITLE"
		text style 'label'
		text align left center
		text point 22
		text shadow 1
	}
	label 
	{
		area 26 44 338 46
		text "SELECT_PLAYER_DESCRIPTION"
		text style "label"
		text shadow 1
	}

	-- list
	list
	{
		column
		{
			width 100
			label
			{
				area 0 0 340 32
				text lua "getMultiplayerPlayerName(getActivePlayerIndex(rowNumber), false, true)"
				text style "normal"
				align left center
			}
		}

		action 
		"
		"
		rowheight 32
		area 26 90 332 301
		table "multiplayer.player"
		var currentMultiplayerSelectPlayer
	}
	button
	{
		on escape
		area 26 406 146 30
		text "CANCEL_BUTTON"
		text style "button"
		text shadow 1
		align center center
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		action
		"	
			Infinity_PopMenu()
		"
	}
	button
	{
		on escape
		area 204 406 146 30
		text "DONE_BUTTON"
		text style "button"
		text shadow 1
		align center center
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		action
		"	
			if mpaCharacters[selectedCharacter]['ready'] == true and mpaCharacters[selectedCharacter]['player'] ~= getActivePlayerIndex(currentMultiplayerSelectPlayer) then
				multiplayerScreen:OnReadyButtonClick(selectedCharacter-1)
			end
			broadcastCharacterControlChange(selectedCharacter, getActivePlayerIndex(currentMultiplayerSelectPlayer))
			multiplayerScreen:OnPlayerSelection(getActivePlayerIndex(currentMultiplayerSelectPlayer)-1)
			Infinity_PopMenu()
		"
	}
}
`
	function multiplayerIsDelete ()
		if (multiplayer.character[mpModifyingCharacter+1].portrait ~= '') then
			return t("DELETE_BUTTON")
		else
			return t("CREATE_BUTTON")
		end
	end
	function getModifyConfirmationLabel()
		print(mpModifyingCharacter+1)
		return t('MULTIPLAYER_EDIT_CONFIRM').. ' ' .. getMultiplayerCharacterName(mpModifyingCharacter+1)
	end
`
menu
{
	name 'MP_MODIFYCHARACTER'
	align center center
	modal 
	label 
	{
		area 0 0 380 278
		mosaic GUIERR2B 
	}
	label --Title
	{
		area 20 20 340 80
		text lua "getModifyConfirmationLabel()"
		text style	"normal"
		text shadow 1
		text align center center
	}
	button
	{
		on escape
		area		108 212 162 32
		bam			GUIWPKPC
		ScaleToClip
		sequence	1
		text "CANCEL_BUTTON" -- cancel
		text style "button"
		text shadow 1
		action
		"	
			Infinity_PopMenu()
		"
	}
	button
	{
		on return
		area		108 136 162 32
		bam			GUIWPKPC
		ScaleToClip
		sequence	1
		text lua "multiplayerIsDelete()"
		text style "button"
		text shadow 1
		action
		"	
			Infinity_PopMenu()
			multiplayerScreen:SetModifiedCharacterSlot(mpModifyingCharacter)
			if (multiplayer.character[mpModifyingCharacter+1].portrait ~= '') then
				multiplayerScreen:OnModifyCharacterDelete()
			else
				multiplayerScreen:UpdateModifyCharacterPanel()
			end
		"
	}
}

menu
{
	name 'MP_ERRORONE'
	align center center
	modal 
	label
	{
		area 0 0 380 212
		mosaic GUIERR1B
	}
	label
	{
		area 20 20 340 80
		text lua "Infinity_FetchString( mpErrorText )"
		text style	"normal"
		text align center center
	}
	button
	{
		on return
		area		108 136 162 32
		bam			GUIWPKPC
		ScaleToClip
		sequence	1
		text "DONE_BUTTON" -- done
		text style "button"
		text shadow 1
		align center center
		action
		"	
			Infinity_PopMenu()
		"
	}
}

menu
{
	name 'MP_ERRORTWO'
	align center center
	modal 
	label
	{
		area 0 0 380 278
		mosaic GUIERR2B 
	}
	label
	{
		area 22 20 336 80
		text lua "Infinity_FetchString( mpErrorText )"
		text style	"normal"
		text shadow 1
		text align center center
	}
	button
	{
		on return
		enabled "mpErrorState == 2"
		area		108 136 162 32
		bam			GUIWPKPC
		ScaleToClip
		sequence	1
		text "MODIFY_BUTTON" -- modify
		text style "button"
		text shadow 1
		align center center
		action
		"	
			Infinity_PopMenu()
			multiplayerScreen:ModifyCharacters()
		"
	}
	button
	{
		on return
		enabled "mpErrorState == 3"
		area		108 136 162 32
		bam			GUIWPKPC
		ScaleToClip
		sequence	1
		text "KICK_BUTTON" -- kick player
		text style "button"
		text shadow 1
		align center center
		action
		"	
			Infinity_PopMenu()
			multiplayerScreen:KickPlayer()
		"
	}
	button
	{
		on return
		enabled "mpErrorState == 4"
	area		108 136 162 32
		bam			GUIWPKPC
		ScaleToClip
		sequence	1
		text "LOGOUT_BUTTON" -- log out
		text style "button"
		text shadow 1
		align center center
		action
		"	
			local index = 1
			Infinity_PopMenu()
			multiplayerScreen:Logout()
		"
	}
	button
	{
		on escape
		area		108 212 162 32
		bam			GUIWPKPC
		ScaleToClip
		sequence	1
		text "CANCEL_BUTTON" -- cancel
		text style "button"
		text shadow 1
		align center center
		action
		"	
			Infinity_PopMenu()
		"
	}
}
`
	function dragMPChat(newY)
		--do a quick bounds check.
		local area = {Infinity_GetArea("mpChatDisplayBackground")}
		if(area[4] + newY <= 150) then newY = 150 - area[4] end
		
		area = {Infinity_GetArea("mpChatHandle")}
		local screenWidth, screenHeight = Infinity_GetScreenSize()
		if(area[2] + area[4] + newY > screenHeight) then newY = screenHeight - area[2] - area[4] end
		
		adjustItemGroup({"mpChatDisplayBackground","mpChatDisplay"}, 0, 0, 0, newY)
		adjustItemGroup({"mpChatEditBackground","mpChatEdit","mpChatHandle"}, 0, newY, 0 , 0)
	end
	mpChatTable = {}
	showMpChat = 0
	function updateChatViewed()
		if(showMpChat == 0) then chatViewed = 0 end
	end
	function updateMPChatPreview(message)
		if(showMpChat == 0) then table.insert(mpChatTable,{text = message}) end
	end
	function getMPMessageOpacity()
		local current = mpChatTable[#mpChatTable]
		if(current == nil) then
			return 0
		end
		if(current.displayTime == nil) then
			current.displayTime = 500
			
			--set the box size
			Infinity_ScaleToText("mpChatPreview")
			
			--give some extra room for the padding
			adjustItemGroup({"mpChatPreview"},0,0,0,16)
		end
		if(current.displayTime > 0) then
			current.displayTime = current.displayTime - 4
		end
		if(current.displayTime > 255) then
			return 255
		else
			return current.displayTime
		end
	end
	function getMPMessage()
		if(#mpChatTable > 0 and mpChatTable[#mpChatTable].displayTime ~= nil) then 
			return mpChatTable[#mpChatTable].text 
		end
		return nil
	end
	function getChatIconOpacity()
		if(chatViewed == 1) then return 255 end
		local sinWave = math.sin(Infinity_GetFrameCounter() / 15)
		local sinWaveAdjusted = (sinWave / 2) + 0.5
		return sinWaveAdjusted * 255
	end
	function getChatBarTooltip()
		if(showMpChat == 0) then
			return t("MULTIPLAYER_CHAT_BAR_COLLAPSED")
		else
			return t("MULTIPLAYER_CHAT_BAR_EXPANDED")
		end
	end
	function resizeMpEditBox()
		Infinity_ScaleToText('mpChatEdit')
		local x,y,w,h = Infinity_GetArea('mpChatEdit')
		local offset = 20
		if(h + offset < 42) then h = (42 - offset) end
		
		
		Infinity_SetArea('mpChatEdit',x,y,w,h)
		Infinity_SetArea('mpChatEditBackground',nil,nil,nil,h + offset)
		Infinity_SetArea('mpChatHandle',nil,y+h+(offset/2),nil,nil)
	end

	function mpChatboxScroll(top, height, contentHeight)
		if(mpChatboxJumpToBottom and contentHeight > height) then
			mpChatboxJumpToBottom = nil
			return height-contentHeight
		end
		if(mpChatboxScrollToBottom == 0 and mpChatboxScrollLastHeight == contentHeight) then
			--defer to default scrolling
			return nil
		elseif mpChatboxScrollToBottom == 0 then
			mpChatboxScrollLastHeight = contentHeight
			return height-contentHeight
		end
		if(contentHeight < height) then
			--no scrolling required, content fits
			mpChatboxScrollToBottom = nil
			return nil
		end
		local dT = Infinity_GetClockTicks() - mpChatboxScrollTimeLast
		mpChatboxScrollTimeLast = Infinity_GetClockTicks()
		top = top + lastTrimmedContentHeight
		lastTrimmedContentHeight = 0
		local newTop = (dT * -0.25) + top
		if (newTop + contentHeight > height + 200) then
			return (height - contentHeight + 200)
		end
		if(newTop + contentHeight < height) then
			mpChatboxScrollToBottom = 0
			return height - contentHeight
		end
		return newTop
	end

	mpChatboxScrollLastHeight = 0
	mpChatboxScrollToBottom = nil
	mpChatboxScrollTimeLast = 0
	mpChatEditOverlay = ""
`
menu
{
	name "MP_CHAT_OVERLAY"
	enabled "e:IsMultiplayer()"
	align right top
	ignoreEsc
	offset -120 0
	onOpen
	"
		chatViewed = 1
	"
	label
	{
		name "mpChatDisplayBackground"
		enabled "showMpChat"
		area 0 0 300 281
		rectangle 4
		rectangle opacity 170
	}
	label
	{
		area 0 0 300 42
		rectangle 0

	}
	label
	{
		area 10 8 28 28
		bam "CHTICN"
		frame 1
		opacity lua "getChatIconOpacity()"
		
	}
	label
	{
		area 10 8 28 28
		bam "CHTICN"
		frame 0
		opacity lua "255 - getChatIconOpacity()"
	}
	label
	{
		area 42 0 252 42
		text "MULTIPLAYER_CHAT_LABEL"
		text style "label"
	}
	button
	{
		area 0 0 300 42
		toggle "showMpChat"
		tooltip lua "getChatBarTooltip()"
		action
		"
			chatViewed = 1
			mpChatboxScrollToBottom = 1
			if showMpChat == 1 then
				Infinity_FocusTextEdit('mpChatEdit')
			else
				Infinity_FocusTextEdit('')
			end
		"
	}
	
	label
	{
		name "mpChatPreview"
		enabled "showMpChat == 0"
		opacity lua "getMPMessageOpacity()"
		area 0 42 300 34
		text style "normal"
		text lua "getMPMessage()"
		pad 8 8 8 8
		rectangle 0
		ignoreEvents
	}
	text
	{
		name "mpChatDisplay"
		enabled "showMpChat"
		area 20 46 258 180
		text lua "mpChatText"
		scrollbar 'GUISCRC'
		scrollbar func "mpChatboxScroll"
		text style	normal
	}
	label
	{
		name "mpChatEditBackground"
		enabled "showMpChat"
		area 0 233 300 48
		rectangle 0
	}
	edit
	{
		name		"mpChatEdit"
		enabled 	"showMpChat"
		area		10 243 290 28
		var			mpChatEditOverlay
		scrollbar	'GUISCRC'
		text style	"edit"
		maxchars 255
		fill            112 111 111 64
		action
		"
			--On return pressed
			if (key_pressed == 13) then
				if (mpChatEditOverlay ~= '') then
					Infinity_SendChatMessage(mpChatEditOverlay, false) 
					Infinity_PlaySound('WAL_19B')
					mpChatEditOverlay=''
					resizeMpEditBox()
					mpChatboxScrollToBottom = 1
					return -1
				end
			end
			return 1
		"
		actionalt
		"
			resizeMpEditBox()
		"
	}
	handle
	{
		name "mpChatHandle"
		area 104 281 95 36
		bam "MPCHATAB"
		enabled "showMpChat"
		tooltip lua "t('MULTIPLAYER_CHAT_RESIZE_TOOLTIP')"
		actionDrag
		"
			dragMPChat(motionY)
		"
	}
}
`
function reinitQuests()
	for questIdx, quest in pairs(quests) do
		local noquest = true
		for objIdx,objective in pairs(quest.objectives) do
			local noobjective = true
			for entryIdx,entry in pairs(objective.entries) do
				if quests[questIdx].objectives[objIdx].entries[entryIdx].stateType ~= const.ENTRY_TYPE_NONE and quests[questIdx].objectives[objIdx].entries[entryIdx].stateType ~= nil then
					noobjective = false
				end
			end
			if noobjective then
				quests[questIdx].objectives[objIdx].stateType = const.ENTRY_TYPE_NONE
			end
			if quests[questIdx].objectives[objIdx].stateType ~= const.ENTRY_TYPE_NONE and quests[questIdx].objectives[objIdx].stateType ~= nil then
				noquest = false
			end
		end
		if noquest then
			quests[questIdx].stateType = const.ENTRY_TYPE_NONE
		end
	end
end

function initQuests()
	--instead of always searching the quests, just map entry ids to their quests
	entryToQuest = {}
	for questIdx, quest in pairs(quests) do
		quests[questIdx].stateType = const.ENTRY_TYPE_NONE
		for objIdx,objective in pairs(quest.objectives) do
			quests[questIdx].objectives[objIdx].stateType = const.ENTRY_TYPE_NONE
			for entryIdx,entry in pairs(objective.entries) do
				quests[questIdx].objectives[objIdx].entries[entryIdx].stateType = const.ENTRY_TYPE_NONE
				entryToQuest[entry.id] = questIdx
			end
		end
	end
end

function compareByRecvTime(o1,o2)
	if(not o1.recvTime and not o2.recvTime) then return false end
	if(not o1.recvTime) then return false end
	if(not o2.recvTime) then return true end
	return o1.recvTime > o2.recvTime
end

function buildEntry(text, recvTime, stateType, chapter, timeStamp)
	local entry = 
		{
			text = text,
			recvTime = recvTime,
			stateType = stateType,
			timeStamp = timeStamp,
			chapters = {}
		}
	entry.chapters[chapter] = 1
	return entry	
end

--Update a journal entry by the strref/journalId
function updateJournalEntry(journalId, recvTime, stateType, chapter, timeStamp)
	if(stateType == const.ENTRY_TYPE_USER) then
		local entry = buildEntry(journalId, recvTime, stateType, chapter, timeStamp)
		table.insert(userNotes,entry)
		
		--update display data
		buildQuestDisplay()
		return
	end
	--find the quest that is parent to this entry.

	--NOTE this can be placed in a loop if there needs to be more than quest to an entry
	--this would just mean entryToQuest returns a table that we iterate over
	local questId = entryToQuest[journalId]
	if questId == nil then
		--add loose entries into the looseEntries table so they still get displayed.
		local entry = buildEntry(journalId, recvTime, stateType, chapter, timeStamp)
		table.insert(looseEntries,entry)
		
		--update display data
		buildQuestDisplay()
		return
	end

	local quest = quests[questId]
	if quest == nil then
		print("JOURNAL ERROR - no quest entry associated with questId "..questId)
		return
	end
	local previous = nil
	--traverse quest to find objective and entry
	for objIdx,objective in pairs(quest.objectives) do
		for entryIdx,entry in pairs(objective.entries) do
			if(entry.id == journalId) then
				--now we know where our quest, objective, and entry are
				--update quest, objective and entry appropriately
				entry.recvTime = recvTime
				entry.stateType = stateType
				if(not entry.chapters) then entry.chapters = {} end
				entry.chapters[chapter] = 1
				entry.timeStamp = timeStamp
				objective.entries[entryIdx] = entry
				
				objective.recvTime = recvTime
				if(not objective.chapters) then objective.chapters = {} end
				objective.chapters[chapter] = 1
				if(objective.stateType ~= const.ENTRY_TYPE_COMPLETE) then
					objective.stateType = stateType
				end
				quest.objectives[objIdx] = objective
				
				quest.recvTime = recvTime
				if(not quest.chapters) then quest.chapters = {} end
				quest.chapters[chapter] = 1
				if(quest.stateType ~= const.ENTRY_TYPE_COMPLETE) then
					quest.stateType = stateType
				end
				
				--mark any previous objective as complete
				if(entry.previous ~= nil) then
					for objIdx2,objective2 in pairs(quest.objectives) do
						for k, prevObj in pairs(entry.previous) do
							if(prevObj == objective2.text) then
								quest.objectives[objIdx2].stateType = const.ENTRY_TYPE_COMPLETE
							end
						end
					end
				end
				
				quests[questId] = quest
				
				--remove all in subgroup (except myself!)
				if(stateType == const.JOURNAL_STATE_COMPLETE and entry.subGroup) then
					for k,v in pairs(subGroups[entry.subGroup]) do
						if(v.id ~= entry.id) then
							removeJournalEntry(v.id)
						end
					end
				end
				
			end
		end
	end
	--sort the objectives.
	table.sort(quest.objectives,compareByRecvTime)
	
	--update display data
	buildQuestDisplay()
end
function checkEntryComplete(journalId, stateType)
	--Check if a journal entry is part of a quest that's already complete
	
	--If anything other than an unfinished entry return false.
	if(stateType ~= const.ENTRY_TYPE_INPROGRESS) then return false end
	
	--Check if my quest is marked complete.
	local questIndex = entryToQuest[journalId]
	if (quests[questIndex].stateType == const.ENTRY_TYPE_COMPLETE) then
		return 1
	else
		return 0
	end
end
--this should maybe be done recursively, but i kinda want direct control over each level
function buildQuestDisplay()
	--this is basically just a flatten
	questDisplay = {}
	journalDisplay = {}
	
	local journalEntries = {} --temp holding table for sorting the entries
	
	for k,quest in pairs(quests) do
		--skip inactive quests
		if(quest.stateType ~= nil and quest.stateType ~= const.ENTRY_TYPE_NONE) then
			quest.quest = 1 -- tell the renderer what type of entry this is
			table.insert(questDisplay, quest)
			local curQuestIdx = #questDisplay --we'll need to modify current quest with it's children, store a reference.
			local questChildren = {}
			for k2,objective in pairs(quest.objectives) do
				if(objective.stateType ~= const.ENTRY_TYPE_NONE) then
					objective.objective = 1
					objective.parent = curQuestIdx
					
					if(objective.stateType ~= const.ENTRY_TYPE_INFO) then
						--info entries should not go into quests
						table.insert(questDisplay, objective)
						table.insert(questChildren, #questDisplay)
					end
					
					local curObjectiveIdx = #questDisplay
					local objectiveChildren = {}
					for k3,entry in pairs(objective.entries) do
						entry.entry = 1
						
						entry.parent = curObjectiveIdx
						table.insert(questDisplay, entry)
						table.insert(objectiveChildren, #questDisplay)
					end
					questDisplay[curObjectiveIdx].children = objectiveChildren
				end
			end
			questDisplay[curQuestIdx].children = questChildren
		end
	end
	
	-- add the user entries to the journal display
	for k,entry in pairs(userNotes) do
		entry.entry = 1
		table.insert(journalEntries,entry)
	end
	
	--add the loose entries (entries without quests) to the journal display
	for k,entry in pairs(looseEntries) do
		entry.entry = 1
		table.insert(journalEntries,entry)
	end
	
		
	table.sort(journalEntries, compareByRecvTime)
	
	for k,entry in pairs(journalEntries) do
		local title  = {}
		title.title = 1
		title.text = entry.timeStamp
		title.chapters = entry.chapters
		table.insert(journalDisplay,title)
		table.insert(journalDisplay, entry)
	end
end
function questContainsSearchString(row)
	if(journalSearchString == nil or journalSearchString == "") then return 1 end --no search string, do nothing
	local text = Infinity_FetchString(questDisplay[row].text)
	if(string.find(string.lower(text),string.lower(journalSearchString))) then return 1 end -- string contains search string.
	if(questDisplay[row].children == nil) then return nil end --no children, does not contain search string.
	for k,v in pairs(questDisplay[row].children) do
		--Infinity_Log(v)
		if(containsSearchString(v)) then return 1 end -- one of children contains search string
	end
	return nil --does not contain search string
end
function containsChapter(tab, chapter)
	if(not tab) then return nil end
	return tab[chapter]
end
function entryEnabled(row)
	local rowTab =  questDisplay[row]
	if(rowTab == nil or rowTab.entry == nil or not containsChapter(rowTab.chapters,chapter)) then return nil end

	if(objectiveEnabled(rowTab.parent) and questDisplay[rowTab.parent].expanded) then return 1 else return nil end
end
function getEntryText(row)
	return questDisplay[row].timeStamp .. "\n" .. questDisplay[row].text
end

function objectiveEnabled(row)
	local rowTab =  questDisplay[row]
	if(rowTab == nil or rowTab.objective == nil or not containsChapter(rowTab.chapters,chapter)) then return nil end

	if(questEnabled(rowTab.parent) and questDisplay[rowTab.parent].expanded) then return 1 else return nil end
end
function getArrowFrame(row)
	if(questDisplay[row] == nil or (questDisplay[row].objective == nil and questDisplay[row].quest == nil)) then return "" end

	if(questDisplay[row].expanded) then
		return 0
	else
		return 1
	end
end
function getArrowEnabled(row)
	if(questDisplay[row].quest == nil and questDisplay[row].objective == nil) then return nil end
	if(questDisplay[row].objective and not objectiveEnabled(row)) then return nil end
	if(questDisplay[row].quest and not questEnabled(row)) then return nil end
	return 1
end

function getFinished(row)
	if(questDisplay[row].stateType == const.ENTRY_TYPE_COMPLETE) then return 1 else return nil end
end
function showObjectiveSeperator(row)
	local tab = questDisplay[row]
	if(objectiveEnabled(row) or entryEnabled(row)) then
		--seperator is enabled for objective or entry as long as the next thing is an objective.
		--search until we find something enabled or end of table.
		local idx = row + 1
		while(questDisplay[idx]) do
			if(objectiveEnabled(idx)) then
				return 1
			else 
				if(questEnabled(idx) or entryEnabled(idx)) then
					return nil
				end
			end
			idx = idx + 1
		end
	end
end


function getJournalTitleEnabled(row)
	return journalDisplay[row].title and containsChapter(journalDisplay[row].chapters,chapter) and journalContainsSearchString(row)
end
function getJournalTitleText(row)
	return journalDisplay[row].text
end
function getJournalEntryEnabled(row)
	return journalDisplay[row].entry and containsChapter(journalDisplay[row].chapters,chapter) and journalContainsSearchString(row)
end
function getJournalEntryText(row)
	local text = Infinity_FetchString(journalDisplay[row].text)
	if(text == nil or text == "") then
		text = journalDisplay[row].text
	end
	
	if(journalSearchString and journalSearchString ~= "") then
		--do the search string highlight
		text = highlightString(text, journalSearchString, "^0xFF0000FF")
	end
	
	return text
end
function getJournalDarken(row)
	local entry = journalDisplay[row]
	if(entry.title) then
		return (row == selectedJournal or row + 1 == selectedJournal)
	end
	if(entry.entry) then
		return (row == selectedJournal or row - 1 == selectedJournal)
	end
end
function journalContainsSearchString(row)
	if(journalSearchString == nil or journalSearchString == "") then return 1 end --no search string, do nothing
	local text = Infinity_FetchString(journalDisplay[row].text)
	if(text == "") then text = journalDisplay[row].text end --no stringref, use the text.
	if(string.find(string.lower(text),string.lower(journalSearchString))) then return 1 end -- string contains search string.
	
	--check if the corresponding row to this one contains the string.
	local pairText = nil
	if(journalDisplay[row].title) then
		--check the corresponding entry
		pairText = Infinity_FetchString(journalDisplay[row+1].text) or journalDisplay[row+1].text
		if(pairText == "") then pairText = journalDisplay[row+1].text end 
	else 
		if (journalDisplay[row].entry) then
			pairText = Infinity_FetchString(journalDisplay[row-1].text) or journalDisplay[row-1].text
			if(pairText == "") then pairText = journalDisplay[row-1].text end 
		end
	end
	if(string.find(string.lower(pairText),string.lower(journalSearchString))) then return 1 end -- pair string contains search string.
	
	return nil --does not contain search string
end
function dragJournal()
	local offsetX,offsetY,menuWidth,menuHeight = Infinity_GetMenuArea('JOURNAL')
	offsetX = offsetX + motionX
	offsetY = offsetY + motionY
	
	--clamping
	if(offsetX < 80) then
		offsetX = 80
	end
	if(offsetY < 0) then
		offsetY = 0
	end
	
	local screenWidth, screenHeight = Infinity_GetScreenSize()
	if(offsetX > screenWidth - 80 - menuWidth) then
		offsetX = screenWidth - 80 - menuWidth
	end
	if(offsetY > screenHeight - menuHeight) then
		offsetY = screenHeight - menuHeight
	end
	
	Infinity_SetOffset('JOURNAL', offsetX, offsetY)
end
function journalEntryClickable(selectedJournal)
	local entry = journalDisplay[selectedJournal]
	if(entry) then return true end
end
function getJournalEntryRef(selectedJournal)
	local entry = journalDisplay[selectedJournal]
	if(not entry) then return end
	if(entry.title) then
		return journalDisplay[selectedJournal + 1].text
	else
		return entry.text
	end
end
function getJournalBackgroundFrame()
	if(journalMode == const.JOURNAL_MODE_QUESTS) then
		return 0
	else
		return 1
	end
end
journalMode = const.JOURNAL_MODE_QUESTS
journalSearchString = ""

function EditAction()
	journalNoteEditRef = getJournalEntryRef(selectedJournal)
	journalNoteOld = Infinity_FetchString(journalNoteEditRef)
	if string.find(string.lower(journalNoteOld),string.lower(JFStrings.JF_Notes)) then
		journalNoteEdit = string.sub(journalNoteOld,string.len(JFStrings.JF_Notes)+3) .. '\n\n'
	elseif string.find(string.lower(journalNoteOld),string.lower(JFStrings.JF_Edited)) then
		journalNoteEdit = string.sub(journalNoteOld,string.len(JFStrings.JF_Edited)+3) .. '\n\n'
	else
		journalNoteEdit = journalNoteOld .. '\n\n'
	end
	journalMode = const.JOURNAL_MODE_EDIT
end
function OpenAll()
	for i=1,#questDisplay,1 do
		if questDisplay[i].expanded == nil then questDisplay[i].expanded = 1 end
	end
end
function CloseAll()
	for i=1,#questDisplay,1 do
		if questDisplay[i].expanded == 1 then questDisplay[i].expanded = nil end
	end
end
function CheckForOpenedQuests()
	QuestOpen = 0
	for i=1,#questDisplay,1 do
		if questDisplay[i].expanded == 1  then
			QuestOpen = 1
		end
	end
end
function findQuestPopUp()
	FindTitle = string.sub(FindTitle,1,15)
	for i=1,#questDisplay,1 do
		local rowTab =  questDisplay[i]
		local text = Infinity_FetchString(rowTab.text)
		if string.find(string.lower(text), string.lower(FindTitle)) then
			questDisplay[i].expanded = 1
			questDisplay[i+1].expanded = 1
			QFilter = 3
		end
	end
end
QFilter = 0

function highlightFilter(text)
	if QFilter == 0 and text == JFStrings.JF_All then
		return '^M' .. text .. '^-'
	elseif QFilter == 1 and text == JFStrings.JF_Active then
		return '^M' .. text .. '^-'
	elseif QFilter == 2 and text == JFStrings.JF_Completed then
		return '^M' .. text .. '^-'
	end
	return '^5' .. text .. '^-'
end
function questEnabled(row)
	if (QFilter==0) then
		return (questDisplay[row] and questDisplay[row].quest and containsChapter(questDisplay[row].chapters,chapter) and (#questDisplay[row].children > 0))
	elseif (QFilter==1) then
		if getFinished(row) then
		-- Do Nothing
		else
			return (questDisplay[row] and questDisplay[row].quest and containsChapter(questDisplay[row].chapters,chapter) and (#questDisplay[row].children > 0))
		end
	elseif (QFilter==2) then
		if getFinished(row) then
			return (questDisplay[row] and questDisplay[row].quest and containsChapter(questDisplay[row].chapters,chapter) and (#questDisplay[row].children > 0))
		end
	elseif (QFilter==3) then
		if questDisplay[row].expanded == 1  then
			return (questDisplay[row] and questDisplay[row].quest and containsChapter(questDisplay[row].chapters,chapter) and (#questDisplay[row].children > 0))
		else
			-- Do Nothing
		end
	end
end
function getQuestText(row)
	local rowTab =  questDisplay[row]
	if (rowTab == nil) then return nil end
	local text = Infinity_FetchString(rowTab.text)
	if(getFinished(row)) then
		text = "^E" .. text .. " (" .. t("OBJECTIVE_FINISHED_NORMAL") .. ")^-"
	end
	return text
end
function getObjectiveText(row)
	local rowTab =  questDisplay[row]
	if (rowTab == nil) then return nil end
	local text = rowTab.text
	if(text == "" or text == nil) then
		text = t("NO_OBJECTIVE_NORMAL")
		questDisplay[row].expanded = 1
	end
	return text
end

function getJournalEditedColours(text)
	if string.sub(text, 1, string.len(JFStrings.JF_Notes)-1) == string.sub(JFStrings.JF_Notes, 1, string.len(JFStrings.JF_Notes) - 1) then
		text = string.sub(text, string.len(JFStrings.JF_Notes)+1)
		if getJournalDarken(rowNumber) then
			text = "^$" .. JFStrings.JF_Notes .. "^-" .. text
		else	
			text = "^M" .. JFStrings.JF_Notes .. "^-" .. text
		end
	elseif string.sub(text, 1, string.len(JFStrings.JF_Edited)-1) == string.sub(JFStrings.JF_Edited, 1, string.len(JFStrings.JF_Edited) - 1) then
		text = string.sub(text, string.len(JFStrings.JF_Edited)+1)
		if getJournalDarken(rowNumber) then
			text = "^$" .. JFStrings.JF_Edited .. "^-" .. text
		else	
			text = "^M" .. JFStrings.JF_Edited .. "^-" .. text
		end
	end
	return text
end

function getJournalFrame(text)
	str = string.find(text, "\n")
	if str == nil then return 0
	else return 1
	end
end
`
menu
{
	name 'JOURNAL'
	align left top
	offset 80 0
	ignoreEsc
	onopen
	"
		buildQuestDisplay()
		chapter = math.max(0,Infinity_GetMaxChapterPage())
		QFilter = 1
		questOpened = 0
		journalOpen = 1
		computeSplitPosition(chapterText(), 'ChapterJournalSplit')
	"
	onclose
	"
		journalOpen = 0
	"
	label --background background
	{
		area 		0 0 501 756
		mosaic		"QUESTBAK"
	}
	label --Background
	{
		area		0 0 485 747
		bam			"QUESTBG"
		sequence	0
		frame lua	"getJournalBackgroundFrame()"
	}
	handle
	{
		area		0 0 472 80
		actionDrag
		"
			dragJournal()
		"
	}
	button
	{
		area		218 18 136 42
		text		"JOURNAL_LABEL"
		text style	"label_parchment"
		text point	18
		action
		"
			CloseAll()
			CheckForOpenedQuests()
			journalMode = const.JOURNAL_MODE_JOURNAL			
			Infinity_PlaySound('GAM_06')
		"
	}
	button
	{
		area		34 18 136 42
		text		"QUESTS_LABEL"
		text style	"label_parchment"
		text point	18
		action
		"
			CloseAll()
			CheckForOpenedQuests()
			journalMode = const.JOURNAL_MODE_QUESTS			
			Infinity_PlaySound('GAM_06')
		"
	}
	button
	{
		area		84 140 118 35
		enabled		"journalMode == const.JOURNAL_MODE_QUESTS"
		text lua	"highlightFilter(t(JFStrings.JF_All))"
		text style	"label_parchment"
		text point 13
		action
		"
			CloseAll()
			CheckForOpenedQuests()
			QFilter = 0
		"
	}
	button
	{
		area		202 140 118 35
		enabled		"journalMode == const.JOURNAL_MODE_QUESTS"
		text lua	"highlightFilter(t(JFStrings.JF_Active))"
		text style	"label_parchment"
		text point 13
		action
		"
			CloseAll()
			CheckForOpenedQuests()
			QFilter = 1
		"
	}
	button
	{
		area		320 140 120 35
		enabled		"journalMode == const.JOURNAL_MODE_QUESTS"
		text lua	"highlightFilter(t(JFStrings.JF_Completed))"
		text style	"label_parchment"
		text point 13
		action
		"
			CloseAll()
			CheckForOpenedQuests()
			QFilter = 2
		"
	}
	button
	{
		area		421 17 28 26
		on esc
		bam GUIOSW
		ScaleToClip
		sequence 2
		on escape
		action 
		"
			e:GetActiveEngine():OnLeftPanelButtonClick(2)
		"
	}
	label
	{
		name "ChapterJournalSplit"
		enabled "false"
		area		0 0 70 36
		text lua "chapterText():sub(startPos, curPos)"
		text style "normal_parchment"
	}
	list -- Chapter
	{
		column
		{
			width 100
			label
			{
				enabled "rowNumber == 1"
				area 0 0 40 38
				bam INITIALS
				sequence lua "chapterText():byte(startPos - 1) - 1"
			}
			label
			{
				enabled "rowNumber == 1"
				area 44 0 -1 -1
				text lua "chapterText():sub(startPos, splitPos +10 )"
				text style "parchment"
				text point 14
				text useFontZoom   0
			}
			label
			{
				enabled "rowNumber == 2"
				area 0 0 -1 -1
				text lua "chapterText():sub(splitPos + 1)"
				text style "parchment"				
				text useFontZoom   0
			}
		}
		enabled "splitPos ~= -1"
		rowheight dynamic
		hidehighlight
		table "makeTable(2)"
		area		80 88 220 42
	}
	text
	{
		enabled "splitPos == -1"
		area		80 88 220 42
		text lua "chapterText()"
		text style "normal_parchment"
	}
	button --prev chapter
	{
		area		273 82 60 34
		bam 		"PARROW"
		scaleToClip
		sequence 	0
		frame lua "getMovingFrame('journalToTheLeft')==1 and 1 or 0"
		action
			"
				incrChapter(-1)
				Infinity_PlaySound('GAM_06')
			"	
	}
	button
	{
		on A
		action
		"
				incrChapter(-1)
				Infinity_PlaySound('GAM_06')
				getClick(Infinity_GetFrameCounter(), 'journalToTheLeft')
		"
	}
	button
	{
		area		343 88 60 34
		bam 		"PARROW"
		scaleToClip
		sequence 	1
		frame lua "getMovingFrame('journalToTheRight')==1 and 1 or 0"
		action
		"
				incrChapter(1)
				Infinity_PlaySound('GAM_06')
		"	
	}
	button
	{
		on D
		action
		"
				incrChapter(1)
				Infinity_PlaySound('GAM_06')
				getClick(Infinity_GetFrameCounter(), 'journalToTheRight')
		"
	}
	label
	{
		enabled 	"journalMode == const.JOURNAL_MODE_JOURNAL"
		area		44 175 382 29
		fill		50 50 50 150
	}
	edit
	{
		enabled		"journalMode == const.JOURNAL_MODE_JOURNAL"
		area		62 180 357 20
		var 		journalSearchString
		placeholder	"ENTER_SEARCH_TERM_NORMAL"
		text style	"edit"
		maxlines 	1
	}
	
	
	list  -- quests
	{
		column
		{
			width 10
			label
			{
				area				0 0 31 31
				enabled				"getArrowEnabled(rowNumber)"
				bam					"PCHEV"
				frame lua			"getArrowFrame(rowNumber)"
				text style			"label_parchment"
				align				top center
			}
		}
		column
		{ 
			width 90 
			label
			{
				enabled 			"questEnabled(rowNumber) and ticksStarting == 0 or questEnabled(rowNumber) and rowSelected ~= rowNumber"
				area				0 0 -1 -1
				bam "JOURSEP"
				frame lua  "getJournalFrame(getQuestText(rowNumber))"
				useOverlayTint "getFinished(rowNumber)"
				overlayTint 150 150 150
				respectClipping
				--fill 0 0 0 255
			}
			label --clicked
			{
				enabled 			"questEnabled(rowNumber) and ticksStarting ~= 0 and rowSelected == rowNumber"
				area				2 2 -1 -1
				bam "JOURSEP"
				frame lua  "getJournalFrame(getQuestText(rowNumber))"
				useOverlayTint "getFinished(rowNumber)"
				overlayTint 150 150 150
				respectClipping
				--fill 0 0 0 255
			}
			label
			{	
				enabled 			"questEnabled(rowNumber) and ticksStarting == 0 or questEnabled(rowNumber) and rowSelected ~= rowNumber"
				area				8 0 -1 -1
				text lua			"getQuestText(rowNumber)"
				text style			"normal"
				pad 5 4 0 10
				align				left center
			}
			label --clicked
			{	
				enabled 			"questEnabled(rowNumber) and ticksStarting ~= 0 and rowSelected == rowNumber"
				area				10 2 -1 -1
				text lua			"getQuestText(rowNumber)"
				text style			"normal"
				pad 5 4 0 8
				align				left center
			}
			label
			{
				enabled				"objectiveEnabled(rowNumber)"
				area				16 0 -1 -1
				pad					0 10 0 10
				text lua			"getObjectiveText(rowNumber)"
				text style			"normal_parchment"
				text color			0 0 0 255
			}
			label
			{
				enabled				"entryEnabled(rowNumber)"
				area				16 0 -1 -1
				pad					0 10 0 10
				text lua			"getEntryText(rowNumber)"
				text style			"normal_parchment"
				text color			'M'
			}
		}
		enabled		"journalMode == const.JOURNAL_MODE_QUESTS"
		rowheight	dynamic
		hidehighlight
		seperator	"showObjectiveSeperator(rowNumber)"
		table		"questDisplay"
		var			selectedQuest
		scrollbar	'GUISCRCW'
		area		44 174 396 490
		action
		"
			if(questDisplay[selectedQuest].expanded) then 
				questDisplay[selectedQuest].expanded = nil
			else
				questDisplay[selectedQuest].expanded = 1
			end
			CheckForOpenedQuests()
			ticksPassed = 0
			ticksStarting = 0
			"
			actionAlt 
			"
			if(questDisplay[selectedQuest].expanded) then 
				CloseAll()
			else
				OpenAll()
			end
			ticksPassed = 0
			ticksStarting = 0
			"
			actionUpdate 
			"	
			ticksStarting = ticksStarting + 1
			if ticksStarting > 10 then
				ticksPassed = ticksPassed + 1
				if ticksPassed > 3 then
					ticksPassed = 0
				end
			end
			"
	}
	
	
	list --journal
	{
		column
		{
			width 100
			--light
			label
			{
				enabled 		"(getJournalTitleEnabled(rowNumber) or getJournalEntryEnabled(rowNumber)) and not getJournalDarken(rowNumber)"
				area 			0 0 -1 -1
				fill 			0 0 0 10
			}
			label
			{
				enabled 		"getJournalTitleEnabled(rowNumber) and not getJournalDarken(rowNumber)"
				area			0 0 -1 -1
				pad				0 16 0 0
				text lua		"getJournalTitleText(rowNumber)"
				text style		"label_parchment"
				text color		76 66 46 255
			}
			label
			{
				enabled 		"getJournalEntryEnabled(rowNumber) and not getJournalDarken(rowNumber)"
				area			0 0 -1 -1
				pad				8 16 0 16
				text lua		"getJournalEditedColours(getJournalEntryText(rowNumber))"
				text style		"normal_parchment"
			}
			--dark
			label
			{
				enabled			"(getJournalTitleEnabled(rowNumber) or getJournalEntryEnabled(rowNumber)) and getJournalDarken(rowNumber)"
				area			0 0 -1 -1
				fill			0 0 0 150
			}
			label
			{
				enabled			"getJournalTitleEnabled(rowNumber) and getJournalDarken(rowNumber)"
				area			0 0 -1 -1
				pad				0 16 0 0
				text lua		"getJournalTitleText(rowNumber)"
				text style		"label_parchment"
				text color		255 100 100 255
			}
			label
			{
				enabled			"getJournalEntryEnabled(rowNumber) and getJournalDarken(rowNumber)"
				area			0 0 -1 -1
				pad				8 16 0 16
				text lua		"getJournalEditedColours(getJournalEntryText(rowNumber))"
				text style		"normal_parchment"
				text color		'B'
			}
		}
		enabled		"journalMode == const.JOURNAL_MODE_JOURNAL"
		seperator	"getJournalEntryEnabled(rowNumber)"
		rowheight	dynamic
		hidehighlight
		table		"journalDisplay"
		var			selectedJournal
		scrollbar	'GUISCRCW'
		area		44 208 396 488
		actionDbl
		"
			EditAction()
		"
	}
	button
	{
		enabled			"journalMode == const.JOURNAL_MODE_JOURNAL"
		area			44 140 132 35
		text			"ADD_ENTRY_LABEL"
		text style		"label_parchment"
		action 
		"
			journalMode = const.JOURNAL_MODE_EDIT
			journalNoteEdit = ''
			journalNoteEditRef = nil
		"
	}
	button
	{
		enabled			"journalMode == const.JOURNAL_MODE_JOURNAL"
		clickable lua	"journalEntryClickable(selectedJournal)"
		area 			176 140 132 35
		text			"EDIT_ENTRY_LABEL"
		text style		"label_parchment"
		action
		"
			EditAction()
		"
	}
	button
	{
		enabled			"journalMode == const.JOURNAL_MODE_JOURNAL"
		area			308 140 132 35
		sequence		1
		text lua		"string.sub(JFStrings.JF_Notes,1,string.len(JFStrings.JF_Notes)-1)"
		text style		"label_parchment"
		action 
		"
			if journalSearchString == JFStrings.JF_Notes then
				journalSearchString = ''
			else
				journalSearchString = JFStrings.JF_Notes
			end
		"
	}
	label
	{
		enabled			"journalMode == const.JOURNAL_MODE_EDIT"
		area			58 154 382 26
		text style		"normal_parchment"
		text			"WRITE_ENTRY_TEXT"
	}
	label
	{
		enabled			"journalMode == const.JOURNAL_MODE_EDIT"
		area			58 200 382 4
		fill			10 71 1 255
	}
	label
	{
		enabled			"journalMode == const.JOURNAL_MODE_EDIT"
		area			58 204 382 26
		text style		"label"
		text color		0 120 0 255
		text lua		"Infinity_GetTimeString()"
	}
	edit
	{
		enabled			"journalMode == const.JOURNAL_MODE_EDIT"
		area			58 230 382 411
		text style		"edit_parchment"
		var				journalNoteEdit
		scrollbar		'GUISCRCW'
	}
	button
	{
		enabled			"journalMode == const.JOURNAL_MODE_EDIT"
		area			58 641 162 47
		bam				"PAPERBUT"
		sequence		1
		text			"CANCEL_BUTTON"
		text style		"button_parchment"
		action 
		"
			journalMode = const.JOURNAL_MODE_JOURNAL
		"
	}
	button
	{
		enabled "journalMode == const.JOURNAL_MODE_EDIT"
		area 278 641 162 47
		bam "PAPERBUT"
		sequence 1
		text "DONE_BUTTON"
		text style "button_parchment"
		action 
		"
			if (journalNoteEditRef == nil) then
				journalNoteEdit = JFStrings.JF_Notes .. '\n\n' .. journalNoteEdit .. '\n - ' .. Infinity_GetTimeString()
				Infinity_OnAddUserEntry(journalNoteEdit)
			else
				if string.find(string.lower(journalNoteOld),string.lower(JFStrings.JF_Notes)) then
					journalNoteEdit = JFStrings.JF_Notes .. '\n\n' .. journalNoteEdit .. '\n - ' .. Infinity_GetTimeString()
				else
					journalNoteEdit = JFStrings.JF_Edited .. '\n\n' .. journalNoteEdit .. '\n - ' .. Infinity_GetTimeString()
				end
				Infinity_OnEditUserEntry(journalNoteEditRef, journalNoteEdit)
			end
			journalMode = const.JOURNAL_MODE_JOURNAL
		"
	}
	button
	{
		enabled 	"journalMode == const.JOURNAL_MODE_EDIT and string.find(string.lower(journalNoteOld),string.lower(JFStrings.JF_Notes))"
		area 		400 204 30 26
		text 		"X"
		text style 	"button_parchment"
		text align 	center center
		text color	R
		action 
		"
			journalNoteEditRef = getJournalEntryRef(selectedJournal)
			journalNoteOld = Infinity_FetchString(journalNoteEditRef)
			
			if string.find(string.lower(journalNoteOld),string.lower(JFStrings.JF_Notes)) then
				journalNoteEditRef = getJournalEntryRef(selectedJournal)
				journalNoteEdit = ''
			end
			Infinity_OnEditUserEntry(journalNoteEditRef, journalNoteEdit)
			journalMode = const.JOURNAL_MODE_JOURNAL
		"
	}
}
menu
{
	name 'JOURNAL_RECENT_EVENTS'
	align center center
	modal
	label
	{
		area 0 0 520 568
		mosaic GUICHISE
	}
	label
	{
		area 16 10 454 42
		text "RECENT_EVENTS_TITLE"
		text style 'label'
		text align left center
		text point 22
		text shadow 1
	}
	text
	{
		area 26 68 472 370
		text "Recent events text will go here."
		text style "normal"
		scrollbar 'GUISCRC'
	}
	button
	{ 
		on escape
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		area 308 494 162 30
		text		"DONE_BUTTON"
		text style	'button'
		action
		"
			Infinity_PopMenu('JOURNAL_RECENT_EVENTS')
		"
	}
}
`
function processQuestsWithStyle()
	out = ""
	for k,v in pairs(quests_old) do
		local questStrref = v[3]
		out = out .. "createQuest    ( " .. questStrref .. " )\n"
		
		for k2,v2 in pairs(journals_quests_old) do
			if(v2[2] == k) then
				local subgroup = v2[const.ENTRIES_IDX_SUBGROUP]
				if(subgroup == 0) then subgroup = "nil" end
				out = out .. "createEntry    ( " .. questStrref .. ", -1, " .. v2[1] .. ", {}, " .. subgroup .." )\n"
			end
		end
	end
	Infinity_Log(out)
end
`
menu
{
	name 'MESSAGE_SCREEN'
	align center center
	label
	{
		area 0 0 380 140
		mosaic GUIERR
	}
	label
	{
		area 30 30 323 69
		text lua "Infinity_FetchString(messageScreenText)"
		text style	"normal"
	}
}
`
megacredits = ''
epilogueImage = "GUIOSTUR"
`
menu
{
	name 'EPILOGUE'
	align center center
	ignoreEsc
	onOpen 
	"
		generateMegaCredits()
		TT_BuildTitleData('EXPANSION_LABEL', 656, true)
		TT_CreateTitleChars('EXPANSION_LABEL', 'TT_EPILOGUE', 45, 'TEMPLATE_titlechar_EPILOGUE')
	"
	onClose	"TT_DestroyTitleChars('EXPANSION_LABEL', 'TEMPLATE_titlechar_EPILOGUE')"
	label
	{
		area 0 0 1024 768
		mosaic "NPCCHAP"
	}
	template
    {
        label
        {
            enabled "true"
            ignoreEvents
            area 0 0 -1 -1
            bam "TTREALMS"
            sequence lua "TT_TitleData['EXPANSION_LABEL'][instanceId].seq"
            align center center
        }
        name "TEMPLATE_titlechar_EPILOGUE"
    }
	label
    {
        name "TT_EPILOGUE"
		area 186 55 656 45
		--text "EXPANSION_LABEL"
		--text style "title"
    }
	label
	{
		area 79 241 249 390
		mosaic lua "epilogueImage"
	}
	text
	{
		name "text_CHAPTERSCROLL_item"
		area 418 216 574 430
		text lua "megacredits"
		text style normal
		text align center top
		scrollbar 'GUISCRC'
		scrollbar func 'UpdateChapterScroll'
		scrollbar hide lua 'text_CHAPTERSCROLL_auto == 1'
		action
		"
			text_CHAPTERSCROLL_auto = 0
		"
	}
	button
	{
		area 810 703 152 30
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text "DONE_BUTTON"
		text style "button"
		text shadow 1
		clickable lua "chapterScreen:IsDoneButtonClickable()"
		action
		"
			megacredits = ''
			chapterScreen:OnDoneButtonClick()
		"
	}
	button
	{
		area 618 703 152 30
		bam GUIWPKPC
		ScaleToClip
		sequence 1
		text "REPLAY_BUTTON"
		text style "button"
		text shadow 1
		clickable lua "chapterScreen:IsReplayButtonClickable()"
		action
		"
			chapterScreen:OnReplayButtonClick()
		"
	}
}
`
function getDLCDescription()
	return Infinity_FetchString(dlcScreen:GetDLCDescription())
end
function getDLCTitle()
	return Infinity_FetchString(dlcScreen:GetDLCTitle())
end
function getDLCIndex()
	return dlcScreen:GetDLCIndex() .. "/" .. dlcScreen:GetDLCCount()
end
function isDLCBuyButtonClickable()
	local isBought = dlcScreen:GetDLCBought()
	return isBought == false
end

function setDLCPurchased(index, purchaseLevel)
	purchasedDLC[index] = purchaseLevel;
end
`
menu
{
	name 'START_DLC'
	align center center

	label
	{
		area 0 0 1024 768
		mosaic 'GUIDLC'
	}

	label
	{
		area	60 0 906 566
		text		"STRREF_GUI_LOWER_DLC_STORE"
		text style  'title'
		text align	center center
	}

	label
	{
		area	588 568 326 488
		text lua	"getDLCIndex()"
		text style  'title'
		text align	center center
	}

	label
	{
		area	576 132 348 544
		text lua	"getDLCTitle()"
		text style  'title'
		text align	center center
	}
		
	text
	{
		area	588 228 326 3344
		text lua	"getDLCDescription()"
		text style  'normal'
		scrollbar	'GUISCRC'		
	}
	
	label
	{
		area 154 92 362 568
		bitmap lua "dlcScreen:GetDLCImage()"
	}

	button 
	{
		bam 'GUIPRC'
		sequence 0
		area 22 274 56 140
		align center center
		action 
		"
			dlcScreen:DecrementDLCIndex()
		"
	}

	button 
	{
		bam 'GUIPRC'
		sequence 1
		area 946 270 52 140
		align center center
		action 
		"
			dlcScreen:IncrementDLCIndex()
		"
	}

	button 
	{
		on escape
		bam 'GUIBUTNT'
		sequence 0
		area 316 713 200 40
		align center center
		text style "button"
		text shadow 1
		text "BACK_BUTTON"
		action 
		"
			dlcScreen:OnDoneButtonClick()
		"
	}

	button 
	{
		bam 'GUIBUTNT'
		frame 3
		area 526 713 200 40
		align center center
		text style "button"
		text shadow 1
		text "STRREF_GUI_DLC_INSTALLED"
		text color '5'
		enabled "not isDLCBuyButtonClickable()"
		action 
		"
			dlcScreen:OnBuyButtonClick()
		"
	}

	button 
	{
		bam 'GUIBUTNT'
		sequence 2
		area 526 713 200 40
		align center center
		text style "button"
		text shadow 1
		text "BUY_BUTTON"
		enabled "isDLCBuyButtonClickable()"
		action 
		"
			dlcScreen:OnBuyButtonClick()
		"
	}

	button 
	{
		bam 'GUIBUTWT'
		sequence 2
		area 600 648 298 40
		align center center
		text style "button"
		text shadow 1
		text "STRREF_GUI_DLC_RESTORE_PURCHASES"
		action 
		"
			dlcScreen:RestorePurchases()
		"
	}
}

`
dlcStatusDescriptionText = ""
dlcStatusButtonText = ""
dlcStatusState = 0

DLC_STATE_WAITING = 0
DLC_STATE_IN_PROGRESS = 1
DLC_STATE_SUCCESS = 2
DLC_STATE_FAILED = 3
DLC_STATE_CANCELLED = 4
DLC_STATE_RESTORING_PURCHASES = 5
DLC_STATE_RESTORING_PURCHASES_COMPLETE = 6
DLC_STATE_DOWNLOADING = 7

function checkDLCState()
	dlcStatusState = dlcScreen:GetDLCState()
	if dlcStatusState == DLC_STATE_WAITING then
		dlcStatusDescriptionText = t("STRREF_GUI_DLC_WAITING")
		dlcStatusButtonText = t("BACK_BUTTON")
	elseif dlcStatusState == DLC_STATE_IN_PROGRESS then
		dlcStatusDescriptionText = t("STRREF_GUI_DLC_IN_PROGRESS")
		dlcStatusButtonText = t("BACK_BUTTON")
	elseif dlcStatusState == DLC_STATE_SUCCESS then
		dlcStatusDescriptionText = t("STRREF_GUI_DLC_SUCCESS")
		dlcStatusButtonText = t("CONTINUE_BUTTON")
	elseif dlcStatusState == DLC_STATE_FAILED then
		dlcStatusDescriptionText = t("STRREF_GUI_DLC_FAILED")
		dlcStatusButtonText = t("CONTINUE_BUTTON")
	elseif dlcStatusState == DLC_STATE_CANCELLED then
		dlcStatusDescriptionText = t("STRREF_GUI_DLC_CANCELLED")
		dlcStatusButtonText = t("CONTINUE_BUTTON")
	elseif dlcStatusState == DLC_STATE_RESTORING_PURCHASES then
		dlcStatusDescriptionText = t("STRREF_GUI_DLC_RESTORING_PURCHASES")
		dlcStatusButtonText = t("BACK_BUTTON")
	elseif dlcStatusState == DLC_STATE_RESTORING_PURCHASES_COMPLETE then
		dlcStatusDescriptionText = t("STRREF_GUI_DLC_RESTORING_PURCHASES_COMPLETE")
		dlcStatusButtonText = t("CONTINUE_BUTTON")
	elseif dlcStatusState == DLC_STATE_DOWNLOADING then
		dlcScreen:GetDownloadString()
		dlcStatusButtonText = ""
	else
		dlcStatusDescriptionText = "WAFFLES_Dont Know How We Got Here_WAFFLES"
		dlcStatusButtonText = "WAFFLES_WAFFLES_WAFFLES"
	end
end

function getDLCStatusText()
	checkDLCState()
	return dlcStatusDescriptionText
end
`
menu
{
	name 'START_DLC_STATUS'
	align center center

	label
	{
		area 0 0 380 212
		mosaic GUIERR1B
	}
	label
	{
		area 20 20 340 80
		text lua "getDLCStatusText()"
		text style	"normal"
		text align center center
	}
	button 
	{
		area		108 136 162 32
		bam			GUIWPKPC
		ScaleToClip
		sequence	1
		align center center
		text style "button"
		text shadow 1
		text lua "dlcStatusButtonText"
		enabled "dlcStatusState ~= DLC_STATE_DOWNLOADING"
		action 
		"
			dlcScreen:OnErrorButtonClick();
		"
	}
}
`	
	dialogTable = {}
	dialogOverflowTable = {}
	hasDialogResponse = nil
	
	chatboxScrollToBottom = nil
	chatboxScrollTimeLast = 0
	chatboxContentHeight = 0
	chatboxOverflowed = nil
	chatboxJumpToBottom = nil
	
	-- The following two values determine how many item entries can exist.  We trim 
	-- the number of entries to numDialogTrimEntries once it has overflowed that value
	-- by numDialogOverflowLimit.
	numDialogTrimEntries = 512
	numDialogOverflowEntries = numDialogTrimEntries + 128
	
	lastTrimmedContentHeight = 0
	
	function getNumDialogTableEntries()
		local count = 0
		for _ in pairs(dialogTable) do count = count + 1 end
		return count
	end
	
	function trimDialogTableSize()
		local  numTableEntries = getNumDialogTableEntries()
		if (numTableEntries > numDialogOverflowEntries) then
			local numEntriesToRemove = numTableEntries - numDialogTrimEntries
			while (numEntriesToRemove > 0) do
				-- Get our table entry and calculate its size
				local tableEntry = dialogTable[1]
				local delta = Infinity_GetContentHeight(styles.normal.font, w, tableEntry.text, styles.normal.point, 1, styles.normal.useFontZoom) --1 for indent.
				chatboxContentHeight = chatboxContentHeight - delta
				lastTrimmedContentHeight = lastTrimmedContentHeight + delta
					
				table.remove(dialogTable, 1)
				numEntriesToRemove = numEntriesToRemove - 1
			end
		end
	end
	
	function buildResponsesList()

		hasDialogResponse = nil
		dialogResponses = {}
		for k,v in pairs(worldPlayerDialogChoices) do
			if v.marker then
				table.insert(dialogResponses, v)
				hasDialogResponse = 1
			end
		end
	end
	function canShowDialogButton(num)
		-- Show the buttons if we have a response, and the dialog button is not enabled
		return dialogResponses and dialogResponses[num] ~= nil and showDialogButtonChoices()
	end
	
	function addDialogMessage(text,marker,makeTop)
		local tab = {}
		tab.text = text
		tab.marker = marker
		if(marker) then 
			dialogViewMode = nil
			if(text == "") then
				--empty markers are a signal, we shouldn't actually display them.
				if(makeTop == true) then
					--we'll ensure the next line is included in the visible content.
					chatboxContentHeight = 0
				end
				return
			else
				hasDialogResponse = 1
			end
		end
		
		--Calculate running total of dialog content height
		local x,y,w,h = Infinity_GetArea("worldPlayerDialogChoicesList")
		w = w - 18 --account for scrollbar influence on width
		local delta = Infinity_GetContentHeight(styles.normal.font, w, text, styles.normal.point, 1, styles.normal.useFontZoom) --1 for indent.
		chatboxContentHeight = chatboxContentHeight + delta
		
		if(marker and chatboxContentHeight > h) then
			--More to display than we have room for, put the responses in overflow and hide them behind button
			table.insert(dialogOverflowTable,tab)
		else
			table.insert(dialogTable,tab)
		end
		
		if(makeTop == true) then
			--we'll ensure the next line is included in the visible content.
			chatboxContentHeight = 0
		end
		
		trimDialogTableSize()
		
		triggerChatboxScroll()
		
		buildResponsesList()
	end
	function clearDialogResponses()
		for k,v in pairs(dialogTable) do
			if(v.marker) then
				table.remove(dialogTable,k)
				clearDialogResponses()
			end
		end
		hasDialogResponse = nil
		chatboxOverflowed = nil
		chatboxContentHeight = 0
		dialogOverflowTable = {}
	end
	function dialogEntrySelectable(row)
		return (dialogTable[row].marker ~= nil)
	end
	function showDialogButtonChoices()
		return not (not hasDialogResponse or dialogViewMode or #dialogOverflowTable > 0)
	end
	function getResponsePickable()
		return not hasDialogResponse or dialogViewMode or (gameOptions.m_bConfirmDialog == true)
	end
	function getDialogButtonText()
		if(dialogViewMode) then
			return t("DONE_BUTTON")
		end
		
		if(#dialogOverflowTable > 0) then
			return t("SHOW_MORE_RESPONSES_BUTTON")
		end
		
		if(gameOptions.m_bConfirmDialog == true) then
			return t("CHOOSE_RESPONSE_BUTTON")
		end
		
		return dialogButtonText
	end
	function triggerChatboxScroll()
		chatboxScrollToBottom = 1
		chatboxScrollTimeLast = Infinity_GetClockTicks()
	end
	function chatboxScroll(top, height, contentHeight)
		if(chatboxJumpToBottom and contentHeight > height) then
			chatboxJumpToBottom = nil
			return height-contentHeight
		end
		if(chatboxScrollToBottom == 0) then
			--defer to default scrolling
			return nil
		end
		if(contentHeight < height) then
			--no scrolling required, content fits
			chatboxScrollToBottom = nil
			return nil
		end
		local dT = Infinity_GetClockTicks() - chatboxScrollTimeLast
		chatboxScrollTimeLast = Infinity_GetClockTicks()
		top = top + lastTrimmedContentHeight
		lastTrimmedContentHeight = 0
		local newTop = (dT * -0.25) + top
		if (newTop + contentHeight > height + 200) then
			return (height - contentHeight + 200)
		end
		if(newTop + contentHeight < height) then
			chatboxScrollToBottom = 0
			return height - contentHeight
		end
		return newTop
	end
	function displayOverflowResponses()
		for k,v in pairs(dialogOverflowTable) do
			table.insert(dialogTable,v)
		end
		dialogOverflowTable = {}
		triggerChatboxScroll()
		buildResponsesList()
	end
	function GetFirstMarkedResponse()
		for k,v in pairs(dialogTable) do
			if v.marker ~= nil then
				return k
			end
		end
		return -1	
	end
	function onDialogButtonClick()
		if(dialogViewMode) then
			--In dialog view mode this button closes the menu.
			worldScreen:StopDialogHistory()
			return
		end
		
		if(#dialogOverflowTable > 0) then
			displayOverflowResponses()
			return
		end

		if(gameOptions.m_bConfirmDialog == true and hasDialogResponse) then
			-- if confirm dialog and choices available.
			worldScreen:OnDialogReplyClick(dialogTable[worldPlayerDialogSelection].marker)
			worldPlayerDialogSelection = 0
			return
		else
			-- no choices, just step.
			worldScreen:StepDialog()
		end
	end
	function getDialogRowClickable(row)
		return dialogTable[row].marker ~= nil
	end
	function isTouchActionbar()
		--Make this read from an option to make it easy to switch out.
		local default = 0
		if(e:IsTouchUI()) then default = 1 end
		local val = Infinity_GetINIValue('Program Options', 'Use Touch Actionbar', default)
		if (val ~= 0) then
			return 1
		else
			return nil
		end
	end
`
menu
{
	name 'WORLD_DIALOG_LEFT'
	align left center
	ignoreEsc
	--ignoreFocus 1
	onOpen
	"
		Infinity_PushMenu('WORLD_DIALOG_LEFT_BUTTONS')
	"
	onClose
	"
		Infinity_PopMenu('WORLD_DIALOG_LEFT_BUTTONS')
	"
	label
	{
		area 0 0 80 1536
		mosaic GUIWLSP
	}
}
menu
{
	name 'WORLD_DIALOG_LEFT_BUTTONS'
	align left center
	ignoreEsc
	--ignoreFocus 1
	label
	{
		area 0 0 85 780
		rectangle 4
	}
	button
	{
		area 15 25 54 54
		bam CBUTT
		scaleToClip
		text lua "'...'"
		text style "button"
		text shadow 1
		pad -3 -6 0 0
		enabled "not showDialogButtonChoices()"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			onDialogButtonClick()
		"
	}

	button
	{
		area 15 25 54 54
		bam CBUTT
		scaleToClip
		text lua "'1'"
		text style "button"
		text shadow 1
		pad -3 -6 0 0
		enabled "canShowDialogButton(1)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[1].marker)
		"
	}
	button
	{
		area 15 100 54 54
		bam CBUTT
		scaleToClip
		text lua "'2'"
		text style "button"
		text shadow 1
		pad -3 -6 0 0
		enabled "canShowDialogButton(2)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[2].marker)
		"
	}
	button
	{
		area 15 175 54 54
		bam CBUTT
		scaleToClip
		text lua "'3'"
		text style "button"
		text shadow 1
		pad -3 -6 0 0
		enabled "canShowDialogButton(3)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[3].marker)
		"
	}
	button
	{
		area 15 250 54 54
		bam CBUTT
		scaleToClip
		text lua "'4'"
		text style "button"
		text shadow 1
		pad -3 -6 0 0
		enabled "canShowDialogButton(4)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[4].marker)
		"
	}
	button
	{
		area 15 325 54 54
		bam CBUTT
		scaleToClip
		text lua "'5'"
		text style "button"
		text shadow 1
		pad -3 -6 0 0
		enabled "canShowDialogButton(5)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[5].marker)
		"
	}
	button
	{
		area 15 400 54 54
		bam CBUTT
		scaleToClip
		text lua "'6'"
		text style "button"
		text shadow 1
		pad -3 -6 0 0
		enabled "canShowDialogButton(6)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[6].marker)
		"
	}
	button
	{
		area 15 475 54 54
		bam CBUTT
		scaleToClip
		text lua "'7'"
		text style "button"
		text shadow 1
		pad -3 -6 0 0
		enabled "canShowDialogButton(7)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[7].marker)
		"
	}

	button
	{
		area 15 550 54 54
		bam CBUTT
		scaleToClip
		text lua "'8'"
		text style "button"
		text shadow 1
		pad -3 -6 0 0
		enabled "canShowDialogButton(8)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[8].marker)
		"
	}

	button
	{
		area 15 625 54 54
		bam CBUTT
		scaleToClip
		text lua "'9'"
		text style "button"
		text shadow 1
		pad -3 -6 0 0
		enabled "canShowDialogButton(9)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[9].marker)
		"
	}
	button
	{
		area 15 700 54 54
		bam CBUTT
		scaleToClip
		text lua "'10'"
		text style "button"
		text shadow 1
		pad -3 -6 0 0
		enabled "canShowDialogButton(10)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[10].marker)
		"
	}
}
menu
{
	name 'WORLD_DIALOG_RIGHT'
	align right center
	ignoreEsc
	--ignoreFocus 1
	enabled "canShowDialogButton(11)"
	onOpen
	"
		Infinity_PushMenu('WORLD_DIALOG_RIGHT_BUTTONS')
	"
	onClose
	"
		Infinity_PopMenu('WORLD_DIALOG_RIGHT_BUTTONS')
	"
	label
	{
		area 0 0 80 1536
		mosaic GUIWRSP
	}
}
menu
{
	name 'WORLD_DIALOG_RIGHT_BUTTONS'
	align right center
	ignoreEsc
	--ignoreFocus 1
	enabled "canShowDialogButton(11)"
	label
	{
		area 0 0 85 780
		rectangle 4
	}
	button
	{
		area 15 25 54 54
		bam CBUTT
		scaleToClip
		text lua "'11'"
		text style "button"
		text shadow 1
		pad -3 -6 0 0
		enabled "canShowDialogButton(11)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[11].marker)
		"
	}
	button
	{
		area 15 100 54 54
		bam CBUTT
		scaleToClip
		text lua "'12'"
		text style "button"
		text shadow 1
		pad -3 -6 0 0
		enabled "canShowDialogButton(12)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[12].marker)
		"
	}
	button
	{
		area 15 175 54 54
		bam CBUTT
		scaleToClip
		text lua "'13'"
		text style "button"
		text shadow 1
		pad -3 -6 0 0
		enabled "canShowDialogButton(13)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[13].marker)
		"
	}
	button
	{
		area 15 250 54 54
		bam CBUTT
		scaleToClip
		text lua "'14'"
		text style "button"
		text shadow 1
		pad -3 -6 0 0
		enabled "canShowDialogButton(14)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[14].marker)
		"
	}
	button
	{
		area 15 325 54 54
		bam CBUTT
		scaleToClip
		text lua "'15'"
		text style "button"
		text shadow 1
		pad -3 -6 0 0
		enabled "canShowDialogButton(15)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[15].marker)
		"
	}
	button
	{
		area 15 400 54 54
		bam CBUTT
		scaleToClip
		text lua "'16'"
		text style "button"
		text shadow 1
		pad -3 -6 0 0
		enabled "canShowDialogButton(16)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[16].marker)
		"
	}
	button
	{
		area 15 475 54 54
		bam CBUTT
		scaleToClip
		text lua "'17'"
		text style "button"
		text shadow 1
		pad -3 -6 0 0
		enabled "canShowDialogButton(17)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[17].marker)
		"
	}

	button
	{
		area 15 550 54 54
		bam CBUTT
		scaleToClip
		text lua "'18'"
		text style "button"
		text shadow 1
		pad -3 -6 0 0
		enabled "canShowDialogButton(18)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[18].marker)
		"
	}

	button
	{
		area 15 625 54 54
		bam CBUTT
		scaleToClip
		text lua "'19'"
		text style "button"
		text shadow 1
		pad -3 -6 0 0
		enabled "canShowDialogButton(19)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[19].marker)
		"
	}
	button
	{
		area 15 700 54 54
		bam CBUTT
		scaleToClip
		text lua "'20'"
		text style "button"
		text shadow 1
		pad -3 -6 0 0
		enabled "canShowDialogButton(20)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[20].marker)
		"
	}
}
`
	currentButtonHelp = 11
	buttonHelp = 
	{
		{'GUILS10', 	 0,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_RETURNTOGAME'}, 			--  1	return to game
		{'GUILS10', 	 1,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_MAP'}, 					--  2	map
		{'GUILS10', 	 2,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_JOURNAL'},				--  3	journal
		{'GUILS10', 	 3,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_INVENTORY'}, 				--  4	inventory
		{'GUILS10', 	 4,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_CHARACTERRECORD'}, 		--  5	record
		{'GUILS10', 	 5,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_MAGESPELLS'}, 			--  6	mage book
		{'GUILS10', 	 6,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_PRIESTSPELLS'}, 			--  7	priest scroll
		{'GUILS10', 	 7,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_OPTIONS'}, 				--  8	options
		{'GUILS10', 	 8,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_CHARACTERARBITRATION'}, 	--  9	arbitration
		{'GUILS10', 	15,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_QUICKSAVE'}, 				-- 10	quick save
		{'GUILS10', 	16,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_HELP'}, 					-- 11	help
		{'GUILS10', 	 9,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_REST'}, 					-- 12	rest
		{'GUILS10', 	14,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_SELECT'}, 				-- 13	drag
		{'GUILS10', 	11,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_HIGHLIGHT'}, 				-- 14	highlight
		{'GUILS10', 	10,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_TOGGLEAI'}, 				-- 15	ai
		{'GUILS10', 	13,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_SELECTALL'}, 				-- 16	select all
		{'',            -1,	0,	0,	0, -1,			'',	'HELPTUTORIAL_CHARACTERPORTRAITS'}, 	-- 17	player 1
		{'',            -1,	1,	0,	0, -1,			'',	'HELPTUTORIAL_CHARACTERPORTRAITS'}, 	-- 18	player 2
		{'',            -1,	2,	0,	0, -1,			'',	'HELPTUTORIAL_CHARACTERPORTRAITS'}, 	-- 19	player 3
		{'',            -1,	3,	0,	0, -1,			'',	'HELPTUTORIAL_CHARACTERPORTRAITS'}, 	-- 20	player 4
		{'',            -1,	4,	0,	0, -1,			'',	'HELPTUTORIAL_CHARACTERPORTRAITS'}, 	-- 21	player 5
		{'',            -1,	5,	0,	0, -1,			'',	'HELPTUTORIAL_CHARACTERPORTRAITS'}, 	-- 22	player 6
		{'',            -1,	-1,	1,	0, -1,			'',	'HELPTUTORIAL_CLOCK'}, 					-- 23	clock
		{'ROUNDBUT',	 0,	-1,	0,	1, -1,			'',	'HELPTUTORIAL_QUICKLOOT'}, 				-- 24	quick loot
		{'GUIBTACT',	64,	-1,	0,	0,  0,			'',	'HELPTUTORIAL_ARROWLEFT'}, 				-- 25
		{'GUIBTACT',	66,	-1,	0,	0,  1,			'',	'HELPTUTORIAL_ARROWRIGHT'}, 			-- 26
		{'GUIBTACT',	22,	-1,	0,	0,  2,			'',	'HELPTUTORIAL_BARDSONG'}, 				-- 27
		{'GUIBTACT',	12,	-1,	0,	0,  3,			'',	'HELPTUTORIAL_CASTSPELLS'}, 			-- 28
		{'GUIBTACT',	34,	-1,	0,	0,  4,			'',	'HELPTUTORIAL_FINDTRAPS'}, 				-- 29
		{'GUIBTACT',	 4,	-1,	0,	0,  5,			'',	'HELPTUTORIAL_DIALOG'}, 				-- 30
		{'GUIBTACT',	20,	-1,	0,	0,  6,			'',	'HELPTUTORIAL_QUICKFORMATION'}, 		-- 31
		{'GUIBTACT',	 0,	-1,	0,	0,  7,			'',	'HELPTUTORIAL_DEFEND'}, 				-- 32
		{'GUIBTACT',	14,	-1,	0,	0,  8,			'',	'HELPTUTORIAL_ATTACK'}, 				-- 33
		{'GUIBTACT',	40,	-1,	0,	0,  9,			'',	'HELPTUTORIAL_SHAPECHANGE'}, 			-- 34
		{'GUIBTACT',	38,	-1,	0,	0, 10,			'',	'HELPTUTORIAL_SPECIALABILITIES'}, 		-- 35
		{'GUIBTACT',	30,	-1,	0,	0, 11,			'',	'HELPTUTORIAL_STEALTH'}, 				-- 36
		{'GUIBTACT',	26,	-1,	0,	0, 12,			'',	'HELPTUTORIAL_THIEVING'}, 				-- 37
		{'GUIBTACT',	 8,	-1,	0,	0, 13,			'',	'HELPTUTORIAL_TURNUNDEAD'}, 			-- 38
		{'GUIBTACT',	18,	-1,	0,	0, 14,			'',	'HELPTUTORIAL_USEITEM'}, 				-- 39
		{'GUIBTACT',	58,	-1,	0,	0, 15,			'',	'HELPTUTORIAL_STOP'}, 					-- 40
		{'GUIBTACT',	20,	-1,	0,	0, 16,			'',	'HELPTUTORIAL_QUICKFORMATION'}, 		-- 41
		{'GUIBTACT',	20,	-1,	0,	0, 17,			'',	'HELPTUTORIAL_QUICKFORMATION'}, 		-- 42
		{'GUIBTACT',	20,	-1,	0,	0, 18,			'',	'HELPTUTORIAL_QUICKFORMATION'}, 		-- 43
		{'GUIBTACT',	20,	-1,	0,	0, 19,			'',	'HELPTUTORIAL_QUICKFORMATION'}, 		-- 44
		{'GUIBTACT',	20,	-1,	0,	0, 20,			'',	'HELPTUTORIAL_QUICKFORMATION'}, 		-- 45
		{'STONSLOT',	-1,	-1,	0,	0, 21,	'STONITEM',	'HELPTUTORIAL_QUICKITEM'}, 				-- 46
		{'STONSLOT',	-1,	-1,	0,	0, 22,	'STONITEM',	'HELPTUTORIAL_QUICKITEM'}, 				-- 47
		{'STONSLOT',	-1,	-1,	0,	0, 23,	'STONITEM',	'HELPTUTORIAL_QUICKITEM'}, 				-- 48
		{'STONSLOT',	12,	-1,	0,	0, 24,	'STONSPEL',	'HELPTUTORIAL_QUICKSPELLS'}, 			-- 49
		{'STONSLOT',	12,	-1,	0,	0, 25,	'STONSPEL',	'HELPTUTORIAL_QUICKSPELLS'}, 			-- 50
		{'STONSLOT',	12,	-1,	0,	0, 26,	'STONSPEL',	'HELPTUTORIAL_QUICKSPELLS'}, 			-- 51
		{'STONSLOT',	-1,	-1,	0,	0, 27,	'STONWEAP',	'HELPTUTORIAL_QUICKWEAPON'}, 			-- 52
		{'STONSLOT',	-1,	-1,	0,	0, 28,	'STONWEAP',	'HELPTUTORIAL_QUICKWEAPON'}, 			-- 53
		{'STONSLOT',	-1,	-1,	0,	0, 29,	'STONWEAP',	'HELPTUTORIAL_QUICKWEAPON'}, 			-- 54
		{'STONSLOT',	-1,	-1,	0,	0, 30,	'STONWEAP',	'HELPTUTORIAL_QUICKWEAPON'}, 			-- 55
		{'STONSLOT',	-1,	-1,	0,	0, 31,			'',	'HELPTUTORIAL_CONFIGURATION'}, 			-- 56
		{'STONSLOT',	-1,	-1,	0,	0, 32,			'',	'HELPTUTORIAL_CONFIGURATION'}, 			-- 57
		{'STONSLOT',	-1,	-1,	0,	0, 33,			'',	'HELPTUTORIAL_CONFIGURATION'}, 			-- 58
		{'STONSLOT',	-1,	-1,	0,	0, 34,			'',	'HELPTUTORIAL_CONFIGURATION'}, 			-- 59
		{'STONSLOT',	-1,	-1,	0,	0, 35,			'',	'HELPTUTORIAL_CONFIGURATION'}, 			-- 60
		{'STONSLOT',	-1,	-1,	0,	0, 36,			'',	'HELPTUTORIAL_CONFIGURATION'}, 			-- 61
		{'STONSLOT',	-1,	-1,	0,	0, 37,			'',	'HELPTUTORIAL_CONFIGURATION'}, 			-- 62
		{'STONSLOT',	-1,	-1,	0,	0, 38,			'',	'HELPTUTORIAL_CONFIGURATION'}, 			-- 63
		{'STONSLOT',	-1,	-1,	0,	0, 39,			'',	'HELPTUTORIAL_CONFIGURATION'}, 			-- 64
		{'STONSLOT',	-1,	-1,	0,	0, 40,			'',	'HELPTUTORIAL_CONFIGURATION'}, 			-- 65
		{'STONSLOT',	-1,	-1,	0,	0, 41,			'',	'HELPTUTORIAL_CONFIGURATION'}, 			-- 66
		{'STONSLOT',	-1,	-1,	0,	0, 42,			'',	'HELPTUTORIAL_CONFIGURATION'}, 			-- 67
		{'STONSLOT',	-1,	-1,	0,	0, 43,			'',	'HELPTUTORIAL_ARROWLEFT'}, 				-- 68
		{'STONSLOT',	-1,	-1,	0,	0, 44,			'',	'HELPTUTORIAL_ARROWRIGHT'}, 			-- 69
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{'STONSLOT',	-1,	-1,	0,	0, 67,			'',	'HELPTUTORIAL_SWITCHTOMAGE'}, 			-- 91
		{},
		{'STONSLOT',	-1,	-1,	0,	0, 69,			'',	'HELPTUTORIAL_SWITCHTOCLERIC'}, 		-- 93
	}
`
menu
{
	name 'HELP'
	align center center
	ignoreEsc
	onOpen
	"
		currentButtonHelp = 11
		Infinity_PushMenu('LEFT_SIDEBAR_HELP')
		Infinity_PushMenu('RIGHT_SIDEBAR_HELP')
		Infinity_PushMenu('WORLD_ACTIONBAR_HELP')
	"
	onClose
	"
		Infinity_PopMenu('LEFT_SIDEBAR_HELP')
		Infinity_PopMenu('RIGHT_SIDEBAR_HELP')
		Infinity_PopMenu('WORLD_ACTIONBAR_HELP')
	"
	label
	{
		area 0 0 400 458
		mosaic GUIERR7
	}
	label
	{
		enabled "buttonHelp[currentButtonHelp][3] == -1 and buttonHelp[currentButtonHelp][4] == 0 and buttonHelp[currentButtonHelp][5] == 0 and buttonHelp[currentButtonHelp][6] == -1"
		area 34 24 75 54
		bam lua "buttonHelp[currentButtonHelp][1]"
		sequence lua "buttonHelp[currentButtonHelp][2]"
	}
	label
	{
		enabled "buttonHelp[currentButtonHelp][3] == -1 and buttonHelp[currentButtonHelp][4] == 0 and buttonHelp[currentButtonHelp][5] ~= 0 and buttonHelp[currentButtonHelp][6] == -1"
		area 34 24 44 44
		bam lua "buttonHelp[currentButtonHelp][1]"
		sequence lua "buttonHelp[currentButtonHelp][2]"
		scaleToClip
	}
	label
	{
		enabled "buttonHelp[currentButtonHelp][3] == -1 and buttonHelp[currentButtonHelp][4] == 0 and buttonHelp[currentButtonHelp][5] == 0 and buttonHelp[currentButtonHelp][6] ~= -1"
		area 34 24 75 54
		bam lua "buttonHelp[currentButtonHelp][1]"
		frame lua "buttonHelp[currentButtonHelp][2]"
	}
	button
	{
		area 34 24 64 90
		enabled "buttonHelp[currentButtonHelp][3] ~= -1"
		portrait lua "buttonHelp[currentButtonHelp][3]"
	}

	label
	{
		enabled "buttonHelp[currentButtonHelp][4] ~= 0"
		area 29 16 95 120
		bam "CGEAR"
		frame lua "timer:GetCurrentTime() % 24"
	}
	label
	{
		enabled "buttonHelp[currentButtonHelp][4] ~= 0"
		area 29 16 95 120
		bam "CDIAL"
		frame lua "timer:GetCurrentHour() % timer.TIMESCALE_HOUR_PER_DAY"
	}
	label
	{
		enabled "buttonHelp[currentButtonHelp][4] ~= 0"
		area 29 16 95 120
		bam "CPEN"
		frame lua "timer:GetCurrentTime() % 24"
	}

	label
	{
		enabled "buttonHelp[currentButtonHelp][7] ~= ''"
		area 34 24 52 52
		align center center
		bam lua "buttonHelp[currentButtonHelp][7]"
		frame lua "buttonHelp[currentButtonHelp][7]"
	}

	label
	{
		area 118 24 752 120
		text lua "t(buttonHelp[currentButtonHelp][8])"
		text style	"label"
		text align left top
	}
	button
	{
		area 306 164 300 40
		bam GUIBUTWT
		text "DONE_BUTTON"
		text style	"button"
		text shadow 1
		action 
		"
			Infinity_PopMenu('HELP')
		"
	}
}

menu
{
	name 'LEFT_SIDEBAR_HELP'
	align left top
	ignoreEsc
	onOpen 
	"
		Infinity_PushMenu('LEFT_SIDEBAR_BOTTOM_HELP')
	"
	onClose 
	"
		Infinity_PopMenu('LEFT_SIDEBAR_BOTTOM_HELP')
	"
	label
	{
		name 'leftSidebarBackground'
		area 0 0 83 1536
		mosaic GUIWLSP
	}
	label
	{

		area 0 1536 80 1536
		mosaic GUIWLSP
	}
	button
	{
		area 3 14 73 55
		bam GUILS10
		sequence 0
		tooltip lua "getTooltipWithHotkey(2,24364)"
		glow lua "true"
		action
		"
			currentButtonHelp = 1
		"
	}
	button
	{
		area 3 69 73 55
		bam GUILS10
		sequence 1
		tooltip lua "getTooltipWithHotkey(4,15418)"
		glow lua "true"
		action
		"
			currentButtonHelp = 2
		"
	}
	button
	{
		area 3 124 73 55
		bam GUILS10
		sequence 2
		tooltip lua "getTooltipWithHotkey(3,24359)"
		glow lua "true"
		action
		"
			currentButtonHelp = 3
		"
	}
	button
	{
		area 3 179 73 55
		bam GUILS10
		sequence 3
		tooltip lua "getTooltipWithHotkey(0,24358)"
		glow lua "true"
		action
		"
			currentButtonHelp = 4
		"
	}
	button
	{
		area 3 234 73 55
		bam GUILS10
		sequence 4
		tooltip lua "getTooltipWithHotkey(1,24356)"
		glow lua "true"
		action
		"
			currentButtonHelp = 5
		"
	}
	button
	{
		area 3 289 73 55
		bam GUILS10
		sequence 5
		tooltip lua "getTooltipWithHotkey(5,24360)"
		glow lua "true"
		action
		"
			currentButtonHelp = 6
		"
	}
	button
	{
		area 2 244 73 55
		bam GUILS10
		sequence 6
		tooltip lua "getTooltipWithHotkey(6,24357)"
		glow lua "true"
		action
		"
			currentButtonHelp = 7
		"
	}
	button
	{
		area 2 299 73 55
		bam GUILS10
		sequence 7
		tooltip lua "getTooltipWithHotkey(7,24362)"
		glow lua "true"
		action
		"
			currentButtonHelp = 8
		"
	}
	button
	{
		area 3 454 73 55
		enabled "e:IsMultiplayer()"
		bam GUILS10
		sequence 8
		tooltip lua "getTooltipWithHotkey(8,24363)"
		glow lua "true"
		action
		"
			currentButtonHelp = 9
		"
	}
}
menu
{
	name 'LEFT_SIDEBAR_BOTTOM_HELP'
	align left bottom
	offset 0 -22
	--combined height of these buttons makes a menu with height = 231, menu is placed into lower left. y pos is offset from top of this menu.
	ignoreEsc
	button
	{
		area 3 0 73 55
		enabled "worldScreen == e:GetActiveEngine()"
		bam GUILS10
		sequence 15
		tooltip lua "getTooltipWithHotkey(28,31813)"
		glow lua "true"
		action
		"
			currentButtonHelp = 10
		"
	}
	button
	{
		area 3 56 73 55
		enabled "worldScreen == e:GetActiveEngine()"
		bam GUILS10
		sequence 16
		tooltip lua "Infinity_FetchString(31827)"  --"getTooltipWithHotkey(16,31827)"
		glow lua "true"
		action
		"
			currentButtonHelp = 11
		"
	}
	button
	{
		area 3 110 73 55
		bam GUILS10
		sequence 9
		tooltip lua "getTooltipWithHotkey(31,11942)"
		glow lua "true"
		action
		"
			currentButtonHelp = 12
		"
	}
	
	
	--begin clock
	label
	{
		enabled "worldScreen == e:GetActiveEngine()"
		area 0 182 73 55
		bam "CGEAR"
		frame lua "timer:GetCurrentTime() % 24"
		useOverlayTint "worldScreen:CheckIfPaused()"
		overlayTint 180 180 180
	}
	label
	{
		enabled "worldScreen == e:GetActiveEngine()"
		area 0 182 73 55
		bam "CDIAL"
		frame lua "timer:GetCurrentHour() % timer.TIMESCALE_HOUR_PER_DAY"
		useOverlayTint "worldScreen:CheckIfPaused()"
		overlayTint 180 180 180
	}
	label
	{
		enabled "worldScreen == e:GetActiveEngine()"
		area 0 182 73 55
		bam "CPEN"
		frame lua "timer:GetCurrentTime() % 24"
		useOverlayTint "worldScreen:CheckIfPaused()"
		overlayTint 180 180 180
	}
	button
	{
		enabled "worldScreen == e:GetActiveEngine()"
		area 0 182 73 55
		tooltip lua "worldScreen:GetCurrentTimeString()"
		glow lua "true"
		action
		"
			currentButtonHelp = 23
		"
	}
	--end clock
	label
	{
		--area is preset
		enabled "gameOptions.m_bRenderFrameTimes"
		frameTimes
	}
}

menu
{
	name 'RIGHT_SIDEBAR_HELP'
	align right top
	ignoreEsc
	onOpen
	"
		Infinity_PushMenu('RIGHT_SIDEBAR_BOTTOM_HELP')
	"
	onClose
	"
		Infinity_PopMenu('RIGHT_SIDEBAR_BOTTOM_HELP')
	"
	label
	{
		name 'rightSidebarBackground'
		area 0 0 80 1536
		mosaic GUIWRSP
	}
	label
	{
		area 0 1536 80 1536
		mosaic GUIWRSP
	}
	button
	{
		area 11 14 64 90
		portrait 0
		bam GUIRSP10
		enabled "Infinity_GetNumCharacters() > 0"
		glow lua "true"
		action
		"
			currentButtonHelp = 17
		"
		tooltip lua "Infinity_GetPortraitTooltip(0)"
	}
	button
	{
		area 11 106 64 90
		portrait 1
		bam GUIRSP10
		enabled "Infinity_GetNumCharacters() > 1"
		glow lua "true"
		action
		"
			currentButtonHelp = 18
		"
		tooltip lua "Infinity_GetPortraitTooltip(1)"
	}
	button
	{
		area 11 198 64 90
		portrait 2
		bam GUIRSP10
		enabled "Infinity_GetNumCharacters() > 2"
		glow lua "true"
		action
		"
			currentButtonHelp = 19
		"
		tooltip lua "Infinity_GetPortraitTooltip(2)"
	}
	button
	{
		area 11 290 64 90
		portrait 3
		bam GUIRSP10
		enabled "Infinity_GetNumCharacters() > 3"
		glow lua "true"
		action
		"
			currentButtonHelp = 20
		"
		tooltip lua "Infinity_GetPortraitTooltip(3)"
	}
	button
	{
		area 11 382 64 90
		portrait 4
		bam GUIRSP10
		enabled "Infinity_GetNumCharacters() > 4"
		glow lua "true"
		action
		"
			currentButtonHelp = 21
		"
		tooltip lua "Infinity_GetPortraitTooltip(4)"
	}
	button
	{
		area 11 474 64 90
		portrait 5
		bam GUIRSP10
		enabled "Infinity_GetNumCharacters() > 5"
		glow lua "true"
		action
		"
			currentButtonHelp = 22
		"
		tooltip lua "Infinity_GetPortraitTooltip(5)"
	}
}
menu
{
	name 'RIGHT_SIDEBAR_BOTTOM_HELP'
	align right bottom
	ignoreEsc
	--Buttons form a menu aligned bottom right, with height = 197, y is offset from top of that menu.
	button
	{
		area 6 0 71 48
		enabled "e:IsTouchUI() and worldScreen == e:GetActiveEngine()"
		bam GUILS10
		sequence 14
		glow lua "true"
		action
		"
			currentButtonHelp = 13
		"
	}
	button
	{
		area 6 49 71 48
		enabled "worldScreen == e:GetActiveEngine()"
		tooltip lua "Infinity_FetchString(32729)"
		bam GUILS10
		sequence 11
		glow lua "true"
		action
		"
			currentButtonHelp = 14
		"
	}
	button
	{
		area 6 99 71 48
		enabled "worldScreen == e:GetActiveEngine()"
		tooltip lua "getPartyAITooltip()"
		bam GUILS10
		sequence 10
		glow lua "true"
		action
		"
			currentButtonHelp = 15
		"
	}
	button
	{
		area 6 149 71 48
		enabled "worldScreen == e:GetActiveEngine()"
		tooltip lua "Infinity_FetchString(10485)"
		bam GUILS10
		sequence 13
		glow lua "true"
		action
		"
			currentButtonHelp = 16
		"
	}
}
menu
{
	name "WORLD_ACTIONBAR_HELP"
	align center bottom
	onOpen 
	"
	"
	onClose 
	"
	"
	ignoreEsc
	label
	{
		area 0 0 748 60
		mosaic GUWBTP10
	}
	button
	{
		area 21 12 32 32
		bam ROUNDBUT
		glow lua "true"
		scaleToClip
		action
		"
			currentButtonHelp = 24
		"
	}
	button
	{
		area 68 1 52 52
		actionBar 0
		enabled "buttonArray:GetButtonEnabled(0)"
		tooltip lua "actionBarTooltip[0]"
		glow lua "true"
		action
		"
			currentButtonHelp = 25 + buttonArray:GetButtonType(0)
		"
	}
	button
	{
		area 122 1 52 52
		actionBar 1
		enabled "buttonArray:GetButtonEnabled(1)"
		tooltip lua "actionBarTooltip[1]"
		glow lua "true"
		action
		"
			currentButtonHelp = 25 + buttonArray:GetButtonType(1)
		"
	}
	button
	{
		area 177 1 52 52
		actionBar 2
		enabled "buttonArray:GetButtonEnabled(2)"
		tooltip lua "actionBarTooltip[2]"
		glow lua "true"
		action
		"
			currentButtonHelp = 25 + buttonArray:GetButtonType(2)
		"
	}
	button
	{
		area 231 1 52 52
		actionBar 3
		enabled "buttonArray:GetButtonEnabled(3)"
		tooltip lua "actionBarTooltip[3]"
		glow lua "true"
		action
		"
			currentButtonHelp = 25 + buttonArray:GetButtonType(3)
		"
	}
	button
	{
		area 299 1 52 52
		actionBar 4
		enabled "buttonArray:GetButtonEnabled(4)"
		tooltip lua "actionBarTooltip[4]"
		glow lua "true"
		action
		"
			currentButtonHelp = 25 + buttonArray:GetButtonType(4)
		"
	}
	button
	{
		area 353 1 52 52
		actionBar 5
		enabled "buttonArray:GetButtonEnabled(5)"
		tooltip lua "actionBarTooltip[5]"
		glow lua "true"
		action
		"
			currentButtonHelp = 25 + buttonArray:GetButtonType(5)
		"
	}
	button
	{
		area 407 1 52 52
		actionBar 6
		enabled "buttonArray:GetButtonEnabled(6)"
		tooltip lua "actionBarTooltip[6]"
		glow lua "true"
		action
		"
			currentButtonHelp = 25 + buttonArray:GetButtonType(6)
		"
	}
	button
	{
		area 461 1 52 52
		actionBar 7
		enabled "buttonArray:GetButtonEnabled(7)"
		tooltip lua "actionBarTooltip[7]"
		glow lua "true"
		action
		"
			currentButtonHelp = 25 + buttonArray:GetButtonType(7)
		"
	}
	
	button
	{
		area 528 1 52 52
		actionBar 8
		enabled "buttonArray:GetButtonEnabled(8)"
		tooltip lua "actionBarTooltip[8]"
		glow lua "true"
		action
		"
			currentButtonHelp = 25 + buttonArray:GetButtonType(8)
		"
	}
	button
	{
		area 582 1 52 52
		actionBar 9
		enabled "buttonArray:GetButtonEnabled(9)"
		tooltip lua "actionBarTooltip[9]"
		glow lua "true"
		action
		"
			currentButtonHelp = 25 + buttonArray:GetButtonType(9)
		"
	}
	button
	{
		area 636 1 52 52
		actionBar 10
		enabled "buttonArray:GetButtonEnabled(10)"
		tooltip lua "actionBarTooltip[10]"
		glow lua "true"
		action
		"
			currentButtonHelp = 25 + buttonArray:GetButtonType(10)
		"
	}
	button
	{
		area 689 1 52 52
		actionBar 11
		enabled "buttonArray:GetButtonEnabled(11)"
		tooltip lua "actionBarTooltip[11]"
		glow lua "true"
		action
		"
			currentButtonHelp = 25 + buttonArray:GetButtonType(11)
		"
	}
}